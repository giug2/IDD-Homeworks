{
    "id_table_1": {
        "caption": "Table 1.  Expected inference error of Laplace and Laplace + TransProtect (km)",
        "table": "A1.EGx1",
        "footnotes": [
            "",
            "",
            "",
            ""
        ],
        "references": [
            "Our findings also reveal that the vulnerability of Geo-Ind to context-aware inference attacks largely stems from its failure to account for the constraints of road networks and traffic conditions on vehicle mobility. As depicted in Fig.  1 (a), many locations within the obfuscation range, though compliant with Geo-Ind, are deemed impossible when contextual data is considered. This allows the VehiTrack model to significantly narrow its search for actual locations-on average, 81.69% of locations can be dismissed by incorporating road and traffic constraints. Motivated by this observation, we developed a new geo-obfuscation method called  TransProtect . This approach ensures that the chosen obfuscated locations conform to realistic vehicle movement patterns, making it challenging for VehiTrack to effectively reduce the search range using contextual information.",
            "TransProtect is designed to create synthetic trajectories to closely emulate the vehicles actual mobility. As Fig.  1 (b) shows, TransProtect can be integrated into the current geo-obfuscation framework to confine the obfuscation range to a set of locations within the generated synthetic trajectories, called candidate locations. Consequently, the obfuscated location chosen from candidate locations has to adhere to the realistic vehicles mobility patterns, which effectively prevents attackers from excluding any impossible locations using context-aware inference approaches like VehiTrack.",
            "In this Section, we introduce the preliminary knowledge of geo-obfuscation (Section  2.1 ), its privacy criterion Geo-Ind (Section  2.2 ), and the limitation of Geo-Ind (Section  2.3 ).",
            "Although the server takes charge of generating the obfuscation function, the vehicles exact locations are still hidden from the server since the obfuscated locations are selected in a probabilistic manner  ( Wang-WWW2017,  ) . Specifically, the obfuscation function is designed to satisfy Geo-Ind  ( Andres-CCS2013,  ) , which requires that even if an attacker has obtained a vehicles reported (obfuscated) location and the obfuscation function from the server, it is still hard for the attacker to distinguish the vehicles real location  v i subscript v i v_{i} italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  from any nearby location  v j subscript v j v_{j} italic_v start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT .  Geo-Ind  is formally defined in  Definition  2.1 :",
            "LP formulation . Many recent works  ( Wang-WWW2017,  ;  Qiu-TMC2020,  )  address the quality issue caused by geo-obfuscation using  linear programming (LP) , of which the objective is to minimize the data quality loss while ensuring Geo-Ind is maintained. The LP is then formulated to optimize the values of  Z Z \\mathbf{Z} bold_Z , which comprises  K 2 superscript K 2 K^{2} italic_K start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  decision variables (entries). Besides satisfying Geo-Ind in Equ. ( 1 ), for each real location  v i subscript v i v_{i} italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , the sum probability of the obfuscated locations should be 1 (probability unit measure), i.e.,",
            "We let  UL  ( Z ) UL Z \\mathrm{UL}(\\mathbf{Z}) roman_UL ( bold_Z )  denote the  utility loss  caused by the obfuscation matrix  Z Z \\mathbf{Z} bold_Z , where  UL  ( Z ) UL Z \\mathrm{UL}(\\mathbf{Z}) roman_UL ( bold_Z )  is assumed to be a linear function of  Z Z \\mathbf{Z} bold_Z   ( Wang-WWW2017,  ;  Qiu-TMC2020,  ) . Finally, the LP is formulated to minimize  UL  ( Z ) UL Z \\mathrm{UL}\\left(\\mathbf{Z}\\right) roman_UL ( bold_Z )  while satisfying the constraints of the probability unit measure (Equ. ( 2 )) and Geo-Ind (Equ. ( 1 )):",
            "VehiTrack improves the accuracy of the posterior sequence  p  ( x 1 | y ~ 1 ) , ... , p  ( x N | y ~ N ) p conditional subscript x 1 subscript ~ y 1 ... p conditional subscript x N subscript ~ y N p(x_{1}|\\tilde{y}_{1}),...,p(x_{N}|\\tilde{y}_{N}) italic_p ( italic_x start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT | over~ start_ARG italic_y end_ARG start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ) , ... , italic_p ( italic_x start_POSTSUBSCRIPT italic_N end_POSTSUBSCRIPT | over~ start_ARG italic_y end_ARG start_POSTSUBSCRIPT italic_N end_POSTSUBSCRIPT ) , by considering the  long-term correlation  of the vehicles locations using  Long Short-Term Memory (LSTM)  neural networks (Section  3.1 ).",
            "Before introducing the details of the above two phases, in Section  3.1 , we first describe the mathematical models used in VehiTrack, including the main notations and assumptions.",
            "Proof Sketch : We prove that for   v k  R n i for-all subscript v k subscript superscript R i n \\forall v_{k}\\in\\mathcal{R}^{i}_{n}  italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT  caligraphic_R start_POSTSUPERSCRIPT italic_i end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT , if  c v i , v k  t n  t n  1 subscript c subscript v i subscript v k subscript t n subscript t n 1 c_{v_{i},v_{k}}\\leq t_{n}-t_{n-1} italic_c start_POSTSUBSCRIPT italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT end_POSTSUBSCRIPT  italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_n - 1 end_POSTSUBSCRIPT , then  v k subscript v k v_{k} italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT  is included in  S  P  T i S P subscript T i SPT_{i} italic_S italic_P italic_T start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , and also its distance to  v i subscript v i v_{i} italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  is equal to  c v i , v k subscript c subscript v i subscript v k c_{v_{i},v_{k}} italic_c start_POSTSUBSCRIPT italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT end_POSTSUBSCRIPT  in  S  P  T i S P subscript T i SPT_{i} italic_S italic_P italic_T start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT . We prove it by contradiction, where the detailed proof can be found in Section  A.1  in Appendix.",
            "We carry out an extensive simulation to assess the performance of our location inference algorithm  VehiTrack  and our new LPPM  TransProtect  in Section  5.2  ( Experiment I ) and Section  5.3   ( Experiment II ), respectively, with the comparison of a list of state-of-the-art methods. In Section  5.1 , we first introduce the settings of the experiment, including the real-world dataset used in the simulation, the benchmarks, and the performance metrics 1 1 1 The source code of both VehiTrack and TransProtect is available at:  https://github.com/sourabhy1797/VehiTrack . .",
            "In both Experiments I&II, we measure two metrics: (1)  expected inference errors (EIE) , which is defined as the expected error between the estimated locations (by attackers) and the vehicles actual locations, and (2)  data utility loss , which is defined as the expected distortion of estimated traveling cost (in Equ. ( 13 )).",
            "The main experimental results regarding inference error and data utility loss in Experiments I and II are listed in Table  1 & 2  and Table  3 , respectively.",
            "We randomly select 100 trajectories from the Rome and San Francisco Taxicab datasets to simulate the vehicles mobility. We use Laplace and LP to obfuscate all the locations within each trajectory, with locations recorded approximately every 20 seconds for both datasets. We then apply the four location inference algorithms, VehiTrack, VehiTrack-I, HMM, and Bayes to infer the vehicles real locations from the obfuscated locations, of which the expected inference errors are compared in Experiment I in Table  1  (Laplace) and Table  2  (LP). Based on the two tables, we have the following observations:",
            "(1) Context-free location inference method Bayes has the highest inference error . On average, if we apply Laplacian noise as obfuscation methods, the inference error of Bayes is respectively 199.19%, 2.97%, and 156.33% (resp. 131.81%, 64.51%, and 70.00%) higher than that of VehiTrack, VehiTrack-I, and HMM using the Rome dataset (resp. using the San Francisco dataset). If we apply LP as obfuscation methods, the inference error of Bayes is 76.10%, 36.60%, and 36.65% (resp. 95.23%, 28.12%, and 36.66%) higher than that of VehiTrack, VehiTrack-I, and HMM using the Rome dataset (resp. using the San Francisco dataset). Unlike Bayes mainly focusing on single-location inference, the four context-aware inference methods achieve lower inference errors since they all account for the vehicles location correlation using either the road network mobility model (VehiTrack and VehiTrack-I) or Markov Model (HMM). In addition, Fig.  10  in Appendix shows that, on average, VehiTrack-I (and also VehiTrack) eliminates 81.69% (resp. 89.39%)of locations across 100 trajectories of Rome dataset (resp. San Francisco dataset) by considering vehicles mobility restrictions due to the road network. This substantial reduction aids attackers in narrowing down the search range for the vehicles actual locations.",
            "To demonstrate that VehiTrack can better capture the long-term correlation of vehicles locations compared to the benchmarks, among the 100 trajectories, we pick up trajectories that have more than 40 locations. In Fig.  10 (a)(b)(c) and Fig.  10 (a)(b)(c) in Appendix, we exclusively evaluate the inference errors of the four algorithms for these selected long trajectories. The depicted results in the figure highlight that the accuracy advantage of VehiTrack is even more significant compared to the findings in Table  1  and Table  2 , e.g., using the Rome dataset (resp. San Francisco dataset), VehiTracks inference error is  51.36%, 33.33%, and 48.56%  (resp.  41.93%, 25%, and 29.16% ) lower than that of Bayes, VehiTrack-I, and HMM, respectively (consider that for all the 100 trajectories of rome dataset, VehiTracks inference error is 49.77%, 41.41%, and 41.52% lower than that of Bayes, VehiTrack-I, and HMM, respectively).",
            "We apply TransProtect to refine the location set of geo-obfuscation and then assess the inference error of the four location inference algorithms, of which the results are shown in Experiment II in Table  1  (Laplace) and Table  2  (LP). By comparing the experimental results in Experiments I and II, we can check how much privacy improvement is contributed by TransProtect. In the tables, the subscript  (+a%)  means the inference error is increased by  a % percent a a\\% italic_a %  after integrating TransProtect. We have the following observations:",
            "(1) Integrating TransProtect in Laplace and LP increases the expected inference error of the context-aware inference algorithms . On average, employing TransProtect increases the inference error of VehiTrack, VehiTrack-I, and HMM by 40.28%, 18.39%, and 119.41% (resp. 65.77%, 70.74%, and 125%) using Rome dataset (resp. San Francisco dataset). This is because the obfuscation range is restricted to the candidate locations (determined by TransProtect) that are difficult to distinguish from real locations using context-aware inference models. Particularly, Fig.  10 (a)(b) in Appendix shows that with TransProtect integrated, on average using Rome dataset (resp. San Francisco), only 1.45% (resp. 1.59%) locations are eliminated in the obfuscation range by VehiTrack-I when vehicles mobility restrictions are considered, making it difficult for attackers to narrow down the search range for the target locations.",
            "(1) The TransProtect parameters  K K K italic_K  (candidate location set size) and    \\alpha italic_  (utility loss weight) impact the data utiltiy loss . We present the average data utility loss and the expected inference error of Laplace+TransProtect and LP+TransProtect given different  K K K italic_K  and    \\alpha italic_  for the Rome and San Francisco datasets in Fig.  12 (a)(b) and Fig.  12 (a)(b), and Fig.  14 (a)(b) and Fig.  14 (a)(b), respectively. In addition, the expected utility loss and the expected inference error of the two methods with different values of  K K K italic_K  and   italic- \\epsilon italic_  are shown in Table  4  and Table  5 . The figures and tables show that the average data utility loss and expected inference error of Laplace+TransProtect and LP+TransProtect increases with an increase in  K K K italic_K . This is because a higher value of  K K K italic_K  expands the candidate location set, providing a chance for locations with higher data utility loss to be selected.",
            "In Fig.  12 (a)(b), Fig.  12 (a)(b), Fig.  14 (a)(b) and Fig.  14 (a)(b), we find that when    \\alpha italic_  increases, both data utility loss and expected inference error of Laplace+ TransProtect and LP+TransProtect decreases. This is because a higher    \\alpha italic_  value results in locations with lower data utility loss having a comparatively higher score than locations with higher probability scores (output by the Transformer encoder), making them more likely to be selected as candidate locations. Fig.  12 (a)(b) and Fig.  14 (a)(b) provides a visual example, illustrating that when   = 100  100 \\alpha=100 italic_ = 100 , certain locations with higher data utility loss are included in the candidate location set. Conversely, when   = 10 , 000  10 000 \\alpha=10,000 italic_ = 10 , 000 , almost all candidate locations can achieve low data utility loss. Fig.  12 (a)(b) and Fig.  14 (a)(b) also indicates that once    10 , 000  10 000 \\alpha\\geq 10,000 italic_  10 , 000 , data utility loss plays a predominant role in candidate location selection in TransProtect, and further increases in    \\alpha italic_  do not significantly impact data utility loss (as observed when comparing data utility loss at   = 10 , 000  10 000 \\alpha=10,000 italic_ = 10 , 000  and   = 100 , 000  100 000 \\alpha=100,000 italic_ = 100 , 000 ).",
            "In addition, Fig.  15 (a)(b)(c) give illustrative examples to show how  K K K italic_K  and    \\alpha italic_  impact the data utility loss. Fig.  15 (a)(b) shows that when  K K K italic_K  is increased from 10 to 15, more locations with higher data utility loss become part of the candidate location set. Fig.  15 (a)(c) shows that when   = 100  100 \\alpha=100 italic_ = 100 , some locations with higher utility loss are included in the candidate location set, while when   = 10 , 000  10 000 \\alpha=10,000 italic_ = 10 , 000 , almost all the candidate locations can achieve low utility loss. The figure also indicates that when    10 , 000  10 000 \\alpha\\geq 10,000 italic_  10 , 000 , utility loss already achieves the major role in candidate location selection in TransProtect, and further increasing    \\alpha italic_  wont impact the utility loss significantly (by comparing the utility loss when   = 10 , 000 , 100 , 000  10 000 100 000 \\alpha=10,000,100,000 italic_ = 10 , 000 , 100 , 000 )."
        ]
    },
    "id_table_2": {
        "caption": "Table 2.  Expected inference error of LP and LP + TransProtect (km)",
        "table": "S5.T1.26",
        "footnotes": [],
        "references": [
            "The rest of the paper is organized as follows: Section  2  gives the preliminaries of Geo-Ind. Section  3  introduces the new threat model VehiTrack and Section  4  describes the countermeasure TransProtect. Section  5  evaluates the performance of both VehiTrack and TransProtect. Section  6  presents the related work. Finally, Section  7  makes a conclusion.",
            "In this Section, we introduce the preliminary knowledge of geo-obfuscation (Section  2.1 ), its privacy criterion Geo-Ind (Section  2.2 ), and the limitation of Geo-Ind (Section  2.3 ).",
            "Although the server takes charge of generating the obfuscation function, the vehicles exact locations are still hidden from the server since the obfuscated locations are selected in a probabilistic manner  ( Wang-WWW2017,  ) . Specifically, the obfuscation function is designed to satisfy Geo-Ind  ( Andres-CCS2013,  ) , which requires that even if an attacker has obtained a vehicles reported (obfuscated) location and the obfuscation function from the server, it is still hard for the attacker to distinguish the vehicles real location  v i subscript v i v_{i} italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  from any nearby location  v j subscript v j v_{j} italic_v start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT .  Geo-Ind  is formally defined in  Definition  2.1 :",
            "We let  UL  ( Z ) UL Z \\mathrm{UL}(\\mathbf{Z}) roman_UL ( bold_Z )  denote the  utility loss  caused by the obfuscation matrix  Z Z \\mathbf{Z} bold_Z , where  UL  ( Z ) UL Z \\mathrm{UL}(\\mathbf{Z}) roman_UL ( bold_Z )  is assumed to be a linear function of  Z Z \\mathbf{Z} bold_Z   ( Wang-WWW2017,  ;  Qiu-TMC2020,  ) . Finally, the LP is formulated to minimize  UL  ( Z ) UL Z \\mathrm{UL}\\left(\\mathbf{Z}\\right) roman_UL ( bold_Z )  while satisfying the constraints of the probability unit measure (Equ. ( 2 )) and Geo-Ind (Equ. ( 1 )):",
            "VehiTrack estimates the posterior  p  ( x n | y ~ n ) p conditional subscript x n subscript ~ y n p(x_{n}|\\tilde{y}_{n}) italic_p ( italic_x start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT | over~ start_ARG italic_y end_ARG start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT )  of the vehicles location at each time slot  t n subscript t n t_{n} italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT , by considering the  short-term correlation  of the vehicles locations using a  mobility   restriction-aware Bayesian inference model  (Section  3.2 ).",
            "As demonstrated in our experiments detailed in Section  5.2 , on average, using rome dataset (resp. using the San Francisco dataset), VehiTrack achieves a 65.54% and 45.93% (resp. 56.86% and 48.78%) reduction in inference errors corresponding to the Laplacian and Linear Programming methods respectively, compared to the classic Bayesian inference algorithm. Our findings also reveal that, by incorporating contextual information such as the road network and traffic flow, VehiTrack can eliminate a significant percentage of locations within the obfuscation range. For instance, in our experiment in Section  5 , using rome dataset (resp. using the San Francisco dataset) on average, 81.99% (resp. 81.39) of locations within the obfuscation range are eliminated by considering vehicles mobility restrictions. This factor contributes significantly to the high inference accuracy performed by VehiTrack.",
            "As shown by Fig.  7 (a)(b)(c), TransProtect mainly comprises the following three components: (a)  location embedding , (b)  location assessment by transformer encoder , and (c)  location ranking adjusted by utility loss . Next, we introduce the details of the three components in Section  4.2 , Section  4.3 , and Section  4.3 , respectively.",
            "We carry out an extensive simulation to assess the performance of our location inference algorithm  VehiTrack  and our new LPPM  TransProtect  in Section  5.2  ( Experiment I ) and Section  5.3   ( Experiment II ), respectively, with the comparison of a list of state-of-the-art methods. In Section  5.1 , we first introduce the settings of the experiment, including the real-world dataset used in the simulation, the benchmarks, and the performance metrics 1 1 1 The source code of both VehiTrack and TransProtect is available at:  https://github.com/sourabhy1797/VehiTrack . .",
            "The main experimental results regarding inference error and data utility loss in Experiments I and II are listed in Table  1 & 2  and Table  3 , respectively.",
            "We randomly select 100 trajectories from the Rome and San Francisco Taxicab datasets to simulate the vehicles mobility. We use Laplace and LP to obfuscate all the locations within each trajectory, with locations recorded approximately every 20 seconds for both datasets. We then apply the four location inference algorithms, VehiTrack, VehiTrack-I, HMM, and Bayes to infer the vehicles real locations from the obfuscated locations, of which the expected inference errors are compared in Experiment I in Table  1  (Laplace) and Table  2  (LP). Based on the two tables, we have the following observations:",
            "To demonstrate that VehiTrack can better capture the long-term correlation of vehicles locations compared to the benchmarks, among the 100 trajectories, we pick up trajectories that have more than 40 locations. In Fig.  10 (a)(b)(c) and Fig.  10 (a)(b)(c) in Appendix, we exclusively evaluate the inference errors of the four algorithms for these selected long trajectories. The depicted results in the figure highlight that the accuracy advantage of VehiTrack is even more significant compared to the findings in Table  1  and Table  2 , e.g., using the Rome dataset (resp. San Francisco dataset), VehiTracks inference error is  51.36%, 33.33%, and 48.56%  (resp.  41.93%, 25%, and 29.16% ) lower than that of Bayes, VehiTrack-I, and HMM, respectively (consider that for all the 100 trajectories of rome dataset, VehiTracks inference error is 49.77%, 41.41%, and 41.52% lower than that of Bayes, VehiTrack-I, and HMM, respectively).",
            "We apply TransProtect to refine the location set of geo-obfuscation and then assess the inference error of the four location inference algorithms, of which the results are shown in Experiment II in Table  1  (Laplace) and Table  2  (LP). By comparing the experimental results in Experiments I and II, we can check how much privacy improvement is contributed by TransProtect. In the tables, the subscript  (+a%)  means the inference error is increased by  a % percent a a\\% italic_a %  after integrating TransProtect. We have the following observations:",
            "(1) The TransProtect parameters  K K K italic_K  (candidate location set size) and    \\alpha italic_  (utility loss weight) impact the data utiltiy loss . We present the average data utility loss and the expected inference error of Laplace+TransProtect and LP+TransProtect given different  K K K italic_K  and    \\alpha italic_  for the Rome and San Francisco datasets in Fig.  12 (a)(b) and Fig.  12 (a)(b), and Fig.  14 (a)(b) and Fig.  14 (a)(b), respectively. In addition, the expected utility loss and the expected inference error of the two methods with different values of  K K K italic_K  and   italic- \\epsilon italic_  are shown in Table  4  and Table  5 . The figures and tables show that the average data utility loss and expected inference error of Laplace+TransProtect and LP+TransProtect increases with an increase in  K K K italic_K . This is because a higher value of  K K K italic_K  expands the candidate location set, providing a chance for locations with higher data utility loss to be selected.",
            "In Fig.  12 (a)(b), Fig.  12 (a)(b), Fig.  14 (a)(b) and Fig.  14 (a)(b), we find that when    \\alpha italic_  increases, both data utility loss and expected inference error of Laplace+ TransProtect and LP+TransProtect decreases. This is because a higher    \\alpha italic_  value results in locations with lower data utility loss having a comparatively higher score than locations with higher probability scores (output by the Transformer encoder), making them more likely to be selected as candidate locations. Fig.  12 (a)(b) and Fig.  14 (a)(b) provides a visual example, illustrating that when   = 100  100 \\alpha=100 italic_ = 100 , certain locations with higher data utility loss are included in the candidate location set. Conversely, when   = 10 , 000  10 000 \\alpha=10,000 italic_ = 10 , 000 , almost all candidate locations can achieve low data utility loss. Fig.  12 (a)(b) and Fig.  14 (a)(b) also indicates that once    10 , 000  10 000 \\alpha\\geq 10,000 italic_  10 , 000 , data utility loss plays a predominant role in candidate location selection in TransProtect, and further increases in    \\alpha italic_  do not significantly impact data utility loss (as observed when comparing data utility loss at   = 10 , 000  10 000 \\alpha=10,000 italic_ = 10 , 000  and   = 100 , 000  100 000 \\alpha=100,000 italic_ = 100 , 000 )."
        ]
    },
    "id_table_3": {
        "caption": "Table 3.  Expected data utility loss of different methods (km)",
        "table": "S5.T2.26",
        "footnotes": [],
        "references": [
            "The rest of the paper is organized as follows: Section  2  gives the preliminaries of Geo-Ind. Section  3  introduces the new threat model VehiTrack and Section  4  describes the countermeasure TransProtect. Section  5  evaluates the performance of both VehiTrack and TransProtect. Section  6  presents the related work. Finally, Section  7  makes a conclusion.",
            "In this Section, we introduce the preliminary knowledge of geo-obfuscation (Section  2.1 ), its privacy criterion Geo-Ind (Section  2.2 ), and the limitation of Geo-Ind (Section  2.3 ).",
            "VehiTrack estimates the posterior  p  ( x n | y ~ n ) p conditional subscript x n subscript ~ y n p(x_{n}|\\tilde{y}_{n}) italic_p ( italic_x start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT | over~ start_ARG italic_y end_ARG start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT )  of the vehicles location at each time slot  t n subscript t n t_{n} italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT , by considering the  short-term correlation  of the vehicles locations using a  mobility   restriction-aware Bayesian inference model  (Section  3.2 ).",
            "VehiTrack improves the accuracy of the posterior sequence  p  ( x 1 | y ~ 1 ) , ... , p  ( x N | y ~ N ) p conditional subscript x 1 subscript ~ y 1 ... p conditional subscript x N subscript ~ y N p(x_{1}|\\tilde{y}_{1}),...,p(x_{N}|\\tilde{y}_{N}) italic_p ( italic_x start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT | over~ start_ARG italic_y end_ARG start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ) , ... , italic_p ( italic_x start_POSTSUBSCRIPT italic_N end_POSTSUBSCRIPT | over~ start_ARG italic_y end_ARG start_POSTSUBSCRIPT italic_N end_POSTSUBSCRIPT ) , by considering the  long-term correlation  of the vehicles locations using  Long Short-Term Memory (LSTM)  neural networks (Section  3.1 ).",
            "Before introducing the details of the above two phases, in Section  3.1 , we first describe the mathematical models used in VehiTrack, including the main notations and assumptions.",
            "As analyzed in Section  3 , Geo-Ind proves susceptible to privacy breaches by VehiTrack when protecting the location privacy of vehicles. This vulnerability stems from the inclusion of unrealistic locations in its obfuscation range, which are prone to elimination by VehiTrack. Motivated by this insight, in this section, we introduce  TransProtect , which aims to identify a set of candidate obfuscated locations that closely adhere to the realistic mobility patterns of vehicles, making them difficult for attackers to distinguish from actual locations.",
            "As shown by Fig.  7 (a)(b)(c), TransProtect mainly comprises the following three components: (a)  location embedding , (b)  location assessment by transformer encoder , and (c)  location ranking adjusted by utility loss . Next, we introduce the details of the three components in Section  4.2 , Section  4.3 , and Section  4.3 , respectively.",
            "We carry out an extensive simulation to assess the performance of our location inference algorithm  VehiTrack  and our new LPPM  TransProtect  in Section  5.2  ( Experiment I ) and Section  5.3   ( Experiment II ), respectively, with the comparison of a list of state-of-the-art methods. In Section  5.1 , we first introduce the settings of the experiment, including the real-world dataset used in the simulation, the benchmarks, and the performance metrics 1 1 1 The source code of both VehiTrack and TransProtect is available at:  https://github.com/sourabhy1797/VehiTrack . .",
            "In  Experiment I , we test the performance of VehiTrack against the two conventional geo-obfuscation methods   (i) Planar Laplacian noise  (labeled as  Laplace )  ( Wang-WWW2017,  ) , which uses   italic- \\epsilon italic_ -Geo-Ind as the privacy criterion. Laplace assumes the obfuscation probabilities  z i , k  e    d i , k  max proportional-to subscript z i k superscript e italic- subscript d i k subscript  z_{i,k}\\propto e^{-\\epsilon\\frac{d_{i,k}}{\\Lambda_{\\max}}} italic_z start_POSTSUBSCRIPT italic_i , italic_k end_POSTSUBSCRIPT  italic_e start_POSTSUPERSCRIPT - italic_ divide start_ARG italic_d start_POSTSUBSCRIPT italic_i , italic_k end_POSTSUBSCRIPT end_ARG start_ARG roman_ start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT end_ARG end_POSTSUPERSCRIPT , where   italic- \\epsilon italic_  is the  privacy budget , and   max subscript  \\Lambda_{\\max} roman_ start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  is the maximum distance between any two locations in the target region.   (ii) LP-based geo-obfuscation  (labeled as  LP )  ( Qiu-TMC2020,  ) : LP (defined in Equ. ( 3 )) aims to minimize the data utility loss of a single vehicle with the   italic- \\epsilon italic_ -GeoInd constraints being satisfied.",
            "In both Experiments I&II, we measure two metrics: (1)  expected inference errors (EIE) , which is defined as the expected error between the estimated locations (by attackers) and the vehicles actual locations, and (2)  data utility loss , which is defined as the expected distortion of estimated traveling cost (in Equ. ( 13 )).",
            "The main experimental results regarding inference error and data utility loss in Experiments I and II are listed in Table  1 & 2  and Table  3 , respectively.",
            "(4) As   italic- \\epsilon italic_  increases, the inference errors of all four inference algorithms increase . This is attributed to higher values of   italic- \\epsilon italic_  allowing for smaller deviations from obfuscated locations to actual locations. Consequently, this leads to a reduction in overall inference errors and also a lesser loss of data utility due to Laplacian noise and Linear Programming, as demonstrated in Table  3 .",
            "(2) The integration of TransProtect maintains the utility loss at an acceptable level . This is attributed to TransProtects inclination to choose locations with lower data utility loss, considering road network conditions. In contrast, the original obfuscation methods (i.e. Laplacian and LP) dont consider measuring data utility loss in the road network when selecting obfuscated locations. Consequently, TransProtect allows the selection of locations further away from the real location, with the data utility loss guaranteed at an acceptable level (as shown in Table  3 , i.e., on average, using Rome dataset (resp. San Francisco dataset), TransProtect increases the data utility loss by 1.04, 1.02, 1.30 times (resp. all 1.07) when   = italic- absent \\epsilon= italic_ =  5.0km -1 , 7.5km -1 , and 10.0km -1 ."
        ]
    },
    "id_table_4": {
        "caption": "Table 4.  Expected data utility loss (km) of Laplace and LP given different  K K K italic_K  values",
        "table": "S5.T3.2",
        "footnotes": [],
        "references": [
            "The rest of the paper is organized as follows: Section  2  gives the preliminaries of Geo-Ind. Section  3  introduces the new threat model VehiTrack and Section  4  describes the countermeasure TransProtect. Section  5  evaluates the performance of both VehiTrack and TransProtect. Section  6  presents the related work. Finally, Section  7  makes a conclusion.",
            "As shown by Fig.  7 (a)(b)(c), TransProtect mainly comprises the following three components: (a)  location embedding , (b)  location assessment by transformer encoder , and (c)  location ranking adjusted by utility loss . Next, we introduce the details of the three components in Section  4.2 , Section  4.3 , and Section  4.3 , respectively.",
            "For the sake of contradiction, we assume that there exists a location  v k  R n i subscript v k subscript superscript R i n v_{k}\\in\\mathcal{R}^{i}_{n} italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT  caligraphic_R start_POSTSUPERSCRIPT italic_i end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT , i.e.,  c v i , v k  t n  t n  1 subscript c subscript v i subscript v k subscript t n subscript t n 1 c_{v_{i},v_{k}}\\leq t_{n}-t_{n-1} italic_c start_POSTSUBSCRIPT italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT end_POSTSUBSCRIPT  italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_n - 1 end_POSTSUBSCRIPT , but not identified by  S  P  T i S P subscript T i SPT_{i} italic_S italic_P italic_T start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT . There are two cases:   Case 1 :  v k  V i  subscript v k subscript superscript V  i v_{k}\\notin\\mathcal{V}^{\\prime}_{i} italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT  caligraphic_V start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  and  c v i , v k  t n  t n  1 subscript c subscript v i subscript v k subscript t n subscript t n 1 c_{v_{i},v_{k}}\\leq t_{n}-t_{n-1} italic_c start_POSTSUBSCRIPT italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT end_POSTSUBSCRIPT  italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_n - 1 end_POSTSUBSCRIPT . Due to the restriction of the road network, the travel cost from  v i subscript v i v_{i} italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  to  v k subscript v k v_{k} italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT , denoted by  d i , k  subscript superscript d  i k d^{\\prime}_{i,k} italic_d start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i , italic_k end_POSTSUBSCRIPT , should be no smaller than  d i , k subscript d i k d_{i,k} italic_d start_POSTSUBSCRIPT italic_i , italic_k end_POSTSUBSCRIPT  (Haversine distance). Let  s i , k subscript s i k s_{i,k} italic_s start_POSTSUBSCRIPT italic_i , italic_k end_POSTSUBSCRIPT  denote a vehicles average speed from  v i subscript v i v_{i} italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  to  v k subscript v k v_{k} italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT  (note  s i , k  s limit subscript s i k subscript s limit s_{i,k}\\leq s_{\\mathrm{limit}} italic_s start_POSTSUBSCRIPT italic_i , italic_k end_POSTSUBSCRIPT  italic_s start_POSTSUBSCRIPT roman_limit end_POSTSUBSCRIPT ), then we can obtain that  d i , k s limit  d i , k  s i , k = c v i , v k  t n  t n  1 subscript d i k subscript s limit subscript superscript d  i k subscript s i k subscript c subscript v i subscript v k subscript t n subscript t n 1 \\frac{d_{i,k}}{s_{\\mathrm{limit}}}\\leq\\frac{d^{\\prime}_{i,k}}{s_{i,k}}=c_{v_{i% },v_{k}}\\leq t_{n}-t_{n-1} divide start_ARG italic_d start_POSTSUBSCRIPT italic_i , italic_k end_POSTSUBSCRIPT end_ARG start_ARG italic_s start_POSTSUBSCRIPT roman_limit end_POSTSUBSCRIPT end_ARG  divide start_ARG italic_d start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i , italic_k end_POSTSUBSCRIPT end_ARG start_ARG italic_s start_POSTSUBSCRIPT italic_i , italic_k end_POSTSUBSCRIPT end_ARG = italic_c start_POSTSUBSCRIPT italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT end_POSTSUBSCRIPT  italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_n - 1 end_POSTSUBSCRIPT , indicating that  d i , k  ( t n  t n  1 )  s limit subscript d i k subscript t n subscript t n 1 subscript s limit d_{i,k}\\leq(t_{n}-t_{n-1})s_{\\mathrm{limit}} italic_d start_POSTSUBSCRIPT italic_i , italic_k end_POSTSUBSCRIPT  ( italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_n - 1 end_POSTSUBSCRIPT ) italic_s start_POSTSUBSCRIPT roman_limit end_POSTSUBSCRIPT  and  v k  V i  subscript v k subscript superscript V  i v_{k}\\in\\mathcal{V}^{\\prime}_{i} italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT  caligraphic_V start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  by Equ. ( 4 ), which is a contradiction.    Case 2 :  v k  V i  subscript v k subscript superscript V  i v_{k}\\in\\mathcal{V}^{\\prime}_{i} italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT  caligraphic_V start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  and  c v i , v k  t n  t n  1 subscript c subscript v i subscript v k subscript t n subscript t n 1 c_{v_{i},v_{k}}\\leq t_{n}-t_{n-1} italic_c start_POSTSUBSCRIPT italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT end_POSTSUBSCRIPT  italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_n - 1 end_POSTSUBSCRIPT , but the travel cost from  v i subscript v i v_{i} italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  to  v k subscript v k v_{k} italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT  in  S  P  T i S P subscript T i SPT_{i} italic_S italic_P italic_T start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  is larger than  t n  t n  1 subscript t n subscript t n 1 t_{n}-t_{n-1} italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_n - 1 end_POSTSUBSCRIPT . In this case, there must exist at least one location  v l  V \\ V i  subscript v l \\ V subscript superscript V  i v_{l}\\in\\mathcal{V}\\backslash\\mathcal{V}^{\\prime}_{i} italic_v start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT  caligraphic_V \\ caligraphic_V start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  that is in the shortest path from  v i subscript v i v_{i} italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  to  v k subscript v k v_{k} italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT . Then, the travel cost from  v i subscript v i v_{i} italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  to  v l subscript v l v_{l} italic_v start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT  in  G G \\mathcal{G} caligraphic_G  is no larger than  t n  t n  1 subscript t n subscript t n 1 t_{n}-t_{n-1} italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_n - 1 end_POSTSUBSCRIPT  since  c v i , v l = c v i , v k  c v l , v k  t n  t n  1  c v l , v k  t n  t n  1 subscript c subscript v i subscript v l subscript c subscript v i subscript v k subscript c subscript v l subscript v k subscript t n subscript t n 1 subscript c subscript v l subscript v k subscript t n subscript t n 1 c_{v_{i},v_{l}}=c_{v_{i},v_{k}}-c_{v_{l},v_{k}}\\leq t_{n}-t_{n-1}-c_{v_{l},v_{% k}}\\leq t_{n}-t_{n-1} italic_c start_POSTSUBSCRIPT italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , italic_v start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT end_POSTSUBSCRIPT = italic_c start_POSTSUBSCRIPT italic_v start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT end_POSTSUBSCRIPT - italic_c start_POSTSUBSCRIPT italic_v start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT , italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT end_POSTSUBSCRIPT  italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_n - 1 end_POSTSUBSCRIPT - italic_c start_POSTSUBSCRIPT italic_v start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT , italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT end_POSTSUBSCRIPT  italic_t start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_n - 1 end_POSTSUBSCRIPT , which is a contradiction that has been proved in  Case 1  (by considering  v l subscript v l v_{l} italic_v start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT  as  v k subscript v k v_{k} italic_v start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT ).",
            "(1) The TransProtect parameters  K K K italic_K  (candidate location set size) and    \\alpha italic_  (utility loss weight) impact the data utiltiy loss . We present the average data utility loss and the expected inference error of Laplace+TransProtect and LP+TransProtect given different  K K K italic_K  and    \\alpha italic_  for the Rome and San Francisco datasets in Fig.  12 (a)(b) and Fig.  12 (a)(b), and Fig.  14 (a)(b) and Fig.  14 (a)(b), respectively. In addition, the expected utility loss and the expected inference error of the two methods with different values of  K K K italic_K  and   italic- \\epsilon italic_  are shown in Table  4  and Table  5 . The figures and tables show that the average data utility loss and expected inference error of Laplace+TransProtect and LP+TransProtect increases with an increase in  K K K italic_K . This is because a higher value of  K K K italic_K  expands the candidate location set, providing a chance for locations with higher data utility loss to be selected.",
            "In Fig.  12 (a)(b), Fig.  12 (a)(b), Fig.  14 (a)(b) and Fig.  14 (a)(b), we find that when    \\alpha italic_  increases, both data utility loss and expected inference error of Laplace+ TransProtect and LP+TransProtect decreases. This is because a higher    \\alpha italic_  value results in locations with lower data utility loss having a comparatively higher score than locations with higher probability scores (output by the Transformer encoder), making them more likely to be selected as candidate locations. Fig.  12 (a)(b) and Fig.  14 (a)(b) provides a visual example, illustrating that when   = 100  100 \\alpha=100 italic_ = 100 , certain locations with higher data utility loss are included in the candidate location set. Conversely, when   = 10 , 000  10 000 \\alpha=10,000 italic_ = 10 , 000 , almost all candidate locations can achieve low data utility loss. Fig.  12 (a)(b) and Fig.  14 (a)(b) also indicates that once    10 , 000  10 000 \\alpha\\geq 10,000 italic_  10 , 000 , data utility loss plays a predominant role in candidate location selection in TransProtect, and further increases in    \\alpha italic_  do not significantly impact data utility loss (as observed when comparing data utility loss at   = 10 , 000  10 000 \\alpha=10,000 italic_ = 10 , 000  and   = 100 , 000  100 000 \\alpha=100,000 italic_ = 100 , 000 )."
        ]
    },
    "id_table_5": {
        "caption": "Table 5.  Expected inference error (km) of Laplace and LP given different  K K K italic_K  values for Rome dataset",
        "table": "A1.T4.38",
        "footnotes": [],
        "references": [
            "The rest of the paper is organized as follows: Section  2  gives the preliminaries of Geo-Ind. Section  3  introduces the new threat model VehiTrack and Section  4  describes the countermeasure TransProtect. Section  5  evaluates the performance of both VehiTrack and TransProtect. Section  6  presents the related work. Finally, Section  7  makes a conclusion.",
            "As demonstrated in our experiments detailed in Section  5.2 , on average, using rome dataset (resp. using the San Francisco dataset), VehiTrack achieves a 65.54% and 45.93% (resp. 56.86% and 48.78%) reduction in inference errors corresponding to the Laplacian and Linear Programming methods respectively, compared to the classic Bayesian inference algorithm. Our findings also reveal that, by incorporating contextual information such as the road network and traffic flow, VehiTrack can eliminate a significant percentage of locations within the obfuscation range. For instance, in our experiment in Section  5 , using rome dataset (resp. using the San Francisco dataset) on average, 81.99% (resp. 81.39) of locations within the obfuscation range are eliminated by considering vehicles mobility restrictions. This factor contributes significantly to the high inference accuracy performed by VehiTrack.",
            "Time complexity . In min heap, both push and pop operations take  O  ( log  K ) O K O(\\log K) italic_O ( roman_log italic_K )  time complexity and  O  ( 1 ) O 1 O(1) italic_O ( 1 )  space complexity. Suppose that there are  L L L italic_L  candidate locations to check by the transformer encoder. To find the  K K K italic_K  locations with the highest scores, it takes up to  L L L italic_L  push/pop operations, amounting to  O  ( L  log  K ) O L K O(L\\log K) italic_O ( italic_L roman_log italic_K )  operations. As both  L L L italic_L  and  K K K italic_K  are not large in practice, e.g. they are set by up to 50 and 1739 respectively in our experiment (Section  5 ), such a computation load is acceptable to vehicle-equipped devices like smartphones.",
            "We carry out an extensive simulation to assess the performance of our location inference algorithm  VehiTrack  and our new LPPM  TransProtect  in Section  5.2  ( Experiment I ) and Section  5.3   ( Experiment II ), respectively, with the comparison of a list of state-of-the-art methods. In Section  5.1 , we first introduce the settings of the experiment, including the real-world dataset used in the simulation, the benchmarks, and the performance metrics 1 1 1 The source code of both VehiTrack and TransProtect is available at:  https://github.com/sourabhy1797/VehiTrack . .",
            "(1) The TransProtect parameters  K K K italic_K  (candidate location set size) and    \\alpha italic_  (utility loss weight) impact the data utiltiy loss . We present the average data utility loss and the expected inference error of Laplace+TransProtect and LP+TransProtect given different  K K K italic_K  and    \\alpha italic_  for the Rome and San Francisco datasets in Fig.  12 (a)(b) and Fig.  12 (a)(b), and Fig.  14 (a)(b) and Fig.  14 (a)(b), respectively. In addition, the expected utility loss and the expected inference error of the two methods with different values of  K K K italic_K  and   italic- \\epsilon italic_  are shown in Table  4  and Table  5 . The figures and tables show that the average data utility loss and expected inference error of Laplace+TransProtect and LP+TransProtect increases with an increase in  K K K italic_K . This is because a higher value of  K K K italic_K  expands the candidate location set, providing a chance for locations with higher data utility loss to be selected.",
            "In addition, Fig.  15 (a)(b)(c) give illustrative examples to show how  K K K italic_K  and    \\alpha italic_  impact the data utility loss. Fig.  15 (a)(b) shows that when  K K K italic_K  is increased from 10 to 15, more locations with higher data utility loss become part of the candidate location set. Fig.  15 (a)(c) shows that when   = 100  100 \\alpha=100 italic_ = 100 , some locations with higher utility loss are included in the candidate location set, while when   = 10 , 000  10 000 \\alpha=10,000 italic_ = 10 , 000 , almost all the candidate locations can achieve low utility loss. The figure also indicates that when    10 , 000  10 000 \\alpha\\geq 10,000 italic_  10 , 000 , utility loss already achieves the major role in candidate location selection in TransProtect, and further increasing    \\alpha italic_  wont impact the utility loss significantly (by comparing the utility loss when   = 10 , 000 , 100 , 000  10 000 100 000 \\alpha=10,000,100,000 italic_ = 10 , 000 , 100 , 000 )."
        ]
    },
    "id_table_6": {
        "caption": "",
        "table": "A1.T5.38",
        "footnotes": [],
        "references": [
            "The rest of the paper is organized as follows: Section  2  gives the preliminaries of Geo-Ind. Section  3  introduces the new threat model VehiTrack and Section  4  describes the countermeasure TransProtect. Section  5  evaluates the performance of both VehiTrack and TransProtect. Section  6  presents the related work. Finally, Section  7  makes a conclusion.",
            "As illustrated by Fig.  6 , TransProtect can be integrated into the current geo-obfuscation framework, such as LP-based geo-obfuscation  ( Qiu-TMC2020,  )  or Laplacian noise  ( Andres-CCS2013,  ) . Using the context data including local historical traffic flow data and LBS target distributions, the server initially trains a TransProtect model (1). This model takes a vehicles trajectory as input and outputs a set of candidate obfuscated locations for the vehicles current location within the trajectory. Before reporting the location, each participating vehicle needs to download the trained TransProtect model to identify the candidate location set for obfuscation (2). Then, the vehicle can locally obfuscate its location within the candidate location set using Laplacian noise (3), which requires a low computational load that doesnt necessitate global LBS service information. Alternatively, the vehicle can report the candidate location set, prompting the server to compute the obfuscation matrix using LP (2), which incurs a relatively higher computational load and relies on global target information. In both cases, The integration of TransProtect into the geo-obfuscation framework allows for the restriction of the obfuscation range to a specific set of locations, aligning with vehicles realistic mobility features while minimizing utility loss."
        ]
    }
}