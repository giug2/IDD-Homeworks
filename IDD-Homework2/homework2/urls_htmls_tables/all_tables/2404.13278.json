{
    "PAPER'S NUMBER OF TABLES": 7,
    "S3.T1": {
        "caption": "Table 1: Design of experiments for domain groups M, S, and T configurations [10].",
        "table": "<table id=\"S3.T1.st1.4\" class=\"ltx_tabular ltx_centering ltx_guessed_headers ltx_align_middle\">\n<thead class=\"ltx_thead\">\n<tr id=\"S3.T1.st1.4.1.1\" class=\"ltx_tr\">\n<th id=\"S3.T1.st1.4.1.1.1\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Domain</th>\n<th id=\"S3.T1.st1.4.1.1.2\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Material</th>\n<th id=\"S3.T1.st1.4.1.1.3\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Welding time</th>\n<th id=\"S3.T1.st1.4.1.1.4\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Data size</th>\n<th id=\"S3.T1.st1.4.1.1.5\" class=\"ltx_td ltx_nopad_r ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Classification goal</th>\n</tr>\n</thead>\n<tbody class=\"ltx_tbody\">\n<tr id=\"S3.T1.st1.4.2.1\" class=\"ltx_tr\">\n<td id=\"S3.T1.st1.4.2.1.1\" class=\"ltx_td ltx_align_center ltx_border_t\">AC</td>\n<td id=\"S3.T1.st1.4.2.1.2\" class=\"ltx_td ltx_align_center ltx_border_t\">Al-Cu</td>\n<td id=\"S3.T1.st1.4.2.1.3\" class=\"ltx_td ltx_align_center ltx_border_t\">0.5 s</td>\n<td id=\"S3.T1.st1.4.2.1.4\" class=\"ltx_td ltx_align_center ltx_border_t\">200</td>\n<td id=\"S3.T1.st1.4.2.1.5\" class=\"ltx_td ltx_nopad_r ltx_border_t\"></td>\n</tr>\n<tr id=\"S3.T1.st1.4.3.2\" class=\"ltx_tr\">\n<td id=\"S3.T1.st1.4.3.2.1\" class=\"ltx_td ltx_align_center\">CC</td>\n<td id=\"S3.T1.st1.4.3.2.2\" class=\"ltx_td ltx_align_center\">Cu-Cu</td>\n<td id=\"S3.T1.st1.4.3.2.3\" class=\"ltx_td ltx_align_center\">0.9 s</td>\n<td id=\"S3.T1.st1.4.3.2.4\" class=\"ltx_td ltx_align_center\">200</td>\n<td id=\"S3.T1.st1.4.3.2.5\" class=\"ltx_td ltx_nopad_r ltx_align_center\">TC1, TC2, TC3, TC4</td>\n</tr>\n<tr id=\"S3.T1.st1.4.4.3\" class=\"ltx_tr\">\n<td id=\"S3.T1.st1.4.4.3.1\" class=\"ltx_td ltx_align_center\">CA</td>\n<td id=\"S3.T1.st1.4.4.3.2\" class=\"ltx_td ltx_align_center\">Cu-Al</td>\n<td id=\"S3.T1.st1.4.4.3.3\" class=\"ltx_td ltx_align_center\">0.5 s</td>\n<td id=\"S3.T1.st1.4.4.3.4\" class=\"ltx_td ltx_align_center\">200</td>\n<td id=\"S3.T1.st1.4.4.3.5\" class=\"ltx_td ltx_nopad_r\"></td>\n</tr>\n<tr id=\"S3.T1.st1.4.5.4\" class=\"ltx_tr\">\n<td id=\"S3.T1.st1.4.5.4.1\" class=\"ltx_td ltx_align_center ltx_border_bb\">AA</td>\n<td id=\"S3.T1.st1.4.5.4.2\" class=\"ltx_td ltx_align_center ltx_border_bb\">Al-Al</td>\n<td id=\"S3.T1.st1.4.5.4.3\" class=\"ltx_td ltx_align_center ltx_border_bb\">0.9 s</td>\n<td id=\"S3.T1.st1.4.5.4.4\" class=\"ltx_td ltx_align_center ltx_border_bb\">200</td>\n<td id=\"S3.T1.st1.4.5.4.5\" class=\"ltx_td ltx_nopad_r ltx_border_bb\"></td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "Domain group M: In this group, the welding samples are generated by combining different materials from either 0.25 mm thick Copper (Cu) or Aluminum (Al) sheets, each subjected to varying welding times, as detailed in Table 1(a). Each domain within this group comprises 200 samples, evenly distributed across four tool conditions: new horn/new anvil (TC1), new horn/worn anvil (TC2), worn horn/new anvil (TC3), and worn horn/worn anvil (TC4).",
            "Domain group S: In this setup, 0.20 mm Cu sheets are welded for fixed welding\ntime of 1.0 second. As detailed in Table 1(b), different domains are characterized by distinct surface conditions, including a “Clean” surface prepared using alcoholic wipes, a “Polished” surface achieved by sandpapering the contact faces, and a “Contam” (Contaminated) surface created by contaminating the surface by cutting fluid. 30 samples were generated for each combination of workpiece surface condition and tool condition, resulting in a total of 270 samples. The objective of the S domains is to classify three tool conditions: new horn/new anvil (New), worn horn/worn anvil (Worn), and damaged horn/damaged anvil (DMGD).",
            "Domain group T: In this domain group, the data is identical to that in domain group S. However, the primary objective shifts to classifying the surface conditions while maintaining different domains representing distinct tool conditions, as outlined in Table 1(c)."
        ]
    },
    "S3.T1.st1": {
        "caption": "(a) Domain group M configuration",
        "table": "<table id=\"S3.T1.st1.4\" class=\"ltx_tabular ltx_centering ltx_guessed_headers ltx_align_middle\">\n<thead class=\"ltx_thead\">\n<tr id=\"S3.T1.st1.4.1.1\" class=\"ltx_tr\">\n<th id=\"S3.T1.st1.4.1.1.1\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Domain</th>\n<th id=\"S3.T1.st1.4.1.1.2\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Material</th>\n<th id=\"S3.T1.st1.4.1.1.3\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Welding time</th>\n<th id=\"S3.T1.st1.4.1.1.4\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Data size</th>\n<th id=\"S3.T1.st1.4.1.1.5\" class=\"ltx_td ltx_nopad_r ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Classification goal</th>\n</tr>\n</thead>\n<tbody class=\"ltx_tbody\">\n<tr id=\"S3.T1.st1.4.2.1\" class=\"ltx_tr\">\n<td id=\"S3.T1.st1.4.2.1.1\" class=\"ltx_td ltx_align_center ltx_border_t\">AC</td>\n<td id=\"S3.T1.st1.4.2.1.2\" class=\"ltx_td ltx_align_center ltx_border_t\">Al-Cu</td>\n<td id=\"S3.T1.st1.4.2.1.3\" class=\"ltx_td ltx_align_center ltx_border_t\">0.5 s</td>\n<td id=\"S3.T1.st1.4.2.1.4\" class=\"ltx_td ltx_align_center ltx_border_t\">200</td>\n<td id=\"S3.T1.st1.4.2.1.5\" class=\"ltx_td ltx_nopad_r ltx_border_t\"></td>\n</tr>\n<tr id=\"S3.T1.st1.4.3.2\" class=\"ltx_tr\">\n<td id=\"S3.T1.st1.4.3.2.1\" class=\"ltx_td ltx_align_center\">CC</td>\n<td id=\"S3.T1.st1.4.3.2.2\" class=\"ltx_td ltx_align_center\">Cu-Cu</td>\n<td id=\"S3.T1.st1.4.3.2.3\" class=\"ltx_td ltx_align_center\">0.9 s</td>\n<td id=\"S3.T1.st1.4.3.2.4\" class=\"ltx_td ltx_align_center\">200</td>\n<td id=\"S3.T1.st1.4.3.2.5\" class=\"ltx_td ltx_nopad_r ltx_align_center\">TC1, TC2, TC3, TC4</td>\n</tr>\n<tr id=\"S3.T1.st1.4.4.3\" class=\"ltx_tr\">\n<td id=\"S3.T1.st1.4.4.3.1\" class=\"ltx_td ltx_align_center\">CA</td>\n<td id=\"S3.T1.st1.4.4.3.2\" class=\"ltx_td ltx_align_center\">Cu-Al</td>\n<td id=\"S3.T1.st1.4.4.3.3\" class=\"ltx_td ltx_align_center\">0.5 s</td>\n<td id=\"S3.T1.st1.4.4.3.4\" class=\"ltx_td ltx_align_center\">200</td>\n<td id=\"S3.T1.st1.4.4.3.5\" class=\"ltx_td ltx_nopad_r\"></td>\n</tr>\n<tr id=\"S3.T1.st1.4.5.4\" class=\"ltx_tr\">\n<td id=\"S3.T1.st1.4.5.4.1\" class=\"ltx_td ltx_align_center ltx_border_bb\">AA</td>\n<td id=\"S3.T1.st1.4.5.4.2\" class=\"ltx_td ltx_align_center ltx_border_bb\">Al-Al</td>\n<td id=\"S3.T1.st1.4.5.4.3\" class=\"ltx_td ltx_align_center ltx_border_bb\">0.9 s</td>\n<td id=\"S3.T1.st1.4.5.4.4\" class=\"ltx_td ltx_align_center ltx_border_bb\">200</td>\n<td id=\"S3.T1.st1.4.5.4.5\" class=\"ltx_td ltx_nopad_r ltx_border_bb\"></td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "The aforementioned works mainly targeted cross-device decentralized learning. Yet, existing research has underscored the value of cross-silo FL, where fewer but resource-rich organizations like manufacturers, hospitals, and banks serve as clients [34].\nFL has recently received attention in the manufacturing sector [35]. For instance, Ahn et al. [36] employed FL for anomaly detection and predictive maintenance in pumps. FL methods were developed for defect detection in metal AM [12] and fault diagnosis in rotating machinery [13]. Despite these advances, there is a notable lack of research on FL for UMW. CM in UMW poses more significant challenges, due to complex process physics and limited understanding of process mechanisms. Moreover, the presence of multiple types of anomalies complicates online monitoring [9].",
            "Domain group M: In this group, the welding samples are generated by combining different materials from either 0.25 mm thick Copper (Cu) or Aluminum (Al) sheets, each subjected to varying welding times, as detailed in Table 1(a). Each domain within this group comprises 200 samples, evenly distributed across four tool conditions: new horn/new anvil (TC1), new horn/worn anvil (TC2), worn horn/new anvil (TC3), and worn horn/worn anvil (TC4).",
            "Domain group S: In this setup, 0.20 mm Cu sheets are welded for fixed welding\ntime of 1.0 second. As detailed in Table 1(b), different domains are characterized by distinct surface conditions, including a “Clean” surface prepared using alcoholic wipes, a “Polished” surface achieved by sandpapering the contact faces, and a “Contam” (Contaminated) surface created by contaminating the surface by cutting fluid. 30 samples were generated for each combination of workpiece surface condition and tool condition, resulting in a total of 270 samples. The objective of the S domains is to classify three tool conditions: new horn/new anvil (New), worn horn/worn anvil (Worn), and damaged horn/damaged anvil (DMGD).",
            "Domain group T: In this domain group, the data is identical to that in domain group S. However, the primary objective shifts to classifying the surface conditions while maintaining different domains representing distinct tool conditions, as outlined in Table 1(c).",
            "The client distribution is as follows: One domain of each domain group is considered as the target domain, and each of the other domains is equally distributed as the source domains among three clients at random. This means each client has access to data from only one domain, which is similar to real-world company scenarios. This distribution results in 9 training clients for domain group M and 6 each for domain groups S and T. As depicted in Tables A.1, A.2, and A.3 in A, clients in domain group M have about 67 data points each, while those in groups S and T have 30 data points each. The challenge in learning models suitable for domain generalization is heightened by the limited number of data points available to each client and the restriction of having access to only one domain’s data.",
            "Additionally, when comparing Figures 5 and 7, it is evident that the outcomes of minimal collaboration in our proposed framework, using a client fraction of 1/3, are either comparable to or, in some instances, exceed the results of other FL approaches with a client fraction of 1. This finding suggests that the FTL-TP method, by including only two clients from domain group S (totaling 60 data points) and three clients from domain group M (totaling 200 data points), can outperform state-of-the-art FL methods that use all available data points from domain group M (600 data points). This notable improvement is likely due to the efficient representation learning that takes place between clients across both datasets.",
            "Figure 8 shows that our framework is more time-efficient in training models compared to traditional FL frameworks. For instance, the FedAvg framework, which is considered as the simplest FL model, requires over 20% more time for training. When using an FL framework with the same loss function as FTL-TP, the extra time needed increases to more than 50%. Notably, within the single-dataset frameworks for domain groups M and S, there are 9 and 6 clients, running on 3 and 2 Raspberry Pis, respectively. The FTL-TP method which is a dual-dataset framework includes 15 clients implemented on 4 Raspberry Pis, which can raise the latency in the edge-cloud implementation. Despite this, the proposed approach proves to be more time-efficient overall. Additionally, in the system developed with Raspberry Pis and a message broker for weight transmission, the training time for 10 server rounds is under two minutes, making FTL-TP suitable for real-world applications."
        ]
    },
    "S3.T1.st2": {
        "caption": "(b) Domain group S configuration",
        "table": "<table id=\"S3.T1.st2.4.1\" class=\"ltx_tabular ltx_guessed_headers ltx_align_middle\">\n<thead class=\"ltx_thead\">\n<tr id=\"S3.T1.st2.4.1.1.1\" class=\"ltx_tr\">\n<th id=\"S3.T1.st2.4.1.1.1.1\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_th_row ltx_border_tt\">Domain</th>\n<th id=\"S3.T1.st2.4.1.1.1.2\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Data size</th>\n<th id=\"S3.T1.st2.4.1.1.1.3\" class=\"ltx_td ltx_nopad_r ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Classification goal</th>\n</tr>\n</thead>\n<tbody class=\"ltx_tbody\">\n<tr id=\"S3.T1.st2.4.1.2.1\" class=\"ltx_tr\">\n<th id=\"S3.T1.st2.4.1.2.1.1\" class=\"ltx_td ltx_align_center ltx_th ltx_th_row ltx_border_t\">Clean</th>\n<td id=\"S3.T1.st2.4.1.2.1.2\" class=\"ltx_td ltx_align_center ltx_border_t\">90</td>\n<td id=\"S3.T1.st2.4.1.2.1.3\" class=\"ltx_td ltx_nopad_r ltx_border_t\"></td>\n</tr>\n<tr id=\"S3.T1.st2.4.1.3.2\" class=\"ltx_tr\">\n<th id=\"S3.T1.st2.4.1.3.2.1\" class=\"ltx_td ltx_align_center ltx_th ltx_th_row\">Polished</th>\n<td id=\"S3.T1.st2.4.1.3.2.2\" class=\"ltx_td ltx_align_center\">90</td>\n<td id=\"S3.T1.st2.4.1.3.2.3\" class=\"ltx_td ltx_nopad_r ltx_align_center\">New, Worn, DMGD</td>\n</tr>\n<tr id=\"S3.T1.st2.4.1.4.3\" class=\"ltx_tr\">\n<th id=\"S3.T1.st2.4.1.4.3.1\" class=\"ltx_td ltx_align_center ltx_th ltx_th_row ltx_border_bb\">Contam</th>\n<td id=\"S3.T1.st2.4.1.4.3.2\" class=\"ltx_td ltx_align_center ltx_border_bb\">90</td>\n<td id=\"S3.T1.st2.4.1.4.3.3\" class=\"ltx_td ltx_nopad_r ltx_border_bb\"></td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "The aforementioned works mainly targeted cross-device decentralized learning. Yet, existing research has underscored the value of cross-silo FL, where fewer but resource-rich organizations like manufacturers, hospitals, and banks serve as clients [34].\nFL has recently received attention in the manufacturing sector [35]. For instance, Ahn et al. [36] employed FL for anomaly detection and predictive maintenance in pumps. FL methods were developed for defect detection in metal AM [12] and fault diagnosis in rotating machinery [13]. Despite these advances, there is a notable lack of research on FL for UMW. CM in UMW poses more significant challenges, due to complex process physics and limited understanding of process mechanisms. Moreover, the presence of multiple types of anomalies complicates online monitoring [9].",
            "Domain group M: In this group, the welding samples are generated by combining different materials from either 0.25 mm thick Copper (Cu) or Aluminum (Al) sheets, each subjected to varying welding times, as detailed in Table 1(a). Each domain within this group comprises 200 samples, evenly distributed across four tool conditions: new horn/new anvil (TC1), new horn/worn anvil (TC2), worn horn/new anvil (TC3), and worn horn/worn anvil (TC4).",
            "Domain group S: In this setup, 0.20 mm Cu sheets are welded for fixed welding\ntime of 1.0 second. As detailed in Table 1(b), different domains are characterized by distinct surface conditions, including a “Clean” surface prepared using alcoholic wipes, a “Polished” surface achieved by sandpapering the contact faces, and a “Contam” (Contaminated) surface created by contaminating the surface by cutting fluid. 30 samples were generated for each combination of workpiece surface condition and tool condition, resulting in a total of 270 samples. The objective of the S domains is to classify three tool conditions: new horn/new anvil (New), worn horn/worn anvil (Worn), and damaged horn/damaged anvil (DMGD).",
            "Domain group T: In this domain group, the data is identical to that in domain group S. However, the primary objective shifts to classifying the surface conditions while maintaining different domains representing distinct tool conditions, as outlined in Table 1(c).",
            "The client distribution is as follows: One domain of each domain group is considered as the target domain, and each of the other domains is equally distributed as the source domains among three clients at random. This means each client has access to data from only one domain, which is similar to real-world company scenarios. This distribution results in 9 training clients for domain group M and 6 each for domain groups S and T. As depicted in Tables A.1, A.2, and A.3 in A, clients in domain group M have about 67 data points each, while those in groups S and T have 30 data points each. The challenge in learning models suitable for domain generalization is heightened by the limited number of data points available to each client and the restriction of having access to only one domain’s data.",
            "Additionally, when comparing Figures 5 and 7, it is evident that the outcomes of minimal collaboration in our proposed framework, using a client fraction of 1/3, are either comparable to or, in some instances, exceed the results of other FL approaches with a client fraction of 1. This finding suggests that the FTL-TP method, by including only two clients from domain group S (totaling 60 data points) and three clients from domain group M (totaling 200 data points), can outperform state-of-the-art FL methods that use all available data points from domain group M (600 data points). This notable improvement is likely due to the efficient representation learning that takes place between clients across both datasets.",
            "Figure 8 shows that our framework is more time-efficient in training models compared to traditional FL frameworks. For instance, the FedAvg framework, which is considered as the simplest FL model, requires over 20% more time for training. When using an FL framework with the same loss function as FTL-TP, the extra time needed increases to more than 50%. Notably, within the single-dataset frameworks for domain groups M and S, there are 9 and 6 clients, running on 3 and 2 Raspberry Pis, respectively. The FTL-TP method which is a dual-dataset framework includes 15 clients implemented on 4 Raspberry Pis, which can raise the latency in the edge-cloud implementation. Despite this, the proposed approach proves to be more time-efficient overall. Additionally, in the system developed with Raspberry Pis and a message broker for weight transmission, the training time for 10 server rounds is under two minutes, making FTL-TP suitable for real-world applications."
        ]
    },
    "S3.T1.st3": {
        "caption": "(c) Domain group T configuration",
        "table": "<table id=\"S3.T1.st3.4.1\" class=\"ltx_tabular ltx_guessed_headers ltx_align_middle\">\n<thead class=\"ltx_thead\">\n<tr id=\"S3.T1.st3.4.1.1.1\" class=\"ltx_tr\">\n<th id=\"S3.T1.st3.4.1.1.1.1\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_th_row ltx_border_tt\">Domain</th>\n<th id=\"S3.T1.st3.4.1.1.1.2\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Data size</th>\n<th id=\"S3.T1.st3.4.1.1.1.3\" class=\"ltx_td ltx_nopad_r ltx_align_center ltx_th ltx_th_column ltx_border_tt\">Classification goal</th>\n</tr>\n</thead>\n<tbody class=\"ltx_tbody\">\n<tr id=\"S3.T1.st3.4.1.2.1\" class=\"ltx_tr\">\n<th id=\"S3.T1.st3.4.1.2.1.1\" class=\"ltx_td ltx_align_center ltx_th ltx_th_row ltx_border_t\">DMGD</th>\n<td id=\"S3.T1.st3.4.1.2.1.2\" class=\"ltx_td ltx_align_center ltx_border_t\">90</td>\n<td id=\"S3.T1.st3.4.1.2.1.3\" class=\"ltx_td ltx_nopad_r ltx_border_t\"></td>\n</tr>\n<tr id=\"S3.T1.st3.4.1.3.2\" class=\"ltx_tr\">\n<th id=\"S3.T1.st3.4.1.3.2.1\" class=\"ltx_td ltx_align_center ltx_th ltx_th_row\">New</th>\n<td id=\"S3.T1.st3.4.1.3.2.2\" class=\"ltx_td ltx_align_center\">90</td>\n<td id=\"S3.T1.st3.4.1.3.2.3\" class=\"ltx_td ltx_nopad_r ltx_align_center\">Clean, Polished, Contam</td>\n</tr>\n<tr id=\"S3.T1.st3.4.1.4.3\" class=\"ltx_tr\">\n<th id=\"S3.T1.st3.4.1.4.3.1\" class=\"ltx_td ltx_align_center ltx_th ltx_th_row ltx_border_bb\">Worn</th>\n<td id=\"S3.T1.st3.4.1.4.3.2\" class=\"ltx_td ltx_align_center ltx_border_bb\">90</td>\n<td id=\"S3.T1.st3.4.1.4.3.3\" class=\"ltx_td ltx_nopad_r ltx_border_bb\"></td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "The aforementioned works mainly targeted cross-device decentralized learning. Yet, existing research has underscored the value of cross-silo FL, where fewer but resource-rich organizations like manufacturers, hospitals, and banks serve as clients [34].\nFL has recently received attention in the manufacturing sector [35]. For instance, Ahn et al. [36] employed FL for anomaly detection and predictive maintenance in pumps. FL methods were developed for defect detection in metal AM [12] and fault diagnosis in rotating machinery [13]. Despite these advances, there is a notable lack of research on FL for UMW. CM in UMW poses more significant challenges, due to complex process physics and limited understanding of process mechanisms. Moreover, the presence of multiple types of anomalies complicates online monitoring [9].",
            "Domain group M: In this group, the welding samples are generated by combining different materials from either 0.25 mm thick Copper (Cu) or Aluminum (Al) sheets, each subjected to varying welding times, as detailed in Table 1(a). Each domain within this group comprises 200 samples, evenly distributed across four tool conditions: new horn/new anvil (TC1), new horn/worn anvil (TC2), worn horn/new anvil (TC3), and worn horn/worn anvil (TC4).",
            "Domain group S: In this setup, 0.20 mm Cu sheets are welded for fixed welding\ntime of 1.0 second. As detailed in Table 1(b), different domains are characterized by distinct surface conditions, including a “Clean” surface prepared using alcoholic wipes, a “Polished” surface achieved by sandpapering the contact faces, and a “Contam” (Contaminated) surface created by contaminating the surface by cutting fluid. 30 samples were generated for each combination of workpiece surface condition and tool condition, resulting in a total of 270 samples. The objective of the S domains is to classify three tool conditions: new horn/new anvil (New), worn horn/worn anvil (Worn), and damaged horn/damaged anvil (DMGD).",
            "Domain group T: In this domain group, the data is identical to that in domain group S. However, the primary objective shifts to classifying the surface conditions while maintaining different domains representing distinct tool conditions, as outlined in Table 1(c).",
            "The client distribution is as follows: One domain of each domain group is considered as the target domain, and each of the other domains is equally distributed as the source domains among three clients at random. This means each client has access to data from only one domain, which is similar to real-world company scenarios. This distribution results in 9 training clients for domain group M and 6 each for domain groups S and T. As depicted in Tables A.1, A.2, and A.3 in A, clients in domain group M have about 67 data points each, while those in groups S and T have 30 data points each. The challenge in learning models suitable for domain generalization is heightened by the limited number of data points available to each client and the restriction of having access to only one domain’s data.",
            "Additionally, when comparing Figures 5 and 7, it is evident that the outcomes of minimal collaboration in our proposed framework, using a client fraction of 1/3, are either comparable to or, in some instances, exceed the results of other FL approaches with a client fraction of 1. This finding suggests that the FTL-TP method, by including only two clients from domain group S (totaling 60 data points) and three clients from domain group M (totaling 200 data points), can outperform state-of-the-art FL methods that use all available data points from domain group M (600 data points). This notable improvement is likely due to the efficient representation learning that takes place between clients across both datasets.",
            "Figure 8 shows that our framework is more time-efficient in training models compared to traditional FL frameworks. For instance, the FedAvg framework, which is considered as the simplest FL model, requires over 20% more time for training. When using an FL framework with the same loss function as FTL-TP, the extra time needed increases to more than 50%. Notably, within the single-dataset frameworks for domain groups M and S, there are 9 and 6 clients, running on 3 and 2 Raspberry Pis, respectively. The FTL-TP method which is a dual-dataset framework includes 15 clients implemented on 4 Raspberry Pis, which can raise the latency in the edge-cloud implementation. Despite this, the proposed approach proves to be more time-efficient overall. Additionally, in the system developed with Raspberry Pis and a message broker for weight transmission, the training time for 10 server rounds is under two minutes, making FTL-TP suitable for real-world applications."
        ]
    },
    "A1.T2": {
        "caption": "Table A.1: Domain group M client distribution in case of taking Al-Al as target domain (N (New) - W (Worn))",
        "table": "<table id=\"A1.T2.4\" class=\"ltx_tabular ltx_centering ltx_guessed_headers ltx_align_middle\">\n<thead class=\"ltx_thead\">\n<tr id=\"A1.T2.4.1.1\" class=\"ltx_tr\">\n<th id=\"A1.T2.4.1.1.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_th_row ltx_border_t\">Domains/Classes</th>\n<th id=\"A1.T2.4.1.1.2\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\">TC1 (N-N)</th>\n<th id=\"A1.T2.4.1.1.3\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\">TC2 (N-W)</th>\n<th id=\"A1.T2.4.1.1.4\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\">TC3 (W-N)</th>\n<th id=\"A1.T2.4.1.1.5\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\">TC4 (W-N)</th>\n</tr>\n</thead>\n<tbody class=\"ltx_tbody\">\n<tr id=\"A1.T2.4.2.1\" class=\"ltx_tr\">\n<th id=\"A1.T2.4.2.1.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_row ltx_border_t\">Al-Al</th>\n<td id=\"A1.T2.4.2.1.2\" class=\"ltx_td ltx_align_center ltx_border_t\" colspan=\"4\">Target Domains</td>\n</tr>\n<tr id=\"A1.T2.4.3.2\" class=\"ltx_tr\">\n<th id=\"A1.T2.4.3.2.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_row\">Al-Cu</th>\n<td id=\"A1.T2.4.3.2.2\" class=\"ltx_td ltx_align_center\" colspan=\"4\">200 data points in 3 training clients (about 67 each)</td>\n</tr>\n<tr id=\"A1.T2.4.4.3\" class=\"ltx_tr\">\n<th id=\"A1.T2.4.4.3.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_row\">Cu-Cu</th>\n<td id=\"A1.T2.4.4.3.2\" class=\"ltx_td ltx_align_center\" colspan=\"4\">200 data points in 3 training clients (about 67 each)</td>\n</tr>\n<tr id=\"A1.T2.4.5.4\" class=\"ltx_tr\">\n<th id=\"A1.T2.4.5.4.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_row ltx_border_b\">Cu-Al</th>\n<td id=\"A1.T2.4.5.4.2\" class=\"ltx_td ltx_align_center ltx_border_b\" colspan=\"4\">200 data points in 3 training clients (about 67 each)</td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "The aforementioned works mainly targeted cross-device decentralized learning. Yet, existing research has underscored the value of cross-silo FL, where fewer but resource-rich organizations like manufacturers, hospitals, and banks serve as clients [34].\nFL has recently received attention in the manufacturing sector [35]. For instance, Ahn et al. [36] employed FL for anomaly detection and predictive maintenance in pumps. FL methods were developed for defect detection in metal AM [12] and fault diagnosis in rotating machinery [13]. Despite these advances, there is a notable lack of research on FL for UMW. CM in UMW poses more significant challenges, due to complex process physics and limited understanding of process mechanisms. Moreover, the presence of multiple types of anomalies complicates online monitoring [9].",
            "Domain group M: In this group, the welding samples are generated by combining different materials from either 0.25 mm thick Copper (Cu) or Aluminum (Al) sheets, each subjected to varying welding times, as detailed in Table 1(a). Each domain within this group comprises 200 samples, evenly distributed across four tool conditions: new horn/new anvil (TC1), new horn/worn anvil (TC2), worn horn/new anvil (TC3), and worn horn/worn anvil (TC4).",
            "Domain group S: In this setup, 0.20 mm Cu sheets are welded for fixed welding\ntime of 1.0 second. As detailed in Table 1(b), different domains are characterized by distinct surface conditions, including a “Clean” surface prepared using alcoholic wipes, a “Polished” surface achieved by sandpapering the contact faces, and a “Contam” (Contaminated) surface created by contaminating the surface by cutting fluid. 30 samples were generated for each combination of workpiece surface condition and tool condition, resulting in a total of 270 samples. The objective of the S domains is to classify three tool conditions: new horn/new anvil (New), worn horn/worn anvil (Worn), and damaged horn/damaged anvil (DMGD).",
            "Domain group T: In this domain group, the data is identical to that in domain group S. However, the primary objective shifts to classifying the surface conditions while maintaining different domains representing distinct tool conditions, as outlined in Table 1(c).",
            "The client distribution is as follows: One domain of each domain group is considered as the target domain, and each of the other domains is equally distributed as the source domains among three clients at random. This means each client has access to data from only one domain, which is similar to real-world company scenarios. This distribution results in 9 training clients for domain group M and 6 each for domain groups S and T. As depicted in Tables A.1, A.2, and A.3 in A, clients in domain group M have about 67 data points each, while those in groups S and T have 30 data points each. The challenge in learning models suitable for domain generalization is heightened by the limited number of data points available to each client and the restriction of having access to only one domain’s data.",
            "Additionally, when comparing Figures 5 and 7, it is evident that the outcomes of minimal collaboration in our proposed framework, using a client fraction of 1/3, are either comparable to or, in some instances, exceed the results of other FL approaches with a client fraction of 1. This finding suggests that the FTL-TP method, by including only two clients from domain group S (totaling 60 data points) and three clients from domain group M (totaling 200 data points), can outperform state-of-the-art FL methods that use all available data points from domain group M (600 data points). This notable improvement is likely due to the efficient representation learning that takes place between clients across both datasets.",
            "Figure 8 shows that our framework is more time-efficient in training models compared to traditional FL frameworks. For instance, the FedAvg framework, which is considered as the simplest FL model, requires over 20% more time for training. When using an FL framework with the same loss function as FTL-TP, the extra time needed increases to more than 50%. Notably, within the single-dataset frameworks for domain groups M and S, there are 9 and 6 clients, running on 3 and 2 Raspberry Pis, respectively. The FTL-TP method which is a dual-dataset framework includes 15 clients implemented on 4 Raspberry Pis, which can raise the latency in the edge-cloud implementation. Despite this, the proposed approach proves to be more time-efficient overall. Additionally, in the system developed with Raspberry Pis and a message broker for weight transmission, the training time for 10 server rounds is under two minutes, making FTL-TP suitable for real-world applications."
        ]
    },
    "A1.T3": {
        "caption": "Table A.2: Domain group S client distribution in case of taking clean as target domain",
        "table": "<table id=\"A1.T3.4\" class=\"ltx_tabular ltx_centering ltx_guessed_headers ltx_align_middle\">\n<thead class=\"ltx_thead\">\n<tr id=\"A1.T3.4.1.1\" class=\"ltx_tr\">\n<th id=\"A1.T3.4.1.1.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_th_row ltx_border_t\">Domain/Classes</th>\n<th id=\"A1.T3.4.1.1.2\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\">DMGD</th>\n<th id=\"A1.T3.4.1.1.3\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\">New</th>\n<th id=\"A1.T3.4.1.1.4\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\">Worn</th>\n</tr>\n</thead>\n<tbody class=\"ltx_tbody\">\n<tr id=\"A1.T3.4.2.1\" class=\"ltx_tr\">\n<th id=\"A1.T3.4.2.1.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_row ltx_border_t\">Clean</th>\n<td id=\"A1.T3.4.2.1.2\" class=\"ltx_td ltx_align_center ltx_border_t\" colspan=\"3\">Target domain</td>\n</tr>\n<tr id=\"A1.T3.4.3.2\" class=\"ltx_tr\">\n<th id=\"A1.T3.4.3.2.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_row\">Contam</th>\n<td id=\"A1.T3.4.3.2.2\" class=\"ltx_td ltx_align_center\" colspan=\"3\">90 data points in 3 training clients (30 each)</td>\n</tr>\n<tr id=\"A1.T3.4.4.3\" class=\"ltx_tr\">\n<th id=\"A1.T3.4.4.3.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_row ltx_border_b\">Polished</th>\n<td id=\"A1.T3.4.4.3.2\" class=\"ltx_td ltx_align_center ltx_border_b\" colspan=\"3\">90 data points in 3 training clients (30 each)</td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "The aforementioned works mainly targeted cross-device decentralized learning. Yet, existing research has underscored the value of cross-silo FL, where fewer but resource-rich organizations like manufacturers, hospitals, and banks serve as clients [34].\nFL has recently received attention in the manufacturing sector [35]. For instance, Ahn et al. [36] employed FL for anomaly detection and predictive maintenance in pumps. FL methods were developed for defect detection in metal AM [12] and fault diagnosis in rotating machinery [13]. Despite these advances, there is a notable lack of research on FL for UMW. CM in UMW poses more significant challenges, due to complex process physics and limited understanding of process mechanisms. Moreover, the presence of multiple types of anomalies complicates online monitoring [9].",
            "Domain group M: In this group, the welding samples are generated by combining different materials from either 0.25 mm thick Copper (Cu) or Aluminum (Al) sheets, each subjected to varying welding times, as detailed in Table 1(a). Each domain within this group comprises 200 samples, evenly distributed across four tool conditions: new horn/new anvil (TC1), new horn/worn anvil (TC2), worn horn/new anvil (TC3), and worn horn/worn anvil (TC4).",
            "Domain group S: In this setup, 0.20 mm Cu sheets are welded for fixed welding\ntime of 1.0 second. As detailed in Table 1(b), different domains are characterized by distinct surface conditions, including a “Clean” surface prepared using alcoholic wipes, a “Polished” surface achieved by sandpapering the contact faces, and a “Contam” (Contaminated) surface created by contaminating the surface by cutting fluid. 30 samples were generated for each combination of workpiece surface condition and tool condition, resulting in a total of 270 samples. The objective of the S domains is to classify three tool conditions: new horn/new anvil (New), worn horn/worn anvil (Worn), and damaged horn/damaged anvil (DMGD).",
            "Domain group T: In this domain group, the data is identical to that in domain group S. However, the primary objective shifts to classifying the surface conditions while maintaining different domains representing distinct tool conditions, as outlined in Table 1(c).",
            "The client distribution is as follows: One domain of each domain group is considered as the target domain, and each of the other domains is equally distributed as the source domains among three clients at random. This means each client has access to data from only one domain, which is similar to real-world company scenarios. This distribution results in 9 training clients for domain group M and 6 each for domain groups S and T. As depicted in Tables A.1, A.2, and A.3 in A, clients in domain group M have about 67 data points each, while those in groups S and T have 30 data points each. The challenge in learning models suitable for domain generalization is heightened by the limited number of data points available to each client and the restriction of having access to only one domain’s data.",
            "Additionally, when comparing Figures 5 and 7, it is evident that the outcomes of minimal collaboration in our proposed framework, using a client fraction of 1/3, are either comparable to or, in some instances, exceed the results of other FL approaches with a client fraction of 1. This finding suggests that the FTL-TP method, by including only two clients from domain group S (totaling 60 data points) and three clients from domain group M (totaling 200 data points), can outperform state-of-the-art FL methods that use all available data points from domain group M (600 data points). This notable improvement is likely due to the efficient representation learning that takes place between clients across both datasets.",
            "Figure 8 shows that our framework is more time-efficient in training models compared to traditional FL frameworks. For instance, the FedAvg framework, which is considered as the simplest FL model, requires over 20% more time for training. When using an FL framework with the same loss function as FTL-TP, the extra time needed increases to more than 50%. Notably, within the single-dataset frameworks for domain groups M and S, there are 9 and 6 clients, running on 3 and 2 Raspberry Pis, respectively. The FTL-TP method which is a dual-dataset framework includes 15 clients implemented on 4 Raspberry Pis, which can raise the latency in the edge-cloud implementation. Despite this, the proposed approach proves to be more time-efficient overall. Additionally, in the system developed with Raspberry Pis and a message broker for weight transmission, the training time for 10 server rounds is under two minutes, making FTL-TP suitable for real-world applications."
        ]
    },
    "A1.T4": {
        "caption": "Table A.3: Domain group T client distribution in case of taking DMGD as target domain",
        "table": "<table id=\"A1.T4.4\" class=\"ltx_tabular ltx_centering ltx_guessed_headers ltx_align_middle\">\n<thead class=\"ltx_thead\">\n<tr id=\"A1.T4.4.1.1\" class=\"ltx_tr\">\n<th id=\"A1.T4.4.1.1.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_th_row ltx_border_t\">Domain/Classes</th>\n<th id=\"A1.T4.4.1.1.2\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\">Clean</th>\n<th id=\"A1.T4.4.1.1.3\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\">Contam</th>\n<th id=\"A1.T4.4.1.1.4\" class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\">Polished</th>\n</tr>\n</thead>\n<tbody class=\"ltx_tbody\">\n<tr id=\"A1.T4.4.2.1\" class=\"ltx_tr\">\n<th id=\"A1.T4.4.2.1.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_row ltx_border_t\">DMGD</th>\n<td id=\"A1.T4.4.2.1.2\" class=\"ltx_td ltx_align_center ltx_border_t\" colspan=\"3\">Target domain</td>\n</tr>\n<tr id=\"A1.T4.4.3.2\" class=\"ltx_tr\">\n<th id=\"A1.T4.4.3.2.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_row\">New</th>\n<td id=\"A1.T4.4.3.2.2\" class=\"ltx_td ltx_align_center\" colspan=\"3\">90 data points in 3 training clients (30 each)</td>\n</tr>\n<tr id=\"A1.T4.4.4.3\" class=\"ltx_tr\">\n<th id=\"A1.T4.4.4.3.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_row ltx_border_b\">Worn</th>\n<td id=\"A1.T4.4.4.3.2\" class=\"ltx_td ltx_align_center ltx_border_b\" colspan=\"3\">90 data points in 3 training clients (30 each)</td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "The aforementioned works mainly targeted cross-device decentralized learning. Yet, existing research has underscored the value of cross-silo FL, where fewer but resource-rich organizations like manufacturers, hospitals, and banks serve as clients [34].\nFL has recently received attention in the manufacturing sector [35]. For instance, Ahn et al. [36] employed FL for anomaly detection and predictive maintenance in pumps. FL methods were developed for defect detection in metal AM [12] and fault diagnosis in rotating machinery [13]. Despite these advances, there is a notable lack of research on FL for UMW. CM in UMW poses more significant challenges, due to complex process physics and limited understanding of process mechanisms. Moreover, the presence of multiple types of anomalies complicates online monitoring [9].",
            "Domain group M: In this group, the welding samples are generated by combining different materials from either 0.25 mm thick Copper (Cu) or Aluminum (Al) sheets, each subjected to varying welding times, as detailed in Table 1(a). Each domain within this group comprises 200 samples, evenly distributed across four tool conditions: new horn/new anvil (TC1), new horn/worn anvil (TC2), worn horn/new anvil (TC3), and worn horn/worn anvil (TC4).",
            "Domain group S: In this setup, 0.20 mm Cu sheets are welded for fixed welding\ntime of 1.0 second. As detailed in Table 1(b), different domains are characterized by distinct surface conditions, including a “Clean” surface prepared using alcoholic wipes, a “Polished” surface achieved by sandpapering the contact faces, and a “Contam” (Contaminated) surface created by contaminating the surface by cutting fluid. 30 samples were generated for each combination of workpiece surface condition and tool condition, resulting in a total of 270 samples. The objective of the S domains is to classify three tool conditions: new horn/new anvil (New), worn horn/worn anvil (Worn), and damaged horn/damaged anvil (DMGD).",
            "Domain group T: In this domain group, the data is identical to that in domain group S. However, the primary objective shifts to classifying the surface conditions while maintaining different domains representing distinct tool conditions, as outlined in Table 1(c).",
            "The client distribution is as follows: One domain of each domain group is considered as the target domain, and each of the other domains is equally distributed as the source domains among three clients at random. This means each client has access to data from only one domain, which is similar to real-world company scenarios. This distribution results in 9 training clients for domain group M and 6 each for domain groups S and T. As depicted in Tables A.1, A.2, and A.3 in A, clients in domain group M have about 67 data points each, while those in groups S and T have 30 data points each. The challenge in learning models suitable for domain generalization is heightened by the limited number of data points available to each client and the restriction of having access to only one domain’s data.",
            "Additionally, when comparing Figures 5 and 7, it is evident that the outcomes of minimal collaboration in our proposed framework, using a client fraction of 1/3, are either comparable to or, in some instances, exceed the results of other FL approaches with a client fraction of 1. This finding suggests that the FTL-TP method, by including only two clients from domain group S (totaling 60 data points) and three clients from domain group M (totaling 200 data points), can outperform state-of-the-art FL methods that use all available data points from domain group M (600 data points). This notable improvement is likely due to the efficient representation learning that takes place between clients across both datasets.",
            "Figure 8 shows that our framework is more time-efficient in training models compared to traditional FL frameworks. For instance, the FedAvg framework, which is considered as the simplest FL model, requires over 20% more time for training. When using an FL framework with the same loss function as FTL-TP, the extra time needed increases to more than 50%. Notably, within the single-dataset frameworks for domain groups M and S, there are 9 and 6 clients, running on 3 and 2 Raspberry Pis, respectively. The FTL-TP method which is a dual-dataset framework includes 15 clients implemented on 4 Raspberry Pis, which can raise the latency in the edge-cloud implementation. Despite this, the proposed approach proves to be more time-efficient overall. Additionally, in the system developed with Raspberry Pis and a message broker for weight transmission, the training time for 10 server rounds is under two minutes, making FTL-TP suitable for real-world applications."
        ]
    }
}