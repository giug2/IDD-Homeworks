{
    "PAPER'S NUMBER OF TABLES": 2,
    "S4.T1": {
        "caption": "TABLE I: Average Time Cost of a Communication Round under Different Pairing Mechanisms.",
        "table": "<table id=\"S4.T1.1.1\" class=\"ltx_tabular ltx_align_middle\">\n<tbody class=\"ltx_tbody\">\n<tr id=\"S4.T1.1.1.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T1.1.1.1.1.1\" class=\"ltx_td ltx_align_center ltx_border_tt\"><span id=\"S4.T1.1.1.1.1.1.1\" class=\"ltx_text ltx_font_bold\">FedPairing</span></td>\n<td id=\"S4.T1.1.1.1.1.2\" class=\"ltx_td ltx_align_center ltx_border_tt\"><span id=\"S4.T1.1.1.1.1.2.1\" class=\"ltx_text ltx_font_bold\">Random</span></td>\n<td id=\"S4.T1.1.1.1.1.3\" class=\"ltx_td ltx_align_center ltx_border_tt\"><span id=\"S4.T1.1.1.1.1.3.1\" class=\"ltx_text ltx_font_bold\">Location-based</span></td>\n<td id=\"S4.T1.1.1.1.1.4\" class=\"ltx_td ltx_align_center ltx_border_tt\"><span id=\"S4.T1.1.1.1.1.4.1\" class=\"ltx_text ltx_font_bold\">Computation resource-based</span></td>\n</tr>\n<tr id=\"S4.T1.1.1.2.2\" class=\"ltx_tr\">\n<td id=\"S4.T1.1.1.2.2.1\" class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\">1553s</td>\n<td id=\"S4.T1.1.1.2.2.2\" class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\">4063s</td>\n<td id=\"S4.T1.1.1.2.2.3\" class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\">7275s</td>\n<td id=\"S4.T1.1.1.2.2.4\" class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\">1807s</td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "The results presented in Table I show that the greedy pairing strategy of FedPairing yields the shortest training time. In comparison to random pairing, location-based pairing, and computation resource-based pairing strategies, it reduces the time consumption by 61.8%, 78.7%, and 14.1%, respectively. This is because training time can be divided into communication and computation time, and the baseline strategies optimize these times via different means. Specifically, the location-based strategy only optimizes communication time, whereas the computation resource-based strategy only optimizes computation time, and joint optimization cannot be achieved. On the other hand, FedPairing’s greedy pairing strategy considers both communication rate and computing resources between clients, resulting in the shortest training time. Moreover, it serves as a highly effective solution to mitigate the straggler effect."
        ]
    },
    "S4.T2": {
        "caption": "TABLE II: Average Time Cost of a Communication Round under Different Algorithms.",
        "table": "<table id=\"S4.T2.1.1\" class=\"ltx_tabular ltx_align_middle\">\n<tbody class=\"ltx_tbody\">\n<tr id=\"S4.T2.1.1.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T2.1.1.1.1.1\" class=\"ltx_td ltx_align_center ltx_border_tt\"><span id=\"S4.T2.1.1.1.1.1.1\" class=\"ltx_text ltx_font_bold\">FedPairing</span></td>\n<td id=\"S4.T2.1.1.1.1.2\" class=\"ltx_td ltx_align_center ltx_border_tt\"><span id=\"S4.T2.1.1.1.1.2.1\" class=\"ltx_text ltx_font_bold\">SplitFed</span></td>\n<td id=\"S4.T2.1.1.1.1.3\" class=\"ltx_td ltx_align_center ltx_border_tt\"><span id=\"S4.T2.1.1.1.1.3.1\" class=\"ltx_text ltx_font_bold\">vanilla FL</span></td>\n<td id=\"S4.T2.1.1.1.1.4\" class=\"ltx_td ltx_align_center ltx_border_tt\"><span id=\"S4.T2.1.1.1.1.4.1\" class=\"ltx_text ltx_font_bold\">vanilla SL</span></td>\n</tr>\n<tr id=\"S4.T2.1.1.2.2\" class=\"ltx_tr\">\n<td id=\"S4.T2.1.1.2.2.1\" class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\">1553s</td>\n<td id=\"S4.T2.1.1.2.2.2\" class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\">1798s</td>\n<td id=\"S4.T2.1.1.2.2.3\" class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\">8716s</td>\n<td id=\"S4.T2.1.1.2.2.4\" class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\">106s</td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "As shown in Table II, FedPairing reduces the time consumed to complete a communication round by 82.2%, 13.6% compared to vanilla FL and SplitFed, respectively. This is because FedParing achieves a equalization of the total computational power of each pair by matching two clients with large computational power differences together. The client with poor computational power can offload its training load to the paired client with strong computational power through the model splitting mechanism, thus reducing its own training time consumption, and the straggler effect suffered by the whole system is thus alleviated. However, FedPairing consumes more time to complete a communication round compared to vanilla SL. This is because vanilla SL offloads most of the training load to the server with super computing power by splitting the model between the client and the server, and the client only needs to complete a small amount of computation, so vanilla SL takes less time to complete a communication round. However, vanilla SL often suffers from convergence problems on Non-IID datasets and cannot achieve comparable performance to FedPairing."
        ]
    }
}