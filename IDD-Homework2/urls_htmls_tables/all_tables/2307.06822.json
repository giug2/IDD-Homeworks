{
    "PAPER'S NUMBER OF TABLES": 4,
    "S4.T1": {
        "caption": "Table 1: Overview of the models.",
        "table": "<table id=\"S4.T1.4\" class=\"ltx_tabular ltx_centering ltx_guessed_headers ltx_align_middle\">\n<tbody class=\"ltx_tbody\">\n<tr id=\"S4.T1.4.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T1.4.1.1.1\" class=\"ltx_td ltx_border_tt\"></td>\n<th id=\"S4.T1.4.1.1.2\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Task</th>\n<th id=\"S4.T1.4.1.1.3\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Model Type</th>\n<th id=\"S4.T1.4.1.1.4\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Size</th>\n<th id=\"S4.T1.4.1.1.5\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Parameters</th>\n</tr>\n<tr id=\"S4.T1.4.2.2\" class=\"ltx_tr\">\n<td id=\"S4.T1.4.2.2.1\" class=\"ltx_td ltx_align_left ltx_border_t\">Sine-wave Example</td>\n<td id=\"S4.T1.4.2.2.2\" class=\"ltx_td ltx_align_left ltx_border_t\">Regression</td>\n<td id=\"S4.T1.4.2.2.3\" class=\"ltx_td ltx_align_left ltx_border_t\">Fully Connected</td>\n<td id=\"S4.T1.4.2.2.4\" class=\"ltx_td ltx_align_left ltx_border_t\">4.1 KB</td>\n<td id=\"S4.T1.4.2.2.5\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_border_t\">593</td>\n</tr>\n<tr id=\"S4.T1.4.3.3\" class=\"ltx_tr\">\n<td id=\"S4.T1.4.3.3.1\" class=\"ltx_td ltx_align_left\">Omniglot 5-classes</td>\n<td id=\"S4.T1.4.3.3.2\" class=\"ltx_td ltx_align_left\">Image Classification</td>\n<td id=\"S4.T1.4.3.3.3\" class=\"ltx_td ltx_align_left\">Convolutional</td>\n<td id=\"S4.T1.4.3.3.4\" class=\"ltx_td ltx_align_left\">313 KB</td>\n<td id=\"S4.T1.4.3.3.5\" class=\"ltx_td ltx_nopad_r ltx_align_left\">80389</td>\n</tr>\n<tr id=\"S4.T1.4.4.4\" class=\"ltx_tr\">\n<td id=\"S4.T1.4.4.4.1\" class=\"ltx_td ltx_align_left ltx_border_bb\">Keywords Spotting 3-classes</td>\n<td id=\"S4.T1.4.4.4.2\" class=\"ltx_td ltx_align_left ltx_border_bb\">Audio Classification</td>\n<td id=\"S4.T1.4.4.4.3\" class=\"ltx_td ltx_align_left ltx_border_bb\">Convolutional</td>\n<td id=\"S4.T1.4.4.4.4\" class=\"ltx_td ltx_align_left ltx_border_bb\">71 KB</td>\n<td id=\"S4.T1.4.4.4.5\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_border_bb\">17251</td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "In this section, we assess the performance of TinyMetaFed on regression, image classification, and audio classification tasks. We analyze various performance metrics, such as energy consumption, communication costs, and memory requirement. The NNs from the MLPerf Tiny benchmark¬†[4] are used to ensure consistent comparisons. Table¬†1 provides an overview of the models for the three tasks.\nEach experiment is repeated many times, and the results are presented as the mean value with the standard deviation."
        ]
    },
    "S4.T2": {
        "caption": "Table 2: Sine-wave: benchmark of one iteration on a Arduino Nano BLE 33.",
        "table": "<table id=\"S4.T2.4.1\" class=\"ltx_tabular ltx_guessed_headers ltx_align_middle\">\n<tbody class=\"ltx_tbody\">\n<tr id=\"S4.T2.4.1.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.1.1.1\" class=\"ltx_td ltx_border_tt\"></td>\n<th id=\"S4.T2.4.1.1.1.2\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Sending</th>\n<th id=\"S4.T2.4.1.1.1.3\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">\n<table id=\"S4.T2.4.1.1.1.3.1\" class=\"ltx_tabular ltx_align_middle\">\n<tr id=\"S4.T2.4.1.1.1.3.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.1.1.3.1.1.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Local Training</td>\n</tr>\n</table>\n</th>\n<th id=\"S4.T2.4.1.1.1.4\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Receiving</th>\n<th id=\"S4.T2.4.1.1.1.5\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">\n<table id=\"S4.T2.4.1.1.1.5.1\" class=\"ltx_tabular ltx_align_middle\">\n<tr id=\"S4.T2.4.1.1.1.5.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.1.1.5.1.1.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Total</td>\n</tr>\n</table>\n</th>\n<th id=\"S4.T2.4.1.1.1.6\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">\n<table id=\"S4.T2.4.1.1.1.6.1\" class=\"ltx_tabular ltx_align_middle\">\n<tr id=\"S4.T2.4.1.1.1.6.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.1.1.6.1.1.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Communication</td>\n</tr>\n<tr id=\"S4.T2.4.1.1.1.6.1.2\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.1.1.6.1.2.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Cost</td>\n</tr>\n</table>\n</th>\n<th id=\"S4.T2.4.1.1.1.7\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">\n<table id=\"S4.T2.4.1.1.1.7.1\" class=\"ltx_tabular ltx_align_middle\">\n<tr id=\"S4.T2.4.1.1.1.7.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.1.1.7.1.1.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Energy</td>\n</tr>\n<tr id=\"S4.T2.4.1.1.1.7.1.2\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.1.1.7.1.2.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Consumption</td>\n</tr>\n</table>\n</th>\n<th id=\"S4.T2.4.1.1.1.8\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_th ltx_th_column ltx_border_tt\">\n<table id=\"S4.T2.4.1.1.1.8.1\" class=\"ltx_tabular ltx_align_middle\">\n<tr id=\"S4.T2.4.1.1.1.8.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.1.1.8.1.1.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Memory</td>\n</tr>\n<tr id=\"S4.T2.4.1.1.1.8.1.2\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.1.1.8.1.2.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Requirement</td>\n</tr>\n</table>\n</th>\n</tr>\n<tr id=\"S4.T2.4.1.2.2\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.2.2.1\" class=\"ltx_td ltx_align_left ltx_border_t\">Reptile</td>\n<td id=\"S4.T2.4.1.2.2.2\" class=\"ltx_td ltx_align_left ltx_border_t\">0.81 s</td>\n<td id=\"S4.T2.4.1.2.2.3\" class=\"ltx_td ltx_align_left ltx_border_t\">6.45 s</td>\n<td id=\"S4.T2.4.1.2.2.4\" class=\"ltx_td ltx_align_left ltx_border_t\">0.61 s</td>\n<td id=\"S4.T2.4.1.2.2.5\" class=\"ltx_td ltx_align_left ltx_border_t\">7.87 s</td>\n<td id=\"S4.T2.4.1.2.2.6\" class=\"ltx_td ltx_align_left ltx_border_t\">1 * N</td>\n<td id=\"S4.T2.4.1.2.2.7\" class=\"ltx_td ltx_align_left ltx_border_t\">2.1 J</td>\n<td id=\"S4.T2.4.1.2.2.8\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_border_t\">8.6 KB</td>\n</tr>\n<tr id=\"S4.T2.4.1.3.3\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.3.3.1\" class=\"ltx_td ltx_align_left\">TinyReptile</td>\n<td id=\"S4.T2.4.1.3.3.2\" class=\"ltx_td ltx_align_left\">0.81 s</td>\n<td id=\"S4.T2.4.1.3.3.3\" class=\"ltx_td ltx_align_left\">0.32 s</td>\n<td id=\"S4.T2.4.1.3.3.4\" class=\"ltx_td ltx_align_left\">0.61 s</td>\n<td id=\"S4.T2.4.1.3.3.5\" class=\"ltx_td ltx_align_left\">1.74 s</td>\n<td id=\"S4.T2.4.1.3.3.6\" class=\"ltx_td ltx_align_left\">1</td>\n<td id=\"S4.T2.4.1.3.3.7\" class=\"ltx_td ltx_align_left\">0.48 J</td>\n<td id=\"S4.T2.4.1.3.3.8\" class=\"ltx_td ltx_nopad_r ltx_align_left\">2.5 KB</td>\n</tr>\n<tr id=\"S4.T2.4.1.4.4\" class=\"ltx_tr\">\n<td id=\"S4.T2.4.1.4.4.1\" class=\"ltx_td ltx_align_left ltx_border_bb\">TinyMetaFed (Ours)</td>\n<td id=\"S4.T2.4.1.4.4.2\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T2.4.1.4.4.2.1\" class=\"ltx_text ltx_font_bold\">0.76 s</span></td>\n<td id=\"S4.T2.4.1.4.4.3\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T2.4.1.4.4.3.1\" class=\"ltx_text ltx_font_bold\">0.24 s</span></td>\n<td id=\"S4.T2.4.1.4.4.4\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T2.4.1.4.4.4.1\" class=\"ltx_text ltx_font_bold\">0.39 s</span></td>\n<td id=\"S4.T2.4.1.4.4.5\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T2.4.1.4.4.5.1\" class=\"ltx_text ltx_font_bold\">1.39 s</span></td>\n<td id=\"S4.T2.4.1.4.4.6\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T2.4.1.4.4.6.1\" class=\"ltx_text ltx_font_bold\">0.72</span></td>\n<td id=\"S4.T2.4.1.4.4.7\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T2.4.1.4.4.7.1\" class=\"ltx_text ltx_font_bold\">0.36 J</span></td>\n<td id=\"S4.T2.4.1.4.4.8\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_border_bb\"><span id=\"S4.T2.4.1.4.4.8.1\" class=\"ltx_text ltx_font_bold\">2.5 KB</span></td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            [
                "We first show the convergence behaviors of the three approaches on the Sine-wave, Omniglot image classification, and Keywords Spotting audio classification datasets, as depicted in Figures¬†",
                "2",
                ",¬†",
                "3(a)",
                ", and¬†",
                "3(b)",
                ", respectively. Each experiment is repeated multiple times, and the results are presented as the mean value with the standard deviation. Depending on the datasets, TinyMetaFed demonstrates similar or even better performance than the baselines. For instance, TinyMetaFed exhibits comparable final performance in the Omniglot and Keywords Spotting tasks and demonstrates faster and more stable training progress in the Sine-wave example.",
                "Next, we present the hardware benchmark results for the three tasks, as shown in Tables¬†",
                "2",
                ",¬†",
                "3",
                ", and¬†",
                "4",
                ", respectively. We conduct the experiments on the Sine-wave example using the Arduino MCU and on the Omniglot and Keywords Spotting tasks using the Raspberry Pi. Communication costs are calculated relative to TinyReptile, which serves as the baseline with a value of one, where the entire model is transmitted to the server in each round. Since Reptile employs a batched communication schema,\nit can require communication with ",
                "N",
                "ùëÅ",
                "N",
                " devices during each iteration. We measure energy consumption by subtracting idle energy consumption from the total energy consumed during algorithm execution using a USB multimeter. The results are measured on one device for one iteration. Our TinyMetaFed empirically improves upon the baseline algorithms in all metrics. For example, it achieves ",
                "65",
                "%",
                "percent",
                "65",
                "65\\%",
                " and ",
                "59",
                "%",
                "percent",
                "59",
                "59\\%",
                " communication cost savings compared to TinyReptile on the Omniglot and Keywords Spotting datasets and approximately ",
                "50",
                "%",
                "percent",
                "50",
                "50\\%",
                " energy saving on both datasets. In Fig.¬†",
                "4",
                ", we compare the training progress of these approaches based on the total number of parameters communicated. We observe a clear advantage of TinyMetaFed regarding communication cost saving.",
                "Finally, TinyMetaFed provides a level of protection against privacy attacks. Many attack methods from previous work may not be effective for TinyMetaFed since only the global parameters of the model are communicated to the server, and these updates are directly calculated using a portion of the local support set.\nTinyMetaFed can be further enhanced in the most privacy-sensitive applications with secure aggregation or differential privacy to provide provable privacy guarantees."
            ]
        ]
    },
    "S4.T3": {
        "caption": "Table 3: Omniglot: benchmark of one iteration on a Raspberry Pi 4.",
        "table": "<table id=\"S4.T3.4.1\" class=\"ltx_tabular ltx_guessed_headers ltx_align_middle\">\n<tbody class=\"ltx_tbody\">\n<tr id=\"S4.T3.4.1.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T3.4.1.1.1.1\" class=\"ltx_td ltx_border_tt\"></td>\n<th id=\"S4.T3.4.1.1.1.2\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Sending</th>\n<th id=\"S4.T3.4.1.1.1.3\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Local Training</th>\n<th id=\"S4.T3.4.1.1.1.4\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Receiving</th>\n<th id=\"S4.T3.4.1.1.1.5\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Total</th>\n<th id=\"S4.T3.4.1.1.1.6\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">\n<table id=\"S4.T3.4.1.1.1.6.1\" class=\"ltx_tabular ltx_align_middle\">\n<tr id=\"S4.T3.4.1.1.1.6.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T3.4.1.1.1.6.1.1.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Communication</td>\n</tr>\n<tr id=\"S4.T3.4.1.1.1.6.1.2\" class=\"ltx_tr\">\n<td id=\"S4.T3.4.1.1.1.6.1.2.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Cost</td>\n</tr>\n</table>\n</th>\n<th id=\"S4.T3.4.1.1.1.7\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">\n<table id=\"S4.T3.4.1.1.1.7.1\" class=\"ltx_tabular ltx_align_middle\">\n<tr id=\"S4.T3.4.1.1.1.7.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T3.4.1.1.1.7.1.1.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Energy</td>\n</tr>\n<tr id=\"S4.T3.4.1.1.1.7.1.2\" class=\"ltx_tr\">\n<td id=\"S4.T3.4.1.1.1.7.1.2.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Consumption</td>\n</tr>\n</table>\n</th>\n<th id=\"S4.T3.4.1.1.1.8\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_th ltx_th_column ltx_border_tt\">\n<table id=\"S4.T3.4.1.1.1.8.1\" class=\"ltx_tabular ltx_align_middle\">\n<tr id=\"S4.T3.4.1.1.1.8.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T3.4.1.1.1.8.1.1.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Memory</td>\n</tr>\n<tr id=\"S4.T3.4.1.1.1.8.1.2\" class=\"ltx_tr\">\n<td id=\"S4.T3.4.1.1.1.8.1.2.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Requirement</td>\n</tr>\n</table>\n</th>\n</tr>\n<tr id=\"S4.T3.4.1.2.2\" class=\"ltx_tr\">\n<td id=\"S4.T3.4.1.2.2.1\" class=\"ltx_td ltx_align_left ltx_border_t\">Reptile</td>\n<td id=\"S4.T3.4.1.2.2.2\" class=\"ltx_td ltx_align_left ltx_border_t\">4.2 s</td>\n<td id=\"S4.T3.4.1.2.2.3\" class=\"ltx_td ltx_align_left ltx_border_t\">9.1 s</td>\n<td id=\"S4.T3.4.1.2.2.4\" class=\"ltx_td ltx_align_left ltx_border_t\">2.0 s</td>\n<td id=\"S4.T3.4.1.2.2.5\" class=\"ltx_td ltx_align_left ltx_border_t\">15.3 s</td>\n<td id=\"S4.T3.4.1.2.2.6\" class=\"ltx_td ltx_align_left ltx_border_t\">1*N</td>\n<td id=\"S4.T3.4.1.2.2.7\" class=\"ltx_td ltx_align_left ltx_border_t\">35 J</td>\n<td id=\"S4.T3.4.1.2.2.8\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_border_t\">6517 KB</td>\n</tr>\n<tr id=\"S4.T3.4.1.3.3\" class=\"ltx_tr\">\n<td id=\"S4.T3.4.1.3.3.1\" class=\"ltx_td ltx_align_left\">TinyReptile</td>\n<td id=\"S4.T3.4.1.3.3.2\" class=\"ltx_td ltx_align_left\">4.2 s</td>\n<td id=\"S4.T3.4.1.3.3.3\" class=\"ltx_td ltx_align_left\">5.5 s</td>\n<td id=\"S4.T3.4.1.3.3.4\" class=\"ltx_td ltx_align_left\">2.0 s</td>\n<td id=\"S4.T3.4.1.3.3.5\" class=\"ltx_td ltx_align_left\">11.7 s</td>\n<td id=\"S4.T3.4.1.3.3.6\" class=\"ltx_td ltx_align_left\">1</td>\n<td id=\"S4.T3.4.1.3.3.7\" class=\"ltx_td ltx_align_left\">23 J</td>\n<td id=\"S4.T3.4.1.3.3.8\" class=\"ltx_td ltx_nopad_r ltx_align_left\">79 KB</td>\n</tr>\n<tr id=\"S4.T3.4.1.4.4\" class=\"ltx_tr\">\n<td id=\"S4.T3.4.1.4.4.1\" class=\"ltx_td ltx_align_left ltx_border_bb\">TinyMetaFed (Ours)</td>\n<td id=\"S4.T3.4.1.4.4.2\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T3.4.1.4.4.2.1\" class=\"ltx_text ltx_font_bold\">1.0 s</span></td>\n<td id=\"S4.T3.4.1.4.4.3\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T3.4.1.4.4.3.1\" class=\"ltx_text ltx_font_bold\">5.2 s</span></td>\n<td id=\"S4.T3.4.1.4.4.4\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T3.4.1.4.4.4.1\" class=\"ltx_text ltx_font_bold\">0.9 s</span></td>\n<td id=\"S4.T3.4.1.4.4.5\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T3.4.1.4.4.5.1\" class=\"ltx_text ltx_font_bold\">7.1 s</span></td>\n<td id=\"S4.T3.4.1.4.4.6\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T3.4.1.4.4.6.1\" class=\"ltx_text ltx_font_bold\">0.35</span></td>\n<td id=\"S4.T3.4.1.4.4.7\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T3.4.1.4.4.7.1\" class=\"ltx_text ltx_font_bold\">11 J</span></td>\n<td id=\"S4.T3.4.1.4.4.8\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_border_bb\"><span id=\"S4.T3.4.1.4.4.8.1\" class=\"ltx_text ltx_font_bold\">79 KB</span></td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            [
                "We first show the convergence behaviors of the three approaches on the Sine-wave, Omniglot image classification, and Keywords Spotting audio classification datasets, as depicted in Figures¬†",
                "2",
                ",¬†",
                "3(a)",
                ", and¬†",
                "3(b)",
                ", respectively. Each experiment is repeated multiple times, and the results are presented as the mean value with the standard deviation. Depending on the datasets, TinyMetaFed demonstrates similar or even better performance than the baselines. For instance, TinyMetaFed exhibits comparable final performance in the Omniglot and Keywords Spotting tasks and demonstrates faster and more stable training progress in the Sine-wave example.",
                "Next, we present the hardware benchmark results for the three tasks, as shown in Tables¬†",
                "2",
                ",¬†",
                "3",
                ", and¬†",
                "4",
                ", respectively. We conduct the experiments on the Sine-wave example using the Arduino MCU and on the Omniglot and Keywords Spotting tasks using the Raspberry Pi. Communication costs are calculated relative to TinyReptile, which serves as the baseline with a value of one, where the entire model is transmitted to the server in each round. Since Reptile employs a batched communication schema,\nit can require communication with ",
                "N",
                "ùëÅ",
                "N",
                " devices during each iteration. We measure energy consumption by subtracting idle energy consumption from the total energy consumed during algorithm execution using a USB multimeter. The results are measured on one device for one iteration. Our TinyMetaFed empirically improves upon the baseline algorithms in all metrics. For example, it achieves ",
                "65",
                "%",
                "percent",
                "65",
                "65\\%",
                " and ",
                "59",
                "%",
                "percent",
                "59",
                "59\\%",
                " communication cost savings compared to TinyReptile on the Omniglot and Keywords Spotting datasets and approximately ",
                "50",
                "%",
                "percent",
                "50",
                "50\\%",
                " energy saving on both datasets. In Fig.¬†",
                "4",
                ", we compare the training progress of these approaches based on the total number of parameters communicated. We observe a clear advantage of TinyMetaFed regarding communication cost saving.",
                "Finally, TinyMetaFed provides a level of protection against privacy attacks. Many attack methods from previous work may not be effective for TinyMetaFed since only the global parameters of the model are communicated to the server, and these updates are directly calculated using a portion of the local support set.\nTinyMetaFed can be further enhanced in the most privacy-sensitive applications with secure aggregation or differential privacy to provide provable privacy guarantees."
            ]
        ]
    },
    "S4.T4": {
        "caption": "Table 4: Keywords Spotting: benchmark of one iteration on a Raspberry Pi 4.",
        "table": "<table id=\"S4.T4.4.1\" class=\"ltx_tabular ltx_guessed_headers ltx_align_middle\">\n<tbody class=\"ltx_tbody\">\n<tr id=\"S4.T4.4.1.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T4.4.1.1.1.1\" class=\"ltx_td ltx_border_tt\"></td>\n<th id=\"S4.T4.4.1.1.1.2\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Sending</th>\n<th id=\"S4.T4.4.1.1.1.3\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Local Training</th>\n<th id=\"S4.T4.4.1.1.1.4\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Receiving</th>\n<th id=\"S4.T4.4.1.1.1.5\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">Total</th>\n<th id=\"S4.T4.4.1.1.1.6\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">\n<table id=\"S4.T4.4.1.1.1.6.1\" class=\"ltx_tabular ltx_align_middle\">\n<tr id=\"S4.T4.4.1.1.1.6.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T4.4.1.1.1.6.1.1.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Communication</td>\n</tr>\n<tr id=\"S4.T4.4.1.1.1.6.1.2\" class=\"ltx_tr\">\n<td id=\"S4.T4.4.1.1.1.6.1.2.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Cost</td>\n</tr>\n</table>\n</th>\n<th id=\"S4.T4.4.1.1.1.7\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_tt\">\n<table id=\"S4.T4.4.1.1.1.7.1\" class=\"ltx_tabular ltx_align_middle\">\n<tr id=\"S4.T4.4.1.1.1.7.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T4.4.1.1.1.7.1.1.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Energy</td>\n</tr>\n<tr id=\"S4.T4.4.1.1.1.7.1.2\" class=\"ltx_tr\">\n<td id=\"S4.T4.4.1.1.1.7.1.2.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Consumption</td>\n</tr>\n</table>\n</th>\n<th id=\"S4.T4.4.1.1.1.8\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_th ltx_th_column ltx_border_tt\">\n<table id=\"S4.T4.4.1.1.1.8.1\" class=\"ltx_tabular ltx_align_middle\">\n<tr id=\"S4.T4.4.1.1.1.8.1.1\" class=\"ltx_tr\">\n<td id=\"S4.T4.4.1.1.1.8.1.1.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Memory</td>\n</tr>\n<tr id=\"S4.T4.4.1.1.1.8.1.2\" class=\"ltx_tr\">\n<td id=\"S4.T4.4.1.1.1.8.1.2.1\" class=\"ltx_td ltx_nopad_r ltx_align_left\">Requirement</td>\n</tr>\n</table>\n</th>\n</tr>\n<tr id=\"S4.T4.4.1.2.2\" class=\"ltx_tr\">\n<td id=\"S4.T4.4.1.2.2.1\" class=\"ltx_td ltx_align_left ltx_border_t\">Reptile</td>\n<td id=\"S4.T4.4.1.2.2.2\" class=\"ltx_td ltx_align_left ltx_border_t\">2.7 s</td>\n<td id=\"S4.T4.4.1.2.2.3\" class=\"ltx_td ltx_align_left ltx_border_t\">9.6 s</td>\n<td id=\"S4.T4.4.1.2.2.4\" class=\"ltx_td ltx_align_left ltx_border_t\">1.5 s</td>\n<td id=\"S4.T4.4.1.2.2.5\" class=\"ltx_td ltx_align_left ltx_border_t\">13.8 s</td>\n<td id=\"S4.T4.4.1.2.2.6\" class=\"ltx_td ltx_align_left ltx_border_t\">1 * N</td>\n<td id=\"S4.T4.4.1.2.2.7\" class=\"ltx_td ltx_align_left ltx_border_t\">36 J</td>\n<td id=\"S4.T4.4.1.2.2.8\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_border_t\">11462 KB</td>\n</tr>\n<tr id=\"S4.T4.4.1.3.3\" class=\"ltx_tr\">\n<td id=\"S4.T4.4.1.3.3.1\" class=\"ltx_td ltx_align_left\">TinyReptile</td>\n<td id=\"S4.T4.4.1.3.3.2\" class=\"ltx_td ltx_align_left\">2.7 s</td>\n<td id=\"S4.T4.4.1.3.3.3\" class=\"ltx_td ltx_align_left\">2.7 s</td>\n<td id=\"S4.T4.4.1.3.3.4\" class=\"ltx_td ltx_align_left\">1.5 s</td>\n<td id=\"S4.T4.4.1.3.3.5\" class=\"ltx_td ltx_align_left\">6.9 s</td>\n<td id=\"S4.T4.4.1.3.3.6\" class=\"ltx_td ltx_align_left\">1</td>\n<td id=\"S4.T4.4.1.3.3.7\" class=\"ltx_td ltx_align_left\">15 J</td>\n<td id=\"S4.T4.4.1.3.3.8\" class=\"ltx_td ltx_nopad_r ltx_align_left\">346 KB</td>\n</tr>\n<tr id=\"S4.T4.4.1.4.4\" class=\"ltx_tr\">\n<td id=\"S4.T4.4.1.4.4.1\" class=\"ltx_td ltx_align_left ltx_border_bb\">TinyMetaFed (Ours)</td>\n<td id=\"S4.T4.4.1.4.4.2\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T4.4.1.4.4.2.1\" class=\"ltx_text ltx_font_bold\">0.7s</span></td>\n<td id=\"S4.T4.4.1.4.4.3\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T4.4.1.4.4.3.1\" class=\"ltx_text ltx_font_bold\">2.6 s</span></td>\n<td id=\"S4.T4.4.1.4.4.4\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T4.4.1.4.4.4.1\" class=\"ltx_text ltx_font_bold\">0.8 s</span></td>\n<td id=\"S4.T4.4.1.4.4.5\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T4.4.1.4.4.5.1\" class=\"ltx_text ltx_font_bold\">4.1 s</span></td>\n<td id=\"S4.T4.4.1.4.4.6\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T4.4.1.4.4.6.1\" class=\"ltx_text ltx_font_bold\">0.41</span></td>\n<td id=\"S4.T4.4.1.4.4.7\" class=\"ltx_td ltx_align_left ltx_border_bb\"><span id=\"S4.T4.4.1.4.4.7.1\" class=\"ltx_text ltx_font_bold\">8 J</span></td>\n<td id=\"S4.T4.4.1.4.4.8\" class=\"ltx_td ltx_nopad_r ltx_align_left ltx_border_bb\"><span id=\"S4.T4.4.1.4.4.8.1\" class=\"ltx_text ltx_font_bold\">346 KB</span></td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            [
                "We first show the convergence behaviors of the three approaches on the Sine-wave, Omniglot image classification, and Keywords Spotting audio classification datasets, as depicted in Figures¬†",
                "2",
                ",¬†",
                "3(a)",
                ", and¬†",
                "3(b)",
                ", respectively. Each experiment is repeated multiple times, and the results are presented as the mean value with the standard deviation. Depending on the datasets, TinyMetaFed demonstrates similar or even better performance than the baselines. For instance, TinyMetaFed exhibits comparable final performance in the Omniglot and Keywords Spotting tasks and demonstrates faster and more stable training progress in the Sine-wave example.",
                "Next, we present the hardware benchmark results for the three tasks, as shown in Tables¬†",
                "2",
                ",¬†",
                "3",
                ", and¬†",
                "4",
                ", respectively. We conduct the experiments on the Sine-wave example using the Arduino MCU and on the Omniglot and Keywords Spotting tasks using the Raspberry Pi. Communication costs are calculated relative to TinyReptile, which serves as the baseline with a value of one, where the entire model is transmitted to the server in each round. Since Reptile employs a batched communication schema,\nit can require communication with ",
                "N",
                "ùëÅ",
                "N",
                " devices during each iteration. We measure energy consumption by subtracting idle energy consumption from the total energy consumed during algorithm execution using a USB multimeter. The results are measured on one device for one iteration. Our TinyMetaFed empirically improves upon the baseline algorithms in all metrics. For example, it achieves ",
                "65",
                "%",
                "percent",
                "65",
                "65\\%",
                " and ",
                "59",
                "%",
                "percent",
                "59",
                "59\\%",
                " communication cost savings compared to TinyReptile on the Omniglot and Keywords Spotting datasets and approximately ",
                "50",
                "%",
                "percent",
                "50",
                "50\\%",
                " energy saving on both datasets. In Fig.¬†",
                "4",
                ", we compare the training progress of these approaches based on the total number of parameters communicated. We observe a clear advantage of TinyMetaFed regarding communication cost saving.",
                "Finally, TinyMetaFed provides a level of protection against privacy attacks. Many attack methods from previous work may not be effective for TinyMetaFed since only the global parameters of the model are communicated to the server, and these updates are directly calculated using a portion of the local support set.\nTinyMetaFed can be further enhanced in the most privacy-sensitive applications with secure aggregation or differential privacy to provide provable privacy guarantees."
            ]
        ]
    }
}