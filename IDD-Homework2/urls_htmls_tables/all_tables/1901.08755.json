{
    "PAPER'S NUMBER OF TABLES": 2,
    "S8.T1": {
        "caption": "TABLE I: First Tree vs. Second Tree in terms of Leaf Purity",
        "table": "<table id=\"S8.T1.1\" class=\"ltx_tabular ltx_centering ltx_guessed_headers ltx_align_middle\">\n<thead class=\"ltx_thead\">\n<tr id=\"S8.T1.1.1.1\" class=\"ltx_tr\">\n<th id=\"S8.T1.1.1.1.1\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_t\">Mean Purity</th>\n<th id=\"S8.T1.1.1.1.2\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_t\">Credit 1</th>\n<th id=\"S8.T1.1.1.1.3\" class=\"ltx_td ltx_align_left ltx_th ltx_th_column ltx_border_t\">Credit 2</th>\n</tr>\n</thead>\n<tbody class=\"ltx_tbody\">\n<tr id=\"S8.T1.1.2.1\" class=\"ltx_tr\">\n<td id=\"S8.T1.1.2.1.1\" class=\"ltx_td ltx_align_left ltx_border_t\">1st Tree</td>\n<td id=\"S8.T1.1.2.1.2\" class=\"ltx_td ltx_align_left ltx_border_t\">0.8058</td>\n<td id=\"S8.T1.1.2.1.3\" class=\"ltx_td ltx_align_left ltx_border_t\">0.7159</td>\n</tr>\n<tr id=\"S8.T1.1.3.2\" class=\"ltx_tr\">\n<td id=\"S8.T1.1.3.2.1\" class=\"ltx_td ltx_align_left ltx_border_b\">2rd Tree</td>\n<td id=\"S8.T1.1.3.2.2\" class=\"ltx_td ltx_align_left ltx_border_b\">0.66663</td>\n<td id=\"S8.T1.1.3.2.3\" class=\"ltx_td ltx_align_left ltx_border_b\">0.638</td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "The big data table is vertically split, such that the data are split in the feature dimension among parties;",
            "First, we study the performance of RL-SecureBoost in security. Following the analysis in Section 7, we evaluate information leakage in terms of leaf purity. Also, we know that as the leaf purity in the first tree increases, leaked information is reduced. Thereby, to verify the security of RL-SecureBoost, we have to illustrate that the first tree of RL-SecureBoost perform well enough to reduce the information leaked from the second tree. As shown in Table I, we compare the mean leaf purity of the first tree with the second tree. In particular, the mean leaf purity is the weighted average, which is calculated by ∑i=0knin​pisuperscriptsubscript𝑖0𝑘subscript𝑛𝑖𝑛subscript𝑝𝑖\\sum_{i=0}^{k}\\frac{n_{i}}{n}p_{i}. Here, k𝑘k and n𝑛n represents number of leaves and number of instances in total. pisubscript𝑝𝑖p_{i} and nisubscript𝑛𝑖n_{i} are defined as leaf purity and number of instances associated with leaf i𝑖i. According to Table I, the mean leaf purity decreases significantly from the first to the second tree on both datasets, which reflects a great reduction in information leakage. Moreover, the mean leaf purity of the second tree is just over 0.60.60.6 on both datasets, which is good enough to ensure a safe protocol."
        ]
    },
    "S8.T2": {
        "caption": "TABLE II: Classification Performance for RL-SecureBoost vs. SecureBoost",
        "table": "<table id=\"S8.T2.1\" class=\"ltx_tabular ltx_centering ltx_align_middle\">\n<tbody class=\"ltx_tbody\">\n<tr id=\"S8.T2.1.1.1\" class=\"ltx_tr\">\n<td id=\"S8.T2.1.1.1.1\" class=\"ltx_td ltx_align_left ltx_border_tt\" rowspan=\"2\"><span id=\"S8.T2.1.1.1.1.1\" class=\"ltx_text\">Model</span></td>\n<td id=\"S8.T2.1.1.1.2\" class=\"ltx_td ltx_align_center ltx_border_tt\" colspan=\"3\">Credit 1</td>\n<td id=\"S8.T2.1.1.1.3\" class=\"ltx_td ltx_align_center ltx_border_tt\" colspan=\"3\">Credit 2</td>\n</tr>\n<tr id=\"S8.T2.1.2.2\" class=\"ltx_tr\">\n<td id=\"S8.T2.1.2.2.1\" class=\"ltx_td ltx_align_center ltx_border_t\">ACC</td>\n<td id=\"S8.T2.1.2.2.2\" class=\"ltx_td ltx_align_center ltx_border_t\">F1-score</td>\n<td id=\"S8.T2.1.2.2.3\" class=\"ltx_td ltx_align_center ltx_border_t\">AUC</td>\n<td id=\"S8.T2.1.2.2.4\" class=\"ltx_td ltx_align_center ltx_border_t\">ACC</td>\n<td id=\"S8.T2.1.2.2.5\" class=\"ltx_td ltx_align_center ltx_border_t\">F1-score</td>\n<td id=\"S8.T2.1.2.2.6\" class=\"ltx_td ltx_align_center ltx_border_t\">AUC</td>\n</tr>\n<tr id=\"S8.T2.1.3.3\" class=\"ltx_tr\">\n<td id=\"S8.T2.1.3.3.1\" class=\"ltx_td ltx_align_left ltx_border_t\">1st Tree, SecureBoost</td>\n<td id=\"S8.T2.1.3.3.2\" class=\"ltx_td ltx_align_center ltx_border_t\">0.9298</td>\n<td id=\"S8.T2.1.3.3.3\" class=\"ltx_td ltx_align_center ltx_border_t\">0.012</td>\n<td id=\"S8.T2.1.3.3.4\" class=\"ltx_td ltx_align_center ltx_border_t\">0.7002</td>\n<td id=\"S8.T2.1.3.3.5\" class=\"ltx_td ltx_align_center ltx_border_t\">0.7806</td>\n<td id=\"S8.T2.1.3.3.6\" class=\"ltx_td ltx_align_center ltx_border_t\">0</td>\n<td id=\"S8.T2.1.3.3.7\" class=\"ltx_td ltx_align_center ltx_border_t\">0.6381</td>\n</tr>\n<tr id=\"S8.T2.1.4.4\" class=\"ltx_tr\">\n<td id=\"S8.T2.1.4.4.1\" class=\"ltx_td ltx_align_left\">1st Tree, RL-SecureBoost</td>\n<td id=\"S8.T2.1.4.4.2\" class=\"ltx_td ltx_align_center\">0.9186</td>\n<td id=\"S8.T2.1.4.4.3\" class=\"ltx_td ltx_align_center\">0</td>\n<td id=\"S8.T2.1.4.4.4\" class=\"ltx_td ltx_align_center\">0.6912</td>\n<td id=\"S8.T2.1.4.4.5\" class=\"ltx_td ltx_align_center\">0.7793</td>\n<td id=\"S8.T2.1.4.4.6\" class=\"ltx_td ltx_align_center\">0</td>\n<td id=\"S8.T2.1.4.4.7\" class=\"ltx_td ltx_align_center\">0.6320</td>\n</tr>\n<tr id=\"S8.T2.1.5.5\" class=\"ltx_tr\">\n<td id=\"S8.T2.1.5.5.1\" class=\"ltx_td ltx_align_left ltx_border_t\">Overall, SecureBoost</td>\n<td id=\"S8.T2.1.5.5.2\" class=\"ltx_td ltx_align_center ltx_border_t\">0.9345</td>\n<td id=\"S8.T2.1.5.5.3\" class=\"ltx_td ltx_align_center ltx_border_t\">0.2576</td>\n<td id=\"S8.T2.1.5.5.4\" class=\"ltx_td ltx_align_center ltx_border_t\">0.8461</td>\n<td id=\"S8.T2.1.5.5.5\" class=\"ltx_td ltx_align_center ltx_border_t\">0.8180</td>\n<td id=\"S8.T2.1.5.5.6\" class=\"ltx_td ltx_align_center ltx_border_t\">0.4634</td>\n<td id=\"S8.T2.1.5.5.7\" class=\"ltx_td ltx_align_center ltx_border_t\">0.7701</td>\n</tr>\n<tr id=\"S8.T2.1.6.6\" class=\"ltx_tr\">\n<td id=\"S8.T2.1.6.6.1\" class=\"ltx_td ltx_align_left ltx_border_bb\">Overall, RL-SecureBoost</td>\n<td id=\"S8.T2.1.6.6.2\" class=\"ltx_td ltx_align_center ltx_border_bb\">0.9331</td>\n<td id=\"S8.T2.1.6.6.3\" class=\"ltx_td ltx_align_center ltx_border_bb\">0.2549</td>\n<td id=\"S8.T2.1.6.6.4\" class=\"ltx_td ltx_align_center ltx_border_bb\">0.8423</td>\n<td id=\"S8.T2.1.6.6.5\" class=\"ltx_td ltx_align_center ltx_border_bb\">0.8179</td>\n<td id=\"S8.T2.1.6.6.6\" class=\"ltx_td ltx_align_center ltx_border_bb\">0.4650</td>\n<td id=\"S8.T2.1.6.6.7\" class=\"ltx_td ltx_align_center ltx_border_bb\">0.7682</td>\n</tr>\n</tbody>\n</table>\n\n",
        "footnotes": "",
        "references": [
            "Next, to investigate the prediction performance of RL-SecureBoost, we compare RL-SecureBoost with SecureBoost with respect to the the first tree’s performance and the overall performance. We consider commonly used metrics including accuracy, Area under ROC curve (AUC) and f1-score. The results are presented in Table II. As observed, RL-SecureBoost performs equally well compared to SecureBoost in almost all cases. We also conduct a pairwise Wilcoxon signed-rank test between RL-SecureBoost and SecureBoost. The comparison results indicate that RL-SecureBoost is as accurate as SecureBoost, with a significance level of 0.050.050.05. The property of lossless is still guaranteed for RL-SecureBoost."
        ]
    }
}