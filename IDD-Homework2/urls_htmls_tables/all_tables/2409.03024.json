{
    "id_table_1": {
        "caption": "Table 1 .  List of the 16 modeled activity types.",
        "table": "S4.T1.2",
        "footnotes": [],
        "references": [
            "DeepAM is trained on 180,000 samples from the 2017 National Household Travel Survey (NHTS)  [ 2 ] . The activities used in the NHTS informed our activity classification into the 16 categories shown in Table  1 . The models loss function incorporates multiple components: cross-entropy loss for activity-type prediction, soft-label loss for temporal predictions, and specialized losses for temporal order and sequential timing to ensure logically consistent chronological sequences.",
            "The list of available Points of Interest (POIs) for the simulation was curated using data from Planetsense [ 18 ]  and USA Structures [ 13 ]  for the Los Angeles region, as defined by the boundary in  Figure   1 . POIs were matched to nearby structures, with unmatched structures assumed to be residential locations. Each location was then assigned a set of valid activity types based on a manually defined mapping. For example, locations labeled education by Planetsense were assigned activity types such as Work, School, and DropOff. Residential locations were assigned activity types like Home and Visit. The total number of POIs available for each activity type is presented in  Table   3 ."
        ]
    },
    "id_table_2": {
        "caption": "Table 2 .  Example of a single agents 8-week activity chain output from the Deep Activity Model.",
        "table": "S4.T2.2",
        "footnotes": [],
        "references": [
            "For this release, activity type chains were generated for a synthetic subpopulation of Los Angeles consisting of 200,000 agents. An example of an activity chain for a single agent is shown in Table  2 .",
            "Figure   2 ,  Figure   3 , and  Table   5  for illustrate an example of a recurring anomaly.  Figure   2  shows a calendar-based visualization of a normal 4-week period compared to an anomalous 4-week period.  Figure   3  shows a map-based visualization of the spatial activity of a particular day from  Figure   2 , which is further specified by  Table   5 ."
        ]
    },
    "id_table_3": {
        "caption": "Table 3 .  Number of POIs in the area of interest that correspond to each activity type. A given POI can correspond to multiple activity types.",
        "table": "S4.T3.2",
        "footnotes": [],
        "references": [
            "The list of available Points of Interest (POIs) for the simulation was curated using data from Planetsense [ 18 ]  and USA Structures [ 13 ]  for the Los Angeles region, as defined by the boundary in  Figure   1 . POIs were matched to nearby structures, with unmatched structures assumed to be residential locations. Each location was then assigned a set of valid activity types based on a manually defined mapping. For example, locations labeled education by Planetsense were assigned activity types such as Work, School, and DropOff. Residential locations were assigned activity types like Home and Visit. The total number of POIs available for each activity type is presented in  Table   3 .",
            "Figure   2 ,  Figure   3 , and  Table   5  for illustrate an example of a recurring anomaly.  Figure   2  shows a calendar-based visualization of a normal 4-week period compared to an anomalous 4-week period.  Figure   3  shows a map-based visualization of the spatial activity of a particular day from  Figure   2 , which is further specified by  Table   5 ."
        ]
    },
    "id_table_4": {
        "caption": "Table 4 .  Example of the stay_points_train.parquet data format, containing the stay points for 200,000 agents for 4 weeks.",
        "table": "S4.T4.2",
        "footnotes": [],
        "references": [
            "The final output is a schedule of POI visits for each agent, spanning two consecutive 4-week periods:  train  and  test . An example of the format for the train POI visits is shown in Table  4 .",
            "The original RioBusData model  [ 4 ]  uses a Convolutional Neural Network (CNN) to analyze bus trajectories in Rio de Janeiro. The CNN takes as input a sequence of GPS coordinates and predicts the bus ID, learning to distinguish between normal and outlier trajectories by assuming outlier bus trajectories IDs are harder to predict. The architecture of the adapted model is presented in Figure  4 ."
        ]
    },
    "id_table_5": {
        "caption": "Table 5 .  Tabular example of an injected anomaly, corresponding to  Figure   3  and  Figure   2  (Test Week 2, Thursday). Anomalies (red) are created as a result of the injected visit, as well as the temporal adjustments to surrounding visits.",
        "table": "S4.T5.2",
        "footnotes": [
            "",
            ""
        ],
        "references": [
            "Figure   2 ,  Figure   3 , and  Table   5  for illustrate an example of a recurring anomaly.  Figure   2  shows a calendar-based visualization of a normal 4-week period compared to an anomalous 4-week period.  Figure   3  shows a map-based visualization of the spatial activity of a particular day from  Figure   2 , which is further specified by  Table   5 .",
            "Then, for a given GPS trajectory, it uses the concatenated PAC embeddings and Word2Vec embeddings of all points in the trajectory as input to a GRU to finally predict the bus ID. Similar to Rio-Bus, it assumes outlier bus trajectories IDs are harder to predict. The architecture of the adapted PAC classifier is presented in Figure  5 .",
            "We mainly modify the Point Activity Classifier, see Figure  5 . We remove the route ID, velocity and acceleration from the GRU input since they are not available in our dataset. Instead, we concatenate the GRU input with Points of Interest (POI) embeddings. This provides context about the surrounding environment of each GPS coordinate. Staypoint durations are also directly concatenated with the GRU input. This helps capture the temporal aspect of staypoints. Instead of predicting the bus state, we predict the POI type of the GPS coordinate of interest and make sure the POI type of the point is removed from the input."
        ]
    },
    "id_table_6": {
        "caption": "Table 6 .  Staypoint-level and agent-level results from baseline methods on NUMOSIM-LA. GM-VSAE concatenates an agents entire series of stay points, so there are no staypoint-level scores for this method.",
        "table": "S6.T6.2",
        "footnotes": [],
        "references": [
            "The results of our baseline benchmarking experiments are presented in  Table   6 . In this table, we observe a striking trend: most existing, sophisticated anomaly detection models are underperforming, while a basic model that merely accounts for the visit rate of agents achieves significantly higher scores."
        ]
    }
}