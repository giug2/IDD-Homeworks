{
    "id_table_1": {
        "caption": "TABLE I:  Synthetic counterfactuals are clustered according to descriptive crash properties. We find that the baseline policy responds best to high-speed collisions and struggles to detect \"side-left\" and \"side-right\" crash types at low speeds.",
        "table": "S4.E5",
        "footnotes": [],
        "references": [
            "We highlight that our method is versatile and applicable to any parametric behavioral model. We demonstrate our pipeline on two representative behavior models: a regressive model  Salzmann et al., ( 2020 )  and a transformer-based model  Shi et al., ( 2022 ) . We have detailed the results for the transformer-based model  Shi et al., ( 2022 )  in the papers main body, while, for brevity, we present the findings for the regressive model  Salzmann et al., ( 2020 )  in the Appendix  Section   VII-G  with discussion. Further, we visually depict a synthetic counterfactual collision from each behavior model in  Figure   1 , on the main bodys first page, and in  Figure   8  in the Appendix  Section   VII-E .",
            "Below, in  Algorithms   1 ,  2  and  3  we reproduce an efficient random sketching algorithms from  Tropp et al., ( 2016 ) . While  Tropp et al., ( 2016 )  offers several possible random sketching algorithms, we focus on the symmetric positive decomposition consisting of 2 factors",
            "Below, we concisely reproduce the sketching algorithms exploited in this work for sketching positive definite matrices comprising the covariance in the Laplace method as applied to the behavior models parameter space. The sketching matrices are obtained as the result of  Algorithm   3 , but  Algorithms   1  and  2  are called as subroutines.",
            "Examples of generated collisions are presented in the main body with  Figure   1  and in the Appendix with  Figure   8 .",
            "As illustrated in  Figure   11 , Cluster 1, with relatively higher testing speed, demonstrates an exceptional response rate, with \"Chasing\" crashes constituting 90% and \"Side-left\" crashes 10%. The complete response rate in this cluster highlights its advanced detection capabilities, showcasing robust performance even under challenging conditions."
        ]
    },
    "id_table_2": {
        "caption": "TABLE II:  Core and descriptive features for generated collision clustering analysis.",
        "table": "S4.E6",
        "footnotes": [],
        "references": [
            "The first objective is to synthetically generate realistic, counterfactual scenarios. Existing work on scenario generation, like  Rempe et al., ( 2021 ) , generates counterfactual scenarios by perturbing the behavior of existing scenarios. This process involves replacing the reference trajectory of an agent with the prediction from a behavior model such that we can adjust the models weights to cause a synthetic collision. We aim to extend this generation framework by viewing realism through the lense of an envelope of larger than a constant  c c c italic_c  behavior probability density as defined by the behavior model itself. We visually depict such a condition in  Figure   2 .",
            "Below, in  Algorithms   1 ,  2  and  3  we reproduce an efficient random sketching algorithms from  Tropp et al., ( 2016 ) . While  Tropp et al., ( 2016 )  offers several possible random sketching algorithms, we focus on the symmetric positive decomposition consisting of 2 factors",
            "Below, we concisely reproduce the sketching algorithms exploited in this work for sketching positive definite matrices comprising the covariance in the Laplace method as applied to the behavior models parameter space. The sketching matrices are obtained as the result of  Algorithm   3 , but  Algorithms   1  and  2  are called as subroutines."
        ]
    },
    "id_table_3": {
        "caption": "TABLE III:  Clustering results for the generation based on the behavioral model in  Salzmann et al., ( 2020 ) .",
        "table": "S4.E7",
        "footnotes": [
            ""
        ],
        "references": [
            "For the MTR behavior model, the collisions are generated with a prescribed realism hyperparameter  r = 0.003 r 0.003 r=0.003 italic_r = 0.003  whose value is determined as discussed in  Section   VI-A . The generated counterfactual dataset comprises a total of 505 collisions. We have set a threshold for the smallest cluster size at 3% of the total dataset, aiming to identify clusters of relevant and representative scenarios. Therefore, we chose  k = 8 k 8 k=8 italic_k = 8  clusters in this case as shown in  Figure   3 . Final detailed statistics of the clusters are presented in  Table   I . The clusters are labeled in descending order of the adversarial vehicle speed,  v a subscript v a v_{a} italic_v start_POSTSUBSCRIPT italic_a end_POSTSUBSCRIPT , from more intense to less intense testing conditions, i.e., see  Figure   4 .",
            "Below, in  Algorithms   1 ,  2  and  3  we reproduce an efficient random sketching algorithms from  Tropp et al., ( 2016 ) . While  Tropp et al., ( 2016 )  offers several possible random sketching algorithms, we focus on the symmetric positive decomposition consisting of 2 factors",
            "Below, we concisely reproduce the sketching algorithms exploited in this work for sketching positive definite matrices comprising the covariance in the Laplace method as applied to the behavior models parameter space. The sketching matrices are obtained as the result of  Algorithm   3 , but  Algorithms   1  and  2  are called as subroutines."
        ]
    },
    "id_table_4": {
        "caption": "",
        "table": "S4.E8",
        "footnotes": [],
        "references": [
            "For the MTR behavior model, the collisions are generated with a prescribed realism hyperparameter  r = 0.003 r 0.003 r=0.003 italic_r = 0.003  whose value is determined as discussed in  Section   VI-A . The generated counterfactual dataset comprises a total of 505 collisions. We have set a threshold for the smallest cluster size at 3% of the total dataset, aiming to identify clusters of relevant and representative scenarios. Therefore, we chose  k = 8 k 8 k=8 italic_k = 8  clusters in this case as shown in  Figure   3 . Final detailed statistics of the clusters are presented in  Table   I . The clusters are labeled in descending order of the adversarial vehicle speed,  v a subscript v a v_{a} italic_v start_POSTSUBSCRIPT italic_a end_POSTSUBSCRIPT , from more intense to less intense testing conditions, i.e., see  Figure   4 ."
        ]
    },
    "id_table_5": {
        "caption": "",
        "table": "S4.E9",
        "footnotes": [],
        "references": [
            "Additionally, we quantify the decay of the singular values in the symmetric positive-definite sketching decomposition of the Hessian matrix in  Figure   5  and observe, like other works, e.g.,  Sharma et al., ( 2021 ) , that the singular values of deep learned models decay rapidly. This result suggests that the sketching decomposition is an excellent approximation of the Hessian matrix."
        ]
    },
    "id_table_6": {
        "caption": "",
        "table": "S5.T1.5",
        "footnotes": [],
        "references": [
            "We investigate the convergence of the Global Information Projection Matrix, which is the ability to extract the most energetic directions in the parameter space from the Laplace approximation. In  Figure   6 , we show that the Hessian converges rapidly  at 10% of the dataset, the number of captured linear directions is above 80%.",
            "Likewise, for the Low-Rank Adaptation sketching case, we observe similar but more rapid convergence to the final extracted linear subspace in  Figure   7  presented in the Appendix. We theorize this is due to the inherently smaller parameter space through the use of Low-Rank Adaptation. The fast convergence in  Figure   6  and  Figure   7  justifies that our fixed rank approximation of the Hessian only requires a fraction of the dataset; therefore, our proposed approach can be extended to large-scale behavior models trained on prohibitively large datasets."
        ]
    },
    "id_table_7": {
        "caption": "",
        "table": "Sx2.EGx1",
        "footnotes": [],
        "references": [
            "Likewise, for the Low-Rank Adaptation sketching case, we observe similar but more rapid convergence to the final extracted linear subspace in  Figure   7  presented in the Appendix. We theorize this is due to the inherently smaller parameter space through the use of Low-Rank Adaptation. The fast convergence in  Figure   6  and  Figure   7  justifies that our fixed rank approximation of the Hessian only requires a fraction of the dataset; therefore, our proposed approach can be extended to large-scale behavior models trained on prohibitively large datasets."
        ]
    },
    "id_table_8": {
        "caption": "",
        "table": "Sx2.T2.6",
        "footnotes": [],
        "references": [
            "We highlight that our method is versatile and applicable to any parametric behavioral model. We demonstrate our pipeline on two representative behavior models: a regressive model  Salzmann et al., ( 2020 )  and a transformer-based model  Shi et al., ( 2022 ) . We have detailed the results for the transformer-based model  Shi et al., ( 2022 )  in the papers main body, while, for brevity, we present the findings for the regressive model  Salzmann et al., ( 2020 )  in the Appendix  Section   VII-G  with discussion. Further, we visually depict a synthetic counterfactual collision from each behavior model in  Figure   1 , on the main bodys first page, and in  Figure   8  in the Appendix  Section   VII-E .",
            "Examples of generated collisions are presented in the main body with  Figure   1  and in the Appendix with  Figure   8 ."
        ]
    },
    "id_table_9": {
        "caption": "",
        "table": "Sx2.T3.4",
        "footnotes": [],
        "references": [
            "In this section, we present our findings based on an exemplary behavioral model  Salzmann et al., ( 2020 ) . The collisions are generated with a prescribed realism parameter  r = 0.03 r 0.03 r=0.03 italic_r = 0.03 . The dataset comprises a total of 174 collisions. We have set a threshold for the smallest cluster size at 5% of the total dataset, aiming to identify a concise set of representative scenarios. For our analysis, we chose  k = 5 k 5 k=5 italic_k = 5 , illustrated in  Figure   9 ."
        ]
    }
}