{
    "id_table_1": {
        "caption": "",
        "table": [
            [
                "<th class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\" id=\"S4.T1.2.1.1.1\">\n       Tasks\n      </th>\n      \n",
                "<th class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\" id=\"S4.T1.2.1.1.2\">\n       scatter plot(success rate)\n      </th>\n      \n",
                "<th class=\"ltx_td ltx_align_center ltx_th ltx_th_column ltx_border_t\" id=\"S4.T1.2.1.1.3\">\n       parallel coordinates\n      </th>\n     \n"
            ],
            [
                "<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S4.T1.2.2.1.1\">\n       cluster\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S4.T1.2.2.1.2\">\n       100%\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S4.T1.2.2.1.3\">\n       100%\n      </td>\n     \n"
            ],
            [
                "<td class=\"ltx_td ltx_align_center\" id=\"S4.T1.2.3.2.1\">\n       cluster count\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center\" id=\"S4.T1.2.3.2.2\">\n       60%\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center\" id=\"S4.T1.2.3.2.3\">\n       20%\n      </td>\n     \n"
            ],
            [
                "<td class=\"ltx_td ltx_align_center\" id=\"S4.T1.2.4.3.1\">\n       outlier\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center\" id=\"S4.T1.2.4.3.2\">\n       100%\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center\" id=\"S4.T1.2.4.3.3\">\n       90%\n      </td>\n     \n"
            ],
            [
                "<td class=\"ltx_td ltx_align_center\" id=\"S4.T1.2.5.4.1\">\n       outlier count\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center\" id=\"S4.T1.2.5.4.2\">\n       60%\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center\" id=\"S4.T1.2.5.4.3\">\n       80%\n      </td>\n     \n"
            ],
            [
                "<td class=\"ltx_td ltx_align_center ltx_border_b\" id=\"S4.T1.2.6.5.1\">\n       correlation\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_b\" id=\"S4.T1.2.6.5.2\">\n       100%\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_b\" id=\"S4.T1.2.6.5.3\">\n       20%\n      </td>\n     \n"
            ]
        ],
        "footnotes": [],
        "references": [
            "Scatterplot.        Compared to volume rendering images, in which visual recognition is a simple binary task, i.e., object recognition, the assessment of visual structure in scatter plots is more nuanced.Here, we design five basic visualization tasks:         cluster recognition, cluster counting, outlier detection, outlier counting, and correlation detection        to evaluate its performance.The evaluation result is displayed in Table               1             .For cluster recognition, our experiments show that the model can easily tell the plot has clusters (100% success rate).However, for the counting task, the success rate of the model is only at 60%.Similarly, we also separate the outlier tasks into recognition and counting.The final result aligns with the cluster recognition task.The model performs well on the outlier recognition task which has a 100% success rate, but has medium performance on the outlier counting task.In the correlation detection task, the model has a 100% success rate."
        ]
    },
    "id_table_2": {
        "caption": "",
        "table": [
            [
                "<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S4.T2.2.1.1.1\">\n       Tasks\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S4.T2.2.1.1.2\">\n       node count\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S4.T2.2.1.1.3\">\n       find node\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S4.T2.2.1.1.4\">\n       connection\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S4.T2.2.1.1.5\">\n       neighbor\n      </td>\n     \n"
            ],
            [
                "<td class=\"ltx_td ltx_align_center ltx_border_b ltx_border_t\" id=\"S4.T2.2.2.2.1\">\n       success %\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_b ltx_border_t\" id=\"S4.T2.2.2.2.2\">\n       50%\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_b ltx_border_t\" id=\"S4.T2.2.2.2.3\">\n       100%\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_b ltx_border_t\" id=\"S4.T2.2.2.2.4\">\n       70%\n      </td>\n      \n",
                "<td class=\"ltx_td ltx_align_center ltx_border_b ltx_border_t\" id=\"S4.T2.2.2.2.5\">\n       10%\n      </td>\n     \n"
            ]
        ],
        "footnotes": [],
        "references": [
            "Graph.        To assess GPT4-Vâ€™s visual understanding of graphs, we choose the classic graph visualization technique node-link diagram and adjacency matrix.In our experiment, we use the basic graph exploration task         [           GFC04          ]        to evaluate the performance of the LLM.Instead of performing all tasks, we pick four tasks that are easy to perform without interactions.The overall result is displayed in Table               2             .From the evaluation, we can tell that LLM can easily find a node in the graph visualization. However, it is difficult to tell the neighbor of the selected node.The connection tells whether two nodes are connected (directly or indirectly through other nodes), and the final result shows sub-optimal performance.Finally, the node count ability has a 50% success rate which shows that the model again has poor performance on the counting tasks."
        ]
    }
}