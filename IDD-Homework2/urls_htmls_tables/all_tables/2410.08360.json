{
    "id_table_1": {
        "caption": "",
        "table": "S2.E5",
        "footnotes": [],
        "references": [
            "We devise a notion of separation distance that allows us to easily quantify the deviation of a general pairwise comparison model from the class of all BTL models. Under some regularity conditions, we show in  Theorem   1  that this measure is always within constant factors of the Frobenius norm distance between a general pairwise comparison model and the class of BTL models. We then formulate our hypothesis testing problem for BTL models in a minimax sense using this separation distance and also introduce a test statistic in  Eq.   24  based on it.",
            "For fixed induced graphs, we set the parameter  d = 2  d max , d 2 subscript d d=2d_{\\max}, italic_d = 2 italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT ,  where  d max  max i  [ n ]   j = 1 n E i  j  subscript d subscript i delimited-[] n superscript subscript j 1 n subscript E i j d_{\\max}\\triangleq\\max_{i\\in[n]}\\sum_{j=1}^{n}E_{ij} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_max start_POSTSUBSCRIPT italic_i  [ italic_n ] end_POSTSUBSCRIPT  start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT italic_E start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  is the maximum degree of a node in  G G {\\mathcal{G}} caligraphic_G . Further discussion regarding this parameter can be found in  Section   III-E . As noted earlier, the most well-known specialization of the pairwise comparison model in  Definition   1  is the BTL model defined below  [ 2 ,  3 ,  5 ] .",
            "In addition to  Assumption   1 , we need a few more assumptions on the underlying graph  G G {\\mathcal{G}} caligraphic_G  and the probabilities  p i  j subscript p i j p_{ij} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  of the pairwise comparison model. Broadly, these assumptions necessitate that the graph  G G {\\mathcal{G}} caligraphic_G  has edge expansion properties and is almost regular. To present the details, we start by considering the  divergence transition matrix  (DTM)  [ 58 ,  59 ,  60 ] ,",
            "corresponding to a canonical Markov matrix  S S S italic_S  associated with a valid pairwise comparison matrix  P P P italic_P , where    \\pi italic_  is the stationary distribution of  S S S italic_S  and    diag  (  )   diag  \\Pi\\triangleq\\operatorname{{diag}}(\\pi) roman_  roman_diag ( italic_ ) . We also note that due to  Assumption   1 , the connectedness of  G G {\\mathcal{G}} caligraphic_G , and the aperiodicity of  S S S italic_S  (since  S i  i > 0 subscript S i i 0 S_{ii}>0 italic_S start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT > 0  for all  i  [ n ] i delimited-[] n i\\in[n] italic_i  [ italic_n ] ),  S S S italic_S  possesses a unique, entrywise strictly positive, stationary distribution    \\pi italic_ . This ensures that the quantities we introduce in the sequel, such as edge expansion and principal ratio, are well-defined.",
            "We introduce the following assumption on the edge expansion of the DTM  R R R italic_R  in  Eq.   11 .",
            "It is worth mentioning that coupled with  Assumptions   1  and  4 ,  Assumption   2  can be imposed by lower bounding the canonical notion of edge expansion of  G G {\\mathcal{G}} caligraphic_G . Indeed, observe that",
            "automatically satisfy both  Assumptions   1  and  4  (with  h =   1 h superscript  1 h=\\delta^{-1} italic_h = italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT ). 2 2 2 We refer readers to  Section   IV-A  for an explicit expression for the stationary distribution in BTL models.  Furthermore, if the underlying graph  G G {\\mathcal{G}} caligraphic_G  exhibits significant edge expansion in the canonical sense, i.e.,   ~  ( G )   ~  d ~ italic- G ~ italic- d \\tilde{\\phi}({\\mathcal{G}})\\geq\\tilde{\\epsilon}d over~ start_ARG italic_ end_ARG ( caligraphic_G )  over~ start_ARG italic_ end_ARG italic_d  for some constant   ~ > 0 ~ italic- 0 \\tilde{\\epsilon}>0 over~ start_ARG italic_ end_ARG > 0 , and adheres to  Assumption   3 , then all four assumptions are simultaneously satisfied for all BTL models with bounded condition number. For general pairwise comparison models, we will present several classes of graphs in  Section   III-E , e.g., complete graphs, dense regular graphs, and Erdos-Renyi random graphs, where any pairwise comparison model satisfying  Assumption   1  will also satisfy  Assumptions   2 ,  3  and  4  (with high probability, where appropriate).",
            "Recall that by  Proposition   1 , any pairwise comparison matrix  P P P italic_P  is BTL if and only if it satisfies the reversibility condition    P = P T    P superscript P T  \\Pi P=P^{\\mathrm{T}}\\Pi roman_ italic_P = italic_P start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT roman_  and translated skew-symmetry  P + P T = P E  ( 1 n  1 n T ) P superscript P T subscript P E subscript 1 n superscript subscript 1 n T P+P^{\\mathrm{T}}={\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}{\\mathbf{1}}_{n}^% {\\mathrm{T}}) italic_P + italic_P start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT = caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) , where   = diag  (  )  diag  \\Pi=\\operatorname{{diag}}(\\pi) roman_ = roman_diag ( italic_ )  and    \\pi italic_  is the stationary distribution of the canonical Markov matrix  S S S italic_S  corresponding to  P P P italic_P . It turns out that both conditions are elegantly captured by the matrix    P + P    P E  ( 1 n   T )  P P  subscript P E subscript 1 n superscript  T \\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}}) roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  as illustrated in  Proposition   2 .",
            "For a symmetric edge set  E E {\\mathcal{E}} caligraphic_E , the pairwise comparison matrix  P P P italic_P  in  Definition   1  corresponds to a BTL model (on the set  E E {\\mathcal{E}} caligraphic_E ) if and only if    P + P   = P E  ( 1 n   T )  P P  subscript P E subscript 1 n superscript  T \\Pi P+P\\Pi={\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}}) roman_ italic_P + italic_P roman_ = caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) .",
            "The proof of  Proposition   3  is provided in  Section   IV-C . (We note that since   i > 0 subscript  i 0 \\pi_{i}>0 italic_ start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT > 0  for all  i  [ n ] i delimited-[] n i\\in[n] italic_i  [ italic_n ] , the norm       1 , F \\|\\cdot\\|_{\\pi^{-1},\\mathrm{F}}    start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT , roman_F end_POSTSUBSCRIPT  is well-defined.) Using  Proposition   3 , we show in  Theorem   1  that if a pairwise comparison model  P P P italic_P  satisfies  Assumptions   1 ,  2 ,  3  and  4 , then the quantity     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  is always within constant factors of the Frobenius-norm-distance between  P P P italic_P  and the set of BTL models (or more precisely, the set  BTL h subscript BTL h \\mathsf{BTL}_{h} sansserif_BTL start_POSTSUBSCRIPT italic_h end_POSTSUBSCRIPT  defined below). Hence,     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  captures a natural notion of separation distance in this setting.",
            "Suppose the pairwise comparison matrix  P P P italic_P  and the induced graph  G G {\\mathcal{G}} caligraphic_G  satisfy  Assumptions   1 ,  2 ,  3  and  4 . Then, there exist constants  c 1 , c 2 > 0 subscript c 1 subscript c 2 0 c_{1},c_{2}>0 italic_c start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT > 0  (independent of  n n n italic_n ) such that",
            "where  BTL h subscript BTL h \\mathsf{BTL}_{h} sansserif_BTL start_POSTSUBSCRIPT italic_h end_POSTSUBSCRIPT  is the set of all pairwise comparison matrices  B B B italic_B  corresponding to BTL models whose skill scores    R n  superscript R n \\alpha\\in{\\mathbb{R}}^{n} italic_  blackboard_R start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT  satisfy  Eq.   18  with  h =   1 h superscript  1 h=\\delta^{-1} italic_h = italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT .",
            "The proof is provided in  Section   IV-D . It utilizes a new Lagrangian and perturbation-based approach to compute the Frobenius-norm-distance between a given pairwise comparison matrix and its closest reversible counterpart. This approach may be of independent utility in other matrix theoretic scenarios. We also note that our approach of measuring separation distance is quite different to distance measures between Markov chains based on spectral radius introduced in  [ 67 ,  68 ] . Next, armed with  Proposition   2  and  Theorem   1 , we formally define the hypothesis testing problem for BTL models.",
            "For a given tolerance parameter   > 0 italic- 0 \\epsilon>0 italic_ > 0  and a pairwise comparison model  P P P italic_P  satisfying  Assumptions   1 ,  2 ,  3  and  4 , we can formulate the hypothesis testing problem in ( 5 ) as:",
            "Let    \\Phi roman_  denote a  decision rule  or  hypothesis test  that maps the consolidated observations  Z Z {\\mathcal{Z}} caligraphic_Z  to  { 0 , 1 } 0 1 \\{0,1\\} { 0 , 1 } , where  0 0  represents the null hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  1 1 1 1  represents the alternative hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . Let  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  denote the probability distributions of the observations  Z Z {\\mathcal{Z}} caligraphic_Z  under  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , respectively. Throughout this paper, we will use  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  when we need to specify a hypothesis, and  P P {\\mathbb{P}} blackboard_P  when a probability expression holds for both hypotheses. Similarly,  E H 0 subscript E subscript H 0 {\\mathbb{E}}_{H_{0}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ,  E H 1 subscript E subscript H 1 {\\mathbb{E}}_{H_{1}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , and  E E {\\mathbb{E}} blackboard_E  will represent the corresponding expectation operators. Furthermore, for a fixed induced graph  G G {\\mathcal{G}} caligraphic_G  satisfying  Assumption   3 , let  M 0 subscript M 0 {\\mathcal{M}}_{0} caligraphic_M start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  M  (  ) M italic- {\\mathcal{M}}(\\epsilon) caligraphic_M ( italic_ )  denote the sets of pairwise comparison models that satisfy the null and alternative hypotheses, respectively, in ( 19 ) along with  Assumptions   1 ,  2  and  4 :",
            "where the infimum is taken over all (possibly randomized)  { 0 , 1 } 0 1 \\{0,1\\} { 0 , 1 } -valued decision rules    \\Phi roman_  based on  Z Z \\mathcal{Z} caligraphic_Z . We would like to emphasize here that the suprema in the minimax risk are over all pairwise comparison matrices with a fixed graph  G G {\\mathcal{G}} caligraphic_G , and the probability measures  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  are defined by the randomness in the data generation process given a fixed graph  G G {\\mathcal{G}} caligraphic_G . Finally, we define the  critical threshold  of the hypothesis testing problem in ( 19 ) as the smallest value of   italic- \\epsilon italic_  for which the minimax risk is bounded by  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG :",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , the critical threshold defined in  Eq.   23  is upper bounded by",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n , the critical threshold defined in  Eq.   23  is upper bounded by",
            "The proof of  Proposition   4  can be gleaned from the proof of  Theorem   2  in  Section   V . In essence, the behavior in  Proposition   4  stems from the fact that the proof of  Lemma   7  in  Section   V-C 1  relies on a concentration inequality (see  Proposition   10 ) which, under the stronger assumption  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , allows us to avoid the poly-logarithmic factor in  Proposition   4  when establishing  Theorem   2 . However, if a standard matrix Bernstein inequality were employed for concentration, the special constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , defined in  Lemma   7 , would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . Then, the proof of  Proposition   4  would follow by using essentially the same logic as the proof of  Theorem   2  and observing that  Eq.   63  yields an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT . Moreover, in this regime, our decision rule returns the alternative hypothesis if and only if  T    log  n n  k T  n n k T\\geq\\frac{\\gamma\\sqrt{\\log n}}{nk} italic_T  divide start_ARG italic_ square-root start_ARG roman_log italic_n end_ARG end_ARG start_ARG italic_n italic_k end_ARG  for some appropriately chosen constant    \\gamma italic_ .",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold, and suppose that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT  and there exists a constant  c 4 > 0 subscript c 4 0 c_{4}>0 italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT > 0  such that the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } . Then, we have the following bounds:",
            "In this section, we present an information-theoretic lower bound on the critical threshold for the hypothesis testing problem in  Eq.   19  for the special case of a complete induced graph  G G {\\mathcal{G}} caligraphic_G . Our lower bound demonstrates the minimax optimality of the scaling of the critical threshold provided in the upper bound in  Theorem   2  for complete induced graphs. (We will show in  Section   III-E  that pairwise comparison models on complete graphs can satisfy  Assumptions   1 ,  2 ,  3  and  4 .) As noted earlier, we assume that  k i  j = k subscript k i j k k_{ij}=k italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_k  for all  i , j  [ n ] i j delimited-[] n i,j\\in[n] italic_i , italic_j  [ italic_n ]  with  i = j i j i\\neq j italic_i = italic_j .",
            "Consider the hypothesis testing problem in  Eq.   19  and assume that the corresponding induced graph  G G {\\mathcal{G}} caligraphic_G  is a complete graph. Then, there exists a constant  c 8 > 0 subscript c 8 0 c_{8}>0 italic_c start_POSTSUBSCRIPT 8 end_POSTSUBSCRIPT > 0  such that the critical threshold defined in  Eq.   23  is lower bounded by",
            "The proof of  Theorem   4  is provided in  Section   VI-A . The proof uses the  Ingster-Suslina method  for constructing a lower bound on the critical threshold  [ 71 ] . This method is similar to the well-known  Le Cams method , but it establishes a minimax lower bound by considering a point and a mixture on the parameter space instead of just two points. (Although Le Cams method could also be used for this proof in principle, the Ingster-Suslina method greatly simplifies the calculations to bound TV distance in our setting.) Our proof constructs a perturbed family of pairwise comparison models from a fixed BTL model and utilizes the complete graph structure to compute both the stationary distribution and the separation metric     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  in closed form under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . We remark that due to our problem setting, our proof here is much simpler than and quite different to the technique developed in  [ 50 ] , where the separation distance is quantified for Eulerian graphs in terms of sums of TV distances. We leave the problem of determining minimax lower bounds for more general graph topologies satisfying  Assumptions   1 ,  2 ,  3  and  4  for future work. Finally, we also note that the bounds in  Theorems   2  and  4  portray that the    ( 1 / n  k )  1 n k \\Theta(1/\\sqrt{nk}) roman_ ( 1 / square-root start_ARG italic_n italic_k end_ARG )  scaling of the critical threshold is minimax optimal even if we took suprema over all induced graphs satisfying  Assumptions   1 ,  2 ,  3  and  4  inside the infimum in the definition of minimax risk in  Eq.   22 .",
            "In this section, we establish bounds on both the principal ratio and edge expansion for three distinct classes of graphs: complete graphs,  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs, and random graphs generated from Erdos-Renyi models. These three classes represent a few examples of graphs for which  Assumptions   2 ,  3  and  4  hold and the theoretical guarantees of our testing framework are valid for any pairwise comparison matrix  P P P italic_P  consistent with  Assumption   1 . In the first case, we assume that the induced graph is complete and pairwise comparisons among all pairs are observed. The second scenario involves  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs that are sufficiently dense (as explained later) and possess some degree of edge expansion. And the third case assumes the existence of a complete underlying pairwise comparison model consistent with  Assumption   1 , where comparisons between any pair  ( i , j ) i j (i,j) ( italic_i , italic_j )  (and  ( j , i ) j i (j,i) ( italic_j , italic_i ) ), for  i > j i j i>j italic_i > italic_j , are observed independently with probability  p p p italic_p . We show that there exists a constant  c p > 0 subscript c p 0 \\mathsf{c}_{p}>0 sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT > 0  such that as long as  n  p  c p  log  n n p subscript c p n np\\geq\\mathsf{c}_{p}\\log n italic_n italic_p  sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT roman_log italic_n , the Erdos-Renyi pairwise comparison model satisfies  Assumptions   2 ,  3  and  4  with high probability. We also note that much of our technical analysis in each of the three scenarios lies in analyzing the principal ratio.",
            "We begin by deriving bounds on the principal ratio of a canonical Markov matrix  S S S italic_S  and the edge expansion of the DTM  R =  1 / 2  S    1 / 2 R superscript  1 2 S superscript  1 2 R=\\Pi^{1/2}S\\Pi^{-1/2} italic_R = roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT  corresponding to a complete graph. To this end, we consider a pairwise comparison matrix  P P P italic_P  corresponding to a complete graph on  n n n italic_n  vertices and construct  S S S italic_S  using  d = 2  n d 2 n d=2n italic_d = 2 italic_n . (Note that  d = n d n d=n italic_d = italic_n  would also work for the case of a complete graph.) In the following proposition, we show that the principal ratio is always upper bounded by  1 /  2 1 superscript  2 1/\\delta^{2} 1 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  for all pairwise comparison matrices consistent with  Assumption   1 .",
            "Let  S S S italic_S  be a canonical Markov matrix in  Definition   2  corresponding to a complete graph with  d = 2  n d 2 n d=2n italic_d = 2 italic_n  and stationary distribution    \\pi italic_ . Suppose further that  Assumption   1  holds. Then, we have",
            "The proof is provided in  Section   A-A ; our argument is a modification of that in  [ 61 , Theorem 3.1] .  Proposition   5  illustrates that  Assumption   4  holds with  h = 1 /  2 h 1 superscript  2 h=1/\\delta^{2} italic_h = 1 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT . It also implies that the pairwise comparison model satisfies  Assumption   2  with   =  3 4  ( 1 +  )  superscript  3 4 1  \\xi=\\frac{\\delta^{3}}{4(1+\\delta)} italic_ = divide start_ARG italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG start_ARG 4 ( 1 + italic_ ) end_ARG , because we obtain the following lower bound on the edge expansion    ( R ) italic- R \\phi(R) italic_ ( italic_R )  using  Eq.   16  by substituting  d = 2  n d 2 n d=2n italic_d = 2 italic_n :",
            "where we have utilized the fact that for complete graphs,   ~  ( G ) = n 2 ~ italic- G n 2 \\tilde{\\phi}({\\mathcal{G}})=\\frac{n}{2} over~ start_ARG italic_ end_ARG ( caligraphic_G ) = divide start_ARG italic_n end_ARG start_ARG 2 end_ARG . Alternatively, for complete graphs, we can obtain tighter upper bounds on the critical threshold (i.e., with better implicit dependence on    \\delta italic_ ) by directly bounding the second largest singular value   2  ( R ) subscript  2 R \\sigma_{2}(R) italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( italic_R )  of the DTM  R R R italic_R  (see  Lemma   3  in  Section   V-A ) instead of relying on expansion properties and  Cheeger inequalities  (i.e., using  Assumption   2  and  Lemma   4  in  Section   V-A ). This alternative approach leverages bounds between contraction coefficients, specifically, in terms of the  Dobrushin contraction coefficient  for TV distance; see  Section   V-A  for details. Additionally, note that a complete graph trivially satisfies  Assumption   3 . Thus, for the case of complete graphs, we have shown that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4 . This allows us to test whether data generated from any pairwise comparison matrix  P P P italic_P  corresponding to a complete induced graph satisfying  Assumption   1  conforms to an underlying BTL model. However, the testing procedure for a complete graph requires  n  ( n  1 )  k n n 1 k n(n-1)k italic_n ( italic_n - 1 ) italic_k  samples.",
            "Let  S S S italic_S  be a canonical Markov matrix in  Definition   2  corresponding to a  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graph  G G {\\mathcal{G}} caligraphic_G  with  d = 2  d ~ d 2 ~ d d=2\\tilde{d} italic_d = 2 over~ start_ARG italic_d end_ARG  and stationary distribution    \\pi italic_ . Suppose further that  Assumption   1  holds, and for some constants  a , b , c > 0 a b c 0 a,b,c>0 italic_a , italic_b , italic_c > 0 ,  G G {\\mathcal{G}} caligraphic_G  satisfies  | E  ( S , T ) |  a  | S |  | T | E S T a S T |{\\mathcal{E}}(\\mathcal{S},\\mathcal{T})|\\geq a|\\mathcal{S}||\\mathcal{T}| | caligraphic_E ( caligraphic_S , caligraphic_T ) |  italic_a | caligraphic_S | | caligraphic_T |  for all disjoint subsets  S , T  [ n ] S T delimited-[] n \\mathcal{S},\\mathcal{T}\\subseteq[n] caligraphic_S , caligraphic_T  [ italic_n ]  with  | S |  b  n S b n |\\mathcal{S}|\\geq bn | caligraphic_S |  italic_b italic_n  and  | T |  c  n T c n |\\mathcal{T}|\\geq cn | caligraphic_T |  italic_c italic_n . If  d ~  c  n ~ d c n \\tilde{d}\\geq cn over~ start_ARG italic_d end_ARG  italic_c italic_n  then, we have",
            "The proof is provided in  Section   A-B . This result generalizes the result in  [ 72 , Theorem 3] , and illustrates that  Assumption   4  holds with  h = c ~  ( a ) /  5 h ~ c a superscript  5 h=\\tilde{c}(a)/\\delta^{5} italic_h = over~ start_ARG italic_c end_ARG ( italic_a ) / italic_ start_POSTSUPERSCRIPT 5 end_POSTSUPERSCRIPT . The assumption,  | E  ( S , T ) |  a  | S |  | T | E S T a S T |\\mathcal{E}(\\mathcal{S},\\mathcal{T})|\\geq a|\\mathcal{S}||\\mathcal{T}| | caligraphic_E ( caligraphic_S , caligraphic_T ) |  italic_a | caligraphic_S | | caligraphic_T |  for all disjoint subsets  S , T S T \\mathcal{S},\\mathcal{T} caligraphic_S , caligraphic_T  with cardinality    ( n )  n \\Theta(n) roman_ ( italic_n ) , is typically satisfied by  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs   G G {\\mathcal{G}} caligraphic_G  with  d ~ =   n ~ d  n \\tilde{d}=\\ \\nu n over~ start_ARG italic_d end_ARG = italic_ italic_n  and   2  ( G )  ( 1   ~ )  d ~ subscript  2 G 1 ~  ~ d \\lambda_{2}({\\mathcal{G}})\\leq(1-\\tilde{\\nu})\\tilde{d} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  ( 1 - over~ start_ARG italic_ end_ARG ) over~ start_ARG italic_d end_ARG  for some constants   ,  ~  ( 0 , 1 ]  ~  0 1 \\nu,\\tilde{\\nu}\\in(0,1] italic_ , over~ start_ARG italic_ end_ARG  ( 0 , 1 ] , where   2  ( G ) subscript  2 G \\lambda_{2}({\\mathcal{G}}) italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  denotes the second largest eigenvalue modulus of the adjacency matrix of  G G {\\mathcal{G}} caligraphic_G ; we refer readers to  [ 73 ]  for the definition of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs. We also refer the readers to  Section   A-C  for details regarding the existence of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs with  d ~ =   n ~ d  n \\tilde{d}=\\nu n over~ start_ARG italic_d end_ARG = italic_ italic_n  and   2  ( G )  ( 1   ~ )  d ~ , subscript  2 G 1 ~  ~ d \\lambda_{2}({\\mathcal{G}})\\leq(1-\\tilde{\\nu})\\tilde{d}, italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  ( 1 - over~ start_ARG italic_ end_ARG ) over~ start_ARG italic_d end_ARG ,  and why they satisfy the assumption in  Proposition   6 . Furthermore, pairwise comparison models corresponding to such graphs also satisfy  Assumption   2  as explained in  Section   A-C , cf.  [ 74 , Theorem 9.2.1] , and trivially satisfy  Assumption   3 . Thus, for the case of dense  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs with appropriate expansion properties, we have again established that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4 . This permits us to test whether data generated from any pairwise comparison matrix  P P P italic_P  corresponding to a dense  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graph satisfying  Assumption   1  and certain expansion properties conforms to an underlying BTL model. Moreover, the denseness requirement  d ~ =   ( n ) ~ d  n \\tilde{d}=\\Theta(n) over~ start_ARG italic_d end_ARG = roman_ ( italic_n )  implies that the testing procedure requires    ( n 2  k )  superscript n 2 k \\Theta(n^{2}k) roman_ ( italic_n start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k )  samples in order to satisfy the various assumptions. The next setting establishes the utility of our testing procedure for sparse induced graphs.",
            "In this case, we assume that there exists an underlying (pre-determined) pairwise comparison matrix  P  superscript P P^{*} italic_P start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT , corresponding to a complete graph, which satisfies  Assumption   1 . Subsequently, as in  Erdos-Renyi random graphs   [ 75 ] , we sample each edge  ( i , j )  [ n ] 2 i j superscript delimited-[] n 2 (i,j)\\in[n]^{2} ( italic_i , italic_j )  [ italic_n ] start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  with  i > j i j i>j italic_i > italic_j  of the undirected induced graph independently with probability  p  [ 0 , 1 ] p 0 1 p\\in[0,1] italic_p  [ 0 , 1 ] , such that for some sufficiently large constant  c p > 1 subscript c p 1 \\mathsf{c}_{p}>1 sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT > 1 , we have  n  p  c p  log  n n p subscript c p n np\\geq\\mathsf{c}_{p}\\log n italic_n italic_p  sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT roman_log italic_n . 3 3 3 Note that the constant  c p subscript c p \\mathsf{c}_{p} sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT  does not depend on  p p p italic_p .  In essence, we randomly sample the entries of a fixed comparison matrix  P  superscript P P^{*} italic_P start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  to obtain a pairwise comparison matrix  P = P E  ( P  ) P subscript P E superscript P P={\\mathcal{P}_{\\mathcal{E}}}(P^{*}) italic_P = caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( italic_P start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT ) , where  E E {\\mathcal{E}} caligraphic_E  is the random edge set. Next, we construct canonical Markov matrices  S  superscript S S^{*} italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  and  S S S italic_S  corresponding to  P  superscript P P^{*} italic_P start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  and  P P P italic_P  with  d = 3  n d 3 n d=3n italic_d = 3 italic_n  and  d = 3  n  p d 3 n p d=3np italic_d = 3 italic_n italic_p , respectively. The following well-known proposition provides high probability bounds on the vertex degrees for an Erdos-Renyi random graph, highlighting that  S S S italic_S  is indeed a  ( 1 2 ) 1 2 (\\frac{1}{2}) ( divide start_ARG 1 end_ARG start_ARG 2 end_ARG ) -lazy Markov matrix with high probability.",
            "Given an underlying pairwise comparison matrix  P  superscript P P^{*} italic_P start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  with  n  3 n 3 n\\geq 3 italic_n  3  satisfying  Assumption   1 , suppose we obtain the pairwise comparison matrix  P P P italic_P  by randomly sampling the entries of  P  superscript P P^{*} italic_P start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  according to an Erdos-Renyi model with parameter  p  ( 0 , 1 ] p 0 1 p\\in(0,1] italic_p  ( 0 , 1 ]  satisfying  p  c 9  log  n n p subscript c 9 n n p\\geq\\frac{{c}_{9}\\log n}{n} italic_p  divide start_ARG italic_c start_POSTSUBSCRIPT 9 end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_n end_ARG  for some constant  c 9 > 1 subscript c 9 1 c_{9}>1 italic_c start_POSTSUBSCRIPT 9 end_POSTSUBSCRIPT > 1 . Then, there exists a constant  c 10 > 0 subscript c 10 0 c_{10}>0 italic_c start_POSTSUBSCRIPT 10 end_POSTSUBSCRIPT > 0  such that with probability at least  1  O  ( n  3 ) 1 O superscript n 3 1-O(n^{-3}) 1 - italic_O ( italic_n start_POSTSUPERSCRIPT - 3 end_POSTSUPERSCRIPT ) , the stationary distribution    \\pi italic_  satisfies",
            "Given an underlying pairwise comparison matrix  P  superscript P P^{*} italic_P start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  with  n  3 n 3 n\\geq 3 italic_n  3  satisfying  Assumption   1 , suppose we obtain the pairwise comparison matrix  P P P italic_P  by randomly sampling the entries of  P  superscript P P^{*} italic_P start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  according to an Erdos-Renyi model with parameter  p  ( 0 , 1 ] p 0 1 p\\in(0,1] italic_p  ( 0 , 1 ]  satisfying  p  c p  log  n n p subscript c p n n p\\geq\\frac{\\mathsf{c}_{p}\\log n}{n} italic_p  divide start_ARG sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_n end_ARG  for a constant  c p  max  { c 9 , 2  c 10 /  4 } subscript c p subscript c 9 2 subscript c 10 superscript  4 \\mathsf{c}_{p}\\geq\\max\\{c_{9},2c_{10}/\\delta^{4}\\} sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT  roman_max { italic_c start_POSTSUBSCRIPT 9 end_POSTSUBSCRIPT , 2 italic_c start_POSTSUBSCRIPT 10 end_POSTSUBSCRIPT / italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT }  (where  c 9 , c 10 subscript c 9 subscript c 10 c_{9},c_{10} italic_c start_POSTSUBSCRIPT 9 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 10 end_POSTSUBSCRIPT  are given in  Theorem   5 ). Then, with probability at least  1  O  ( n  3 ) 1 O superscript n 3 1-O(n^{-3}) 1 - italic_O ( italic_n start_POSTSUPERSCRIPT - 3 end_POSTSUPERSCRIPT ) , the principal ratio satisfies the bound",
            "The proof of  Proposition   8  is provided in  Section   A-D . In particular,  Proposition   8  illustrates that  Assumption   4  holds with  h = 7 /  2 h 7 superscript  2 h=7/\\delta^{2} italic_h = 7 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  with high probability. Moreover, random graphs are known to have nice expansion properties  [ 75 , Theorem 2.8]  (also see  [ 76 ] ). Indeed, using  [ 77 , Equation (11)] , we have that for an Erdos-Renyi random graph,   ~  ( G )  1 4  n  p ~ italic- G 1 4 n p \\tilde{\\phi}({\\mathcal{G}})\\geq\\frac{1}{4}np over~ start_ARG italic_ end_ARG ( caligraphic_G )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG italic_n italic_p  with high probability, thereby showing that the pairwise comparison matrix  P P P italic_P  also satisfies  Assumption   2  with   =  3 / ( 12  7  ( 1 +  ) )  superscript  3  12 7 1  \\xi=\\delta^{3}/(12\\cdot 7\\cdot(1+\\delta)) italic_ = italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT / ( 12  7  ( 1 + italic_ ) )  with high probability.  Proposition   7  also implies that an Erdos-Renyi random graph satisfies  Assumption   3  with high probability. Thus, for the case of Erdos-Renyi random graphs, we have again demonstrated that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4  with high probability, as required for theoretical guarantees on our testing procedure. Notably, in this case, the testing procedure requires  O  ( k  n  log  n ) O k n n O(kn\\log n) italic_O ( italic_k italic_n roman_log italic_n )  pairwise comparisons, which matches the total number of observations needed for consistently estimating the parameters of the BTL model in  [ 11 ] .",
            "We prove  Propositions   1 ,  3 ,  2  and  1  in this section. Throughout this proof, we employ a concise notation by using overlapping labels (e.g.,  c , c ~ , c 1 , c 2 , c  , c ^ , ... c ~ c subscript c 1 subscript c 2 superscript c  ^ c ... c,\\tilde{c},c_{1},c_{2},c^{\\prime},\\hat{c},\\dots italic_c , over~ start_ARG italic_c end_ARG , italic_c start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT , over^ start_ARG italic_c end_ARG , ... ) to denote various constants. To avoid ambiguity, we explicitly reserve the notation  c  , c  , c  subscript c  subscript c  subscript c  c_{\\alpha},c_{\\beta},c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  for specially defined constants in  Lemma   7  and the subsequent proof.",
            "If both  Eqs.   30  and  31  are true, then we can use the following argument to complete the proof. Let  c 0 = min  { c , c  } subscript c 0 c superscript c  c_{0}=\\min\\{c,c^{\\prime}\\} italic_c start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = roman_min { italic_c , italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT } , then we have:",
            "Now we will prove  Eq.   31 . Observe that",
            "Combining  Eqs.   40  and  41 , we get",
            "where   2  ( M ) subscript  2 M \\sigma_{2}(M) italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( italic_M )  denotes the second largest singular value of  M M M italic_M  and the last equality follows since    \\sqrt{\\pi} square-root start_ARG italic_ end_ARG  is both the left and right top singular vector of the DTM   1 / 2  S    1 / 2 superscript  1 2 S superscript  1 2 \\Pi^{1/2}S\\Pi^{-1/2} roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT . Thus, rearranging the terms in the above inequality establishes the statement of  Lemma   1 .",
            "One of our main goals for deriving  Lemma   1  is to find upper bounds on    ^    2 subscript norm ^   2 \\|{\\hat{\\pi}}-\\pi\\|_{2}  over^ start_ARG italic_ end_ARG - italic_  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , where   ^ ,  ^   {\\hat{\\pi}},\\pi over^ start_ARG italic_ end_ARG , italic_  are stationary distributions of  S ^ , S ^ S S {\\hat{S}},S over^ start_ARG italic_S end_ARG , italic_S , respectively. To achieve this, we will employ  Lemma   1  (with the choice  S ~ = S ~ S S \\tilde{S}=S over~ start_ARG italic_S end_ARG = italic_S  and thus, we have   ~ =  ~   \\tilde{\\pi}=\\pi over~ start_ARG italic_ end_ARG = italic_ ). However, to apply this lemma, it is essential to demonstrate that the condition outlined in  Lemma   1  is satisfied. In other words, we need to find upper bounds on the terms    1 / 2  S    1 / 2     T  2 subscript norm superscript  1 2 S superscript  1 2  superscript  T 2 \\|\\Pi^{1/2}S\\Pi^{-1/2}-\\sqrt{\\pi}\\sqrt{\\pi}^{\\mathrm{T}}\\|_{2}  roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT - square-root start_ARG italic_ end_ARG square-root start_ARG italic_ end_ARG start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and   S ^  S    1 subscript norm ^ S S superscript  1 \\|{\\hat{S}}-S\\|_{\\pi^{-1}}  over^ start_ARG italic_S end_ARG - italic_S  start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT end_POSTSUBSCRIPT , ensuring that their sum is less than  1 1 1 1 . When the Markov chain corresponding to  S S S italic_S  is reversible, the DTM matrix  R =  1 / 2  S    1 / 2 R superscript  1 2 S superscript  1 2 R=\\Pi^{1/2}S\\Pi^{-1/2} italic_R = roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT  is symmetric, and hence,",
            "where   TV  ( S ) subscript  TV S \\eta_{\\mathsf{TV}}(S) italic_ start_POSTSUBSCRIPT sansserif_TV end_POSTSUBSCRIPT ( italic_S )  is the Dobrushin contraction coefficient for TV distance     TV \\|\\cdot\\|_{\\mathsf{TV}}    start_POSTSUBSCRIPT sansserif_TV end_POSTSUBSCRIPT . Note that  S i  i  1 / 2 subscript S i i 1 2 S_{ii}\\geq 1/2 italic_S start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT  1 / 2  and  S i  j  1 / ( 2  n ) subscript S i j 1 2 n S_{ij}\\leq 1/(2n) italic_S start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  1 / ( 2 italic_n )  for  i , j  [ n ] i j delimited-[] n i,j\\in[n] italic_i , italic_j  [ italic_n ]  with  i = j i j i\\neq j italic_i = italic_j . We can use  Assumption   1  to bound as   S i , :  S j , :  TV subscript norm subscript S i : subscript S j : TV \\|S_{i,:}-S_{j,:}\\|_{\\mathsf{TV}}  italic_S start_POSTSUBSCRIPT italic_i , : end_POSTSUBSCRIPT - italic_S start_POSTSUBSCRIPT italic_j , : end_POSTSUBSCRIPT  start_POSTSUBSCRIPT sansserif_TV end_POSTSUBSCRIPT  between any pair  i i i italic_i  and  j j j italic_j  as",
            "Hence, by  Eq.   51  and variational characterization of eigenvalues, we have",
            "Finally,    ( R ) =   ( ( R + R T ) / 2 ) italic- R italic- R superscript R T 2 \\phi(R)=\\phi((R+R^{\\mathrm{T}})/2) italic_ ( italic_R ) = italic_ ( ( italic_R + italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) / 2 )  follows by a little algebra. Observe that both  R R R italic_R  and  ( R + R T ) / 2 R superscript R T 2 (R+R^{\\mathrm{T}})/2 ( italic_R + italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) / 2  share the same left and right singular vectors    \\sqrt{\\pi} square-root start_ARG italic_ end_ARG . Moreover, the numerator term in  Eq.   10  can be simplified as",
            "The equivalence of the denominator terms in  Eq.   10  follows from  Eq.   11 , thus proving    ( R ) =   ( ( R + R T ) / 2 ) =   ( R T ) italic- R italic- R superscript R T 2 italic- superscript R T \\phi(R)=\\phi((R+R^{\\mathrm{T}})/2)=\\phi(R^{\\mathrm{T}}) italic_ ( italic_R ) = italic_ ( ( italic_R + italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) / 2 ) = italic_ ( italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) .",
            "Now, using  Corollary   1  to bound the denominator term in  Lemma   1  and following the same procedure in  [ 11 , Theorem 9] , we obtain the following   l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -error bound.",
            "The proof is provided in  Section   V-C 1 . The following lemma characterizes the mean and the variance of  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT .",
            "For a general graph model (with  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n ), an application of matrix Bernstein inequality yields   Q  2  O  ( d max  log  n k ) subscript norm Q 2 O subscript d n k \\|Q\\|_{2}\\leq O(\\sqrt{\\frac{d_{\\max}\\log n}{k}})  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG )  (with high probability). The extra  log  n n \\log n roman_log italic_n  factor becomes a bottleneck later in the analysis. However, using recent advances in concentration inequalities  [ 81 ,  Corollary 2.15]  we can indeed show that if  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , then   Q  2  O  ( d max / k ) subscript norm Q 2 O subscript d k \\|Q\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. The tail bounds of   Q  2 subscript norm Q 2 \\|Q\\|_{2}  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  are computed in  Lemma   15 , and therefore, we have",
            "Now again we need to show that   P ^  P  2  O  ( d max / k ) subscript norm ^ P P 2 O subscript d k \\|\\hat{P}-P\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. In case of complete graph, by  [ 80 , Theorem 4.4.5] , we have   P ^  P  2  6  c p  d max / k subscript norm ^ P P 2 6 subscript c p subscript d k \\|\\hat{P}-P\\|_{2}\\leq 6c_{p}\\sqrt{d_{\\max}/k}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  6 italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG  with high probability for some constant  c p subscript c p c_{p} italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT  by the same argument as ( 69 ) (since  var  ( p ^ i  j )  1 / k var subscript ^ p i j 1 k {\\mathrm{var}}(\\hat{p}_{ij})\\leq 1/k roman_var ( over^ start_ARG italic_p end_ARG start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  1 / italic_k ). For a general graph model, and by application of matrix Bernstein inequality, again a  log  n n \\log n roman_log italic_n  factor becomes a bottleneck as we obtain   P ^  P  2  O  ( d max  log  n k ) subscript norm ^ P P 2 O subscript d n k \\|\\hat{P}-P\\|_{2}\\leq O\\big{(}\\sqrt{\\frac{d_{\\max}\\log n}{k}}\\big{)}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG )  (with high probability). Therefore, we again utilize  [ 81 ,  Corollary 2.15]  to obtain tighter concentration bounds on   P ^  P  2 subscript norm ^ P P 2 \\|\\hat{P}-P\\|_{2}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT . Applying,  Lemma   14  we obtain",
            "Now combining  Eqs.   65 ,  70 ,  71  and  75 , we obtain",
            "Let   =    P  + P     1 n   T  F / ( n      ) italic- subscript norm  subscript P  subscript P   subscript 1 n superscript  T F n subscript norm  \\epsilon=\\|\\Pi P_{\\theta}+P_{\\theta}\\Pi-\\mathbf{1}_{n}\\pi^{\\mathrm{T}}\\|_{% \\mathrm{F}}/(n\\|\\pi\\|_{\\infty}) italic_ =  roman_ italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT + italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT roman_ - bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT / ( italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT )  to ensure that the  P  subscript P  P_{\\theta} italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT s satisfy the condition of the alternative hypothesis in ( 19 ). Substituting the values of      = y subscript norm  y \\|\\pi\\|_{\\infty}=y  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT = italic_y  and     P  + P  T    1 n   T  F subscript norm  subscript P  superscript subscript P  T  subscript 1 n superscript  T F \\|\\Pi P_{\\theta}+P_{\\theta}^{\\mathrm{T}}\\Pi-\\mathbf{1}_{n}\\pi^{\\mathrm{T}}\\|_{% \\mathrm{F}}  roman_ italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT + italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT roman_ - bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT  implies that",
            "where    \\zeta italic_  holds for some constant  c  superscript c  c^{\\prime} italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  if  8   2  k  c ~ . 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c}. 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG .  Moreover, the quantity in  Eq.   96  is bounded above by  1 4 1 4 \\frac{1}{4} divide start_ARG 1 end_ARG start_ARG 4 end_ARG  if  c ~ ~ c \\tilde{c} over~ start_ARG italic_c end_ARG  is small enough. However, by  Eq.   90 , we have   2  C ~  n   2 superscript  2 ~ C n superscript italic- 2 \\eta^{2}\\geq\\tilde{C}n\\epsilon^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_C end_ARG italic_n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  for some constant  C ~ ~ C \\tilde{C} over~ start_ARG italic_C end_ARG . Therefore, we have shown that if  8  C ~  n  k   2  c ~ 8 ~ C n k superscript italic- 2 ~ c 8\\tilde{C}nk\\epsilon^{2}\\leq\\tilde{c} 8 over~ start_ARG italic_C end_ARG italic_n italic_k italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_c end_ARG , then   2 ( P  | | P 0 )  1 4 \\chi^{2}({\\mathbb{P}}_{\\Theta}||{\\mathbb{P}}_{0})\\leq\\frac{1}{4} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( blackboard_P start_POSTSUBSCRIPT roman_ end_POSTSUBSCRIPT | | blackboard_P start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG , which by  Eq.   91  implies that the minimax risk  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Hence,   c 2  c / ( k  n ) superscript subscript  c 2 c k n \\varepsilon_{\\mathsf{c}}^{2}\\geq c/(kn) italic_ start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  italic_c / ( italic_k italic_n )  as desired.",
            "To verify our calculations, we also plot the numerically calculated values in  Fig.   1  which confirms the theoretical calculation that  n     P + P    1 n   T  F n subscript norm  P P  subscript 1 n superscript  T F \\sqrt{n}\\|\\Pi P+P\\Pi-{\\mathbf{1}}_{n}\\pi^{\\mathrm{T}}\\|_{\\mathrm{F}} square-root start_ARG italic_n end_ARG  roman_ italic_P + italic_P roman_ - bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT  converges to a constant.",
            "Permutation-Based Scheme:  This approach is motivated by the permutation test method to obtain a sharper threshold for our test in a data-driven manner. Recall that for a standard two-sample hypothesis testing problem, the permutation technique involves randomly shuffling the labels of the two classes. The test statistic is then recalculated for each permutation, obtaining a distribution of the test statistics under the null hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT . To assess the significance of our observed test statistic, the  p p p italic_p -value is then computed as the proportion of permuted test statistics that are more extreme than the observed test statistic on unshuffled data. To adapt this technique for the BTL hypothesis testing problem, we perform the following two types of shuffling motivated from  Proposition   1 :",
            "By  Assumption   1  and the Perron-Frobenius theorem, we know that   i > 0 subscript  i 0 \\pi_{i}>0 italic_ start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT > 0  for all  i  [ n ] i delimited-[] n i\\in[n] italic_i  [ italic_n ] . By stationarity of    \\pi italic_ , we have",
            "where last inequality holds because   i   j subscript  i subscript  j \\pi_{i}\\leq\\pi_{j} italic_ start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  italic_ start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT  and the other inequalities use  Assumption   1 . The lemma follows by taking  j = arg  max k   k j subscript arg max k subscript  k j=\\operatorname*{arg\\,max}_{k}\\pi_{k} italic_j = start_OPERATOR roman_arg roman_max end_OPERATOR start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT italic_ start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT .",
            "Utilizing  Assumption   1 , we obtain",
            "Using  Eq.   16 , this gives     6 c ~  ( a )  ( 1 +  )   ~  superscript  6 ~ c a 1  ~  \\xi\\geq\\frac{\\delta^{6}}{\\tilde{c}(a)(1+\\delta)}\\tilde{\\nu} italic_  divide start_ARG italic_ start_POSTSUPERSCRIPT 6 end_POSTSUPERSCRIPT end_ARG start_ARG over~ start_ARG italic_c end_ARG ( italic_a ) ( 1 + italic_ ) end_ARG over~ start_ARG italic_ end_ARG , where  c ~  ( a ) ~ c a \\tilde{c}(a) over~ start_ARG italic_c end_ARG ( italic_a )  is the constant in  Proposition   6 .",
            "The proof of  Lemma   10  is provided in  Section   B-B . Now we focus on the second term  L 2 = (  i   i  )  S i  i subscript L 2 subscript  i subscript superscript  i subscript S i i L_{2}=\\left({\\pi}_{i}-\\pi^{*}_{i}\\right){S}_{ii} italic_L start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT = ( italic_ start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT - italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) italic_S start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT . Observe that,",
            "The proof of  Lemma   11  is provided in  Section   B-C .",
            "The bounds for the first term    m    2 subscript norm superscript  m  2 \\|{\\pi}^{m}-{\\pi}\\|_{2}  italic_ start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT - italic_  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  have been derived in  Lemma   11  and the error bounds for second term        2 , subscript norm  superscript  2 \\|{\\pi}-\\pi^{*}\\|_{2},  italic_ - italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ,  are provided below in the ensuing lemma.",
            "Therefore, combining the above bound along with  Lemma   11  and  Eq.   106 , we obtain the following bound on  L 3 , 2 subscript L 3 2 L_{3,2} italic_L start_POSTSUBSCRIPT 3 , 2 end_POSTSUBSCRIPT  in the sub-sampled case.",
            "Finally, combining the bounds on  L 1 subscript L 1 L_{1} italic_L start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  (see  Lemma   10 ),  L 2 subscript L 2 L_{2} italic_L start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  (see  Eq.   104 ),  L 3 subscript L 3 L_{3} italic_L start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  (see  Eq.   109 ) together, we get the following bound simultaneously for all  m  [ n ] m delimited-[] n m\\in[n] italic_m  [ italic_n ] :",
            "Since,   m superscript  m {\\pi}^{m} italic_ start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT  and    {\\pi} italic_  are stationary distributions of  S m superscript S m {S}^{m} italic_S start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT  and  S S {S} italic_S , therefore, an application of  Lemma   1  gives",
            "Since  S  superscript S S^{*} italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  is the canonical Markov matrix corresponding to a complete graph, we get   S   1 n    T     1  1   6 subscript norm superscript S subscript 1 n superscript  superscript T superscript  superscript 1 1  6 \\|S^{*}-{\\mathbf{1}}_{n}\\pi^{*^{\\mathrm{T}}}\\|_{\\pi^{*^{-1}}}\\leq 1-\\frac{% \\delta}{6}  italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT - bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT end_POSTSUBSCRIPT  1 - divide start_ARG italic_ end_ARG start_ARG 6 end_ARG  by  Lemma   3 . We provide a high probability upper bound on   S  S      1 subscript norm S superscript S superscript  superscript 1 \\|{S}-S^{*}\\|_{\\pi^{*^{-1}}}  italic_S - italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT end_POSTSUBSCRIPT  in the subsampled scenario in  Lemma   13 . Combining these two bounds, we obtain that the denominator term is lower bounded by   / 12  12 \\delta/12 italic_ / 12 . Now, it remains to bound    m T  ( S m  S  )     1 subscript norm superscript  superscript m T superscript S m superscript S superscript  superscript 1 \\|{\\pi}^{m^{\\mathrm{T}}}({S}^{m}-{S^{*}})\\|_{\\pi^{*^{-1}}}  italic_ start_POSTSUPERSCRIPT italic_m start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT - italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT end_POSTSUBSCRIPT . For  j = m j m j\\neq m italic_j = italic_m , the  j j j italic_j th entry of   m T  ( S m  S ) superscript  superscript m T superscript S m S {\\pi}^{m^{\\mathrm{T}}}({S}^{m}-{S}) italic_ start_POSTSUPERSCRIPT italic_m start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT - italic_S )  is given by",
            "where in the last step, we have utilized the fact that  n  p  log  n n p n np\\geq\\log n italic_n italic_p  roman_log italic_n . Using the same technique, we can obtain a similar bound for   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT . Now using  Eq.   111  and bounds on   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  to upper bound    m T  ( S m  S )  2 subscript norm superscript  superscript m T superscript S m S 2 \\|\\pi^{m^{\\mathrm{T}}}(S^{m}-S)\\|_{2}  italic_ start_POSTSUPERSCRIPT italic_m start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT - italic_S )  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  gives",
            "An application of  Lemma   1  gives",
            "Utilizing  Lemma   13  and using the same argument as in  Section   B-C  yields, we obtain",
            "Therefore, with probability at least  1  O  ( n  3 ) 1 O superscript n 3 1-O(n^{-3}) 1 - italic_O ( italic_n start_POSTSUPERSCRIPT - 3 end_POSTSUPERSCRIPT ) , we have     T  D  2  n       . subscript norm superscript  superscript T D 2 n subscript norm superscript  \\|\\pi^{*^{\\mathrm{T}}}D\\|_{2}\\leq\\sqrt{n}\\|\\pi^{*}\\|_{\\infty}.  italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT italic_D  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  square-root start_ARG italic_n end_ARG  italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT .  Applying the same technique to  (   T  ( S 0  S 0  ) ) i subscript superscript  superscript T subscript S 0 superscript subscript S 0 i (\\pi^{*^{\\mathrm{T}}}({S_{0}}-S_{0}^{*}))_{i} ( italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT - italic_S start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT ) ) start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  yields a similar high probability bound, and thus  Eq.   112  completes the proof.",
            "An application of  Lemma   1  yields",
            "Utilizing  Corollary   1 , we get",
            "The proofs of  Lemma   14  and  Lemma   15  are provided in  Section   D-A  and  Section   D-B , respectively. The proofs of both the lemmata are based on the ensuing proposition from  [ 81 ] .",
            "Next, in order to apply  Proposition   10  on  A ^ ^ A \\hat{A} over^ start_ARG italic_A end_ARG , we need to calculate parameters   ^  ( A ^ ) ,  ^   ( A ^ ) ,   ( A ^ ) , R  ( A ^ ) ^  ^ A subscript ^  ^ A  ^ A R ^ A \\hat{\\sigma}(\\hat{A}),\\hat{\\sigma}_{*}(\\hat{A}),\\nu(\\hat{A}),R(\\hat{A}) over^ start_ARG italic_ end_ARG ( over^ start_ARG italic_A end_ARG ) , over^ start_ARG italic_ end_ARG start_POSTSUBSCRIPT  end_POSTSUBSCRIPT ( over^ start_ARG italic_A end_ARG ) , italic_ ( over^ start_ARG italic_A end_ARG ) , italic_R ( over^ start_ARG italic_A end_ARG ) . Note that each entry of  A i  j subscript A i j A_{ij} italic_A start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  is independent of one another. Therefore, for  i = j i j i\\neq j italic_i = italic_j ,  E [ ( A ^ T A ^ ] ) i  j ] = 0 \\mathbb{E}[(\\hat{A}^{\\mathrm{T}}\\hat{A}])_{ij}]=0 blackboard_E [ ( over^ start_ARG italic_A end_ARG start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT over^ start_ARG italic_A end_ARG ] ) start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ] = 0 . Moreover, we have",
            "and  0 0  otherwise. Therefore,    ( A ^ )  1 4  k  ^ A 1 4 k \\nu(\\hat{A})\\leq\\frac{1}{\\sqrt{4k}} italic_ ( over^ start_ARG italic_A end_ARG )  divide start_ARG 1 end_ARG start_ARG square-root start_ARG 4 italic_k end_ARG end_ARG . Finally,  R  ( A ^ )  1 k R ^ A 1 k R(\\hat{A})\\leq\\frac{1}{k} italic_R ( over^ start_ARG italic_A end_ARG )  divide start_ARG 1 end_ARG start_ARG italic_k end_ARG  as  | V i  j , m |  1 k superscript V i j m 1 k \\left|V^{ij,m}\\right|\\leq\\frac{1}{k} | italic_V start_POSTSUPERSCRIPT italic_i italic_j , italic_m end_POSTSUPERSCRIPT |  divide start_ARG 1 end_ARG start_ARG italic_k end_ARG . Substituting, the above bounds in  Eq.   113  proves the lemma.",
            "Next we will apply  Proposition   10  on the  V ^ i  j superscript ^ V i j \\hat{V}^{ij} over^ start_ARG italic_V end_ARG start_POSTSUPERSCRIPT italic_i italic_j end_POSTSUPERSCRIPT , but first we need to calculate parameters   ^  ( Y ^  E  [ Y ^ ] ) . ^  ^ Y E delimited-[] ^ Y \\hat{\\sigma}(\\hat{Y}-{\\mathbb{E}}[\\hat{Y}]). over^ start_ARG italic_ end_ARG ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) .  Using the same reasoning as in the proof of  Lemma   14 , for  i = j i j i\\neq j italic_i = italic_j  and  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E , we have  E  [ ( ( Y ^  E  [ Y ^ ] ) T  ( Y ^  E  [ Y ^ ] ) ) i  j ] = 0 E delimited-[] subscript superscript ^ Y E delimited-[] ^ Y T ^ Y E delimited-[] ^ Y i j 0 \\mathbb{E}[((\\hat{Y}-{\\mathbb{E}}[\\hat{Y}])^{\\mathrm{T}}(\\hat{Y}-{\\mathbb{E}}[% \\hat{Y}]))_{ij}]=0 blackboard_E [ ( ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) ) start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ] = 0 . Moreover,",
            "Similarly, using the same reasoning as in proof of  Lemma   14  we can show that",
            "Therefore, the proof follows by plugging in the bounds into  Eq.   113 ."
        ]
    },
    "id_table_2": {
        "caption": "",
        "table": "Ax1.EGx1",
        "footnotes": [],
        "references": [
            "We devise a notion of separation distance that allows us to easily quantify the deviation of a general pairwise comparison model from the class of all BTL models. Under some regularity conditions, we show in  Theorem   1  that this measure is always within constant factors of the Frobenius norm distance between a general pairwise comparison model and the class of BTL models. We then formulate our hypothesis testing problem for BTL models in a minimax sense using this separation distance and also introduce a test statistic in  Eq.   24  based on it.",
            "We define the critical threshold for our testing problem and establish an upper bound on it in  Theorem   2  for general induced observation graphs (satisfying mild assumptions). Furthermore, we also derive upper bounds on the type  \\Romannum 1 and type  \\Romannum 2 probabilities of error in  Theorem   3 . These bounds provide insights into the influence of various parameters on the error decay rate.",
            "The paper is organized as follows. Several notational preliminaries are presented in  Section   I-D . In  Section   II , we introduce general pairwise comparison models, define the necessary terminology, and present the various regularity assumptions necessary for our analysis. In  Section   III , we present the main results of our work. Specifically, in  Section   III-A , we introduce a notion of separation distance that allows us to measure the deviation of a pairwise comparison model from the class of all BTL models. Additionally, we mathematically formulate the hypothesis testing problem and introduce the associated testing rule.  Section   III-B  provides an upper bound on the scaling of the critical threshold for this hypothesis test. In  Section   III-C , we provide upper bounds on type  \\Romannum 1 and type  \\Romannum 2 probabilities of error. Moreover,  Section   III-D  introduces a matching lower bound on the critical threshold of the test proving minimax optimality (up to constant factors). In  Section   III-E , we provide examples of different classes of graphs that meet the required assumptions for all pairwise comparison models. We then move on to characterizing the stability of the BTL model in  Section   III-F . In our paper, formal proofs of various propositions are available in  Section   IV , while the upper bound proofs for the critical threshold ( Theorem   2 ) and type  \\Romannum 1 and type  \\Romannum 2 probabilities of error ( Theorem   3 ) are provided in  Section   V . The proofs of lower bounds and stability results are presented in  Section   VI . In  Section   VII , we present numerical simulations for synthetic data that support our theoretical results and also apply our testing rule to both real-world and synthetic datasets. Finally, in  Section   VIII , we reiterate our results and provide some directions for future research. Additionally, we present our remaining proofs in the appendices.",
            "There exists a constant  h > 0 h 0 h>0 italic_h > 0  such that the principal ratio  h  subscript h  h_{\\pi} italic_h start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  is bounded: 1 1 1 The constants    \\xi italic_ ,    \\kappa italic_ , and  h h h italic_h  in  Assumptions   2 ,  3  and  4  do not depend on  n n n italic_n .",
            "It is worth mentioning that coupled with  Assumptions   1  and  4 ,  Assumption   2  can be imposed by lower bounding the canonical notion of edge expansion of  G G {\\mathcal{G}} caligraphic_G . Indeed, observe that",
            "automatically satisfy both  Assumptions   1  and  4  (with  h =   1 h superscript  1 h=\\delta^{-1} italic_h = italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT ). 2 2 2 We refer readers to  Section   IV-A  for an explicit expression for the stationary distribution in BTL models.  Furthermore, if the underlying graph  G G {\\mathcal{G}} caligraphic_G  exhibits significant edge expansion in the canonical sense, i.e.,   ~  ( G )   ~  d ~ italic- G ~ italic- d \\tilde{\\phi}({\\mathcal{G}})\\geq\\tilde{\\epsilon}d over~ start_ARG italic_ end_ARG ( caligraphic_G )  over~ start_ARG italic_ end_ARG italic_d  for some constant   ~ > 0 ~ italic- 0 \\tilde{\\epsilon}>0 over~ start_ARG italic_ end_ARG > 0 , and adheres to  Assumption   3 , then all four assumptions are simultaneously satisfied for all BTL models with bounded condition number. For general pairwise comparison models, we will present several classes of graphs in  Section   III-E , e.g., complete graphs, dense regular graphs, and Erdos-Renyi random graphs, where any pairwise comparison model satisfying  Assumption   1  will also satisfy  Assumptions   2 ,  3  and  4  (with high probability, where appropriate).",
            "Recall that by  Proposition   1 , any pairwise comparison matrix  P P P italic_P  is BTL if and only if it satisfies the reversibility condition    P = P T    P superscript P T  \\Pi P=P^{\\mathrm{T}}\\Pi roman_ italic_P = italic_P start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT roman_  and translated skew-symmetry  P + P T = P E  ( 1 n  1 n T ) P superscript P T subscript P E subscript 1 n superscript subscript 1 n T P+P^{\\mathrm{T}}={\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}{\\mathbf{1}}_{n}^% {\\mathrm{T}}) italic_P + italic_P start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT = caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) , where   = diag  (  )  diag  \\Pi=\\operatorname{{diag}}(\\pi) roman_ = roman_diag ( italic_ )  and    \\pi italic_  is the stationary distribution of the canonical Markov matrix  S S S italic_S  corresponding to  P P P italic_P . It turns out that both conditions are elegantly captured by the matrix    P + P    P E  ( 1 n   T )  P P  subscript P E subscript 1 n superscript  T \\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}}) roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  as illustrated in  Proposition   2 .",
            "Proposition   2  is proved in  Section   IV-B . It suggests that we can use the Frobenius norm of    P + P    P E  ( 1 n   T )  P P  subscript P E subscript 1 n superscript  T \\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}}) roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  to quantify the deviation of a pairwise comparison matrix from the family of BTL models. To rigorously argue that the (scaled) Frobenius norm of    P + P    P E  ( 1 n   T )  P P  subscript P E subscript 1 n superscript  T \\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}}) roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  coincides with the usual measure of separation distance in this setting, we require a useful decomposition of weighted Frobenius norm given in  Proposition   3 .",
            "The proof of  Proposition   3  is provided in  Section   IV-C . (We note that since   i > 0 subscript  i 0 \\pi_{i}>0 italic_ start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT > 0  for all  i  [ n ] i delimited-[] n i\\in[n] italic_i  [ italic_n ] , the norm       1 , F \\|\\cdot\\|_{\\pi^{-1},\\mathrm{F}}    start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT , roman_F end_POSTSUBSCRIPT  is well-defined.) Using  Proposition   3 , we show in  Theorem   1  that if a pairwise comparison model  P P P italic_P  satisfies  Assumptions   1 ,  2 ,  3  and  4 , then the quantity     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  is always within constant factors of the Frobenius-norm-distance between  P P P italic_P  and the set of BTL models (or more precisely, the set  BTL h subscript BTL h \\mathsf{BTL}_{h} sansserif_BTL start_POSTSUBSCRIPT italic_h end_POSTSUBSCRIPT  defined below). Hence,     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  captures a natural notion of separation distance in this setting.",
            "Suppose the pairwise comparison matrix  P P P italic_P  and the induced graph  G G {\\mathcal{G}} caligraphic_G  satisfy  Assumptions   1 ,  2 ,  3  and  4 . Then, there exist constants  c 1 , c 2 > 0 subscript c 1 subscript c 2 0 c_{1},c_{2}>0 italic_c start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT > 0  (independent of  n n n italic_n ) such that",
            "The proof is provided in  Section   IV-D . It utilizes a new Lagrangian and perturbation-based approach to compute the Frobenius-norm-distance between a given pairwise comparison matrix and its closest reversible counterpart. This approach may be of independent utility in other matrix theoretic scenarios. We also note that our approach of measuring separation distance is quite different to distance measures between Markov chains based on spectral radius introduced in  [ 67 ,  68 ] . Next, armed with  Proposition   2  and  Theorem   1 , we formally define the hypothesis testing problem for BTL models.",
            "For a given tolerance parameter   > 0 italic- 0 \\epsilon>0 italic_ > 0  and a pairwise comparison model  P P P italic_P  satisfying  Assumptions   1 ,  2 ,  3  and  4 , we can formulate the hypothesis testing problem in ( 5 ) as:",
            "Let    \\Phi roman_  denote a  decision rule  or  hypothesis test  that maps the consolidated observations  Z Z {\\mathcal{Z}} caligraphic_Z  to  { 0 , 1 } 0 1 \\{0,1\\} { 0 , 1 } , where  0 0  represents the null hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  1 1 1 1  represents the alternative hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . Let  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  denote the probability distributions of the observations  Z Z {\\mathcal{Z}} caligraphic_Z  under  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , respectively. Throughout this paper, we will use  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  when we need to specify a hypothesis, and  P P {\\mathbb{P}} blackboard_P  when a probability expression holds for both hypotheses. Similarly,  E H 0 subscript E subscript H 0 {\\mathbb{E}}_{H_{0}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ,  E H 1 subscript E subscript H 1 {\\mathbb{E}}_{H_{1}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , and  E E {\\mathbb{E}} blackboard_E  will represent the corresponding expectation operators. Furthermore, for a fixed induced graph  G G {\\mathcal{G}} caligraphic_G  satisfying  Assumption   3 , let  M 0 subscript M 0 {\\mathcal{M}}_{0} caligraphic_M start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  M  (  ) M italic- {\\mathcal{M}}(\\epsilon) caligraphic_M ( italic_ )  denote the sets of pairwise comparison models that satisfy the null and alternative hypotheses, respectively, in ( 19 ) along with  Assumptions   1 ,  2  and  4 :",
            "To understand the test statistic  T T T italic_T , notice that if were to set   ^ =  ^   \\hat{\\pi}=\\pi over^ start_ARG italic_ end_ARG = italic_  and assume that  k i  j  2 subscript k i j 2 k_{ij}\\geq 2 italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  2  for all  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E  with  i = j i j i\\neq j italic_i = italic_j  in  Eq.   24  and consider the hypothetical statistic",
            "then  E  [ T   ] =    P + P    P E  ( 1 n   T )  F 2 E delimited-[]   T subscript superscript norm  P P  subscript P E subscript 1 n superscript  T 2 F {\\mathbb{E}}[\\bar{T}]=\\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n% }\\pi^{\\mathrm{T}})\\|^{2}_{\\mathrm{F}} blackboard_E [ over  start_ARG italic_T end_ARG ] =  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT . So, the statistic  T T T italic_T  is designed by plugging in   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  in place of    \\pi italic_  in an unbiased estimator  T     T \\bar{T} over  start_ARG italic_T end_ARG  of     P + P    P E  ( 1 n   T )  F 2 subscript superscript norm  P P  subscript P E subscript 1 n superscript  T 2 F \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|^{% 2}_{\\mathrm{F}}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT . The precise decision rule using  T T T italic_T  is given in the next section in  Eq.   27 .",
            "Lastly, we remark that testing for a single BTL model can be conducted using a   2 superscript  2 \\chi^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -type goodness-of-fit test  [ 69 ] , and testing for a class of BTL models could be attempted using a composite   2 superscript  2 \\chi^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -test  [ 70 ] . However, performing sharp minimax analysis on the corresponding   2 superscript  2 \\chi^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -statistics poses challenges. Therefore, our focus lies on the proposed test statistic  T T T italic_T  in  Eq.   24 . Notably, we demonstrate minimax optimality of the critical threshold for complete graphs, thereby underscoring the effectiveness of considering our proposed test.",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , the critical threshold defined in  Eq.   23  is upper bounded by",
            "The proof is provided in  Section   V . The proof has several essential steps. Among these, the most important step involves computing  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -error bounds (see  Lemma   6 ) for the estimated BTL parameters   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  when the data is generated by a general pairwise comparison model, which is not necessarily BTL (i.e., under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ). The derivation of these error bounds requires us to analyze the second largest singular values of DTMs corresponding to non-reversible Markov chains, particularly in the context of induced graphs that are not complete. Once we have established these  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -error bounds, we can compute bounds on  E  [ T ] E delimited-[] T {\\mathbb{E}}[T] blackboard_E [ italic_T ]  and  var  ( T ) var T {\\mathrm{var}}(T) roman_var ( italic_T ) . This step involves mitigating the correlation between the terms   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  and  { Z i  j } ( i , j )  E subscript subscript Z i j i j E \\{Z_{ij}\\}_{(i,j)\\in{\\mathcal{E}}} { italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT ( italic_i , italic_j )  caligraphic_E end_POSTSUBSCRIPT  in  Eq.   24  as both of them share the same source of randomness. Broadly speaking, this is done by splitting the product of dependent terms into three parts (by utilizing the identity  a ^  b ^ = ( a ^  a )  ( b ^  b ) + ( a ^  a )  b + a  b ^ ^ a ^ b ^ a a ^ b b ^ a a b a ^ b \\hat{a}\\hat{b}=(\\hat{a}-a)(\\hat{b}-b)+(\\hat{a}-a)b+a\\hat{b} over^ start_ARG italic_a end_ARG over^ start_ARG italic_b end_ARG = ( over^ start_ARG italic_a end_ARG - italic_a ) ( over^ start_ARG italic_b end_ARG - italic_b ) + ( over^ start_ARG italic_a end_ARG - italic_a ) italic_b + italic_a over^ start_ARG italic_b end_ARG , where  a ^ ^ a \\hat{a} over^ start_ARG italic_a end_ARG  and  b ^ ^ b \\hat{b} over^ start_ARG italic_b end_ARG  are correlated estimators of  a a a italic_a  and  b b b italic_b ) and bounding each part using appropriate concentration inequalities. Moreover, in the case where the induced graph is complete, the analysis becomes considerably simpler. An instance of such simplification in the proofs arises through the utilization of bounds between contraction coefficients of  S S S italic_S  (see  Section   V-A  and  Lemma   3 ).",
            "In the scenario where  k i  j = k subscript k i j k k_{ij}=k italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_k  for all  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E  with  i = j i j i\\neq j italic_i = italic_j  and  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , the decision rule that we analyze to establish  Theorem   2  is",
            "Finally, we remark that the condition  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT  in  Theorem   2  can be relaxed to the condition  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n  at the expense of a poly-logarithmic factor in the scaling of the critical threshold as demonstrated in the following proposition.",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n , the critical threshold defined in  Eq.   23  is upper bounded by",
            "The proof of  Proposition   4  can be gleaned from the proof of  Theorem   2  in  Section   V . In essence, the behavior in  Proposition   4  stems from the fact that the proof of  Lemma   7  in  Section   V-C 1  relies on a concentration inequality (see  Proposition   10 ) which, under the stronger assumption  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , allows us to avoid the poly-logarithmic factor in  Proposition   4  when establishing  Theorem   2 . However, if a standard matrix Bernstein inequality were employed for concentration, the special constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , defined in  Lemma   7 , would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . Then, the proof of  Proposition   4  would follow by using essentially the same logic as the proof of  Theorem   2  and observing that  Eq.   63  yields an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT . Moreover, in this regime, our decision rule returns the alternative hypothesis if and only if  T    log  n n  k T  n n k T\\geq\\frac{\\gamma\\sqrt{\\log n}}{nk} italic_T  divide start_ARG italic_ square-root start_ARG roman_log italic_n end_ARG end_ARG start_ARG italic_n italic_k end_ARG  for some appropriately chosen constant    \\gamma italic_ .",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold, and suppose that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT  and there exists a constant  c 4 > 0 subscript c 4 0 c_{4}>0 italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT > 0  such that the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } . Then, we have the following bounds:",
            "In this section, we present an information-theoretic lower bound on the critical threshold for the hypothesis testing problem in  Eq.   19  for the special case of a complete induced graph  G G {\\mathcal{G}} caligraphic_G . Our lower bound demonstrates the minimax optimality of the scaling of the critical threshold provided in the upper bound in  Theorem   2  for complete induced graphs. (We will show in  Section   III-E  that pairwise comparison models on complete graphs can satisfy  Assumptions   1 ,  2 ,  3  and  4 .) As noted earlier, we assume that  k i  j = k subscript k i j k k_{ij}=k italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_k  for all  i , j  [ n ] i j delimited-[] n i,j\\in[n] italic_i , italic_j  [ italic_n ]  with  i = j i j i\\neq j italic_i = italic_j .",
            "Consider the hypothesis testing problem in  Eq.   19  and assume that the corresponding induced graph  G G {\\mathcal{G}} caligraphic_G  is a complete graph. Then, there exists a constant  c 8 > 0 subscript c 8 0 c_{8}>0 italic_c start_POSTSUBSCRIPT 8 end_POSTSUBSCRIPT > 0  such that the critical threshold defined in  Eq.   23  is lower bounded by",
            "The proof of  Theorem   4  is provided in  Section   VI-A . The proof uses the  Ingster-Suslina method  for constructing a lower bound on the critical threshold  [ 71 ] . This method is similar to the well-known  Le Cams method , but it establishes a minimax lower bound by considering a point and a mixture on the parameter space instead of just two points. (Although Le Cams method could also be used for this proof in principle, the Ingster-Suslina method greatly simplifies the calculations to bound TV distance in our setting.) Our proof constructs a perturbed family of pairwise comparison models from a fixed BTL model and utilizes the complete graph structure to compute both the stationary distribution and the separation metric     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  in closed form under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . We remark that due to our problem setting, our proof here is much simpler than and quite different to the technique developed in  [ 50 ] , where the separation distance is quantified for Eulerian graphs in terms of sums of TV distances. We leave the problem of determining minimax lower bounds for more general graph topologies satisfying  Assumptions   1 ,  2 ,  3  and  4  for future work. Finally, we also note that the bounds in  Theorems   2  and  4  portray that the    ( 1 / n  k )  1 n k \\Theta(1/\\sqrt{nk}) roman_ ( 1 / square-root start_ARG italic_n italic_k end_ARG )  scaling of the critical threshold is minimax optimal even if we took suprema over all induced graphs satisfying  Assumptions   1 ,  2 ,  3  and  4  inside the infimum in the definition of minimax risk in  Eq.   22 .",
            "In this section, we establish bounds on both the principal ratio and edge expansion for three distinct classes of graphs: complete graphs,  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs, and random graphs generated from Erdos-Renyi models. These three classes represent a few examples of graphs for which  Assumptions   2 ,  3  and  4  hold and the theoretical guarantees of our testing framework are valid for any pairwise comparison matrix  P P P italic_P  consistent with  Assumption   1 . In the first case, we assume that the induced graph is complete and pairwise comparisons among all pairs are observed. The second scenario involves  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs that are sufficiently dense (as explained later) and possess some degree of edge expansion. And the third case assumes the existence of a complete underlying pairwise comparison model consistent with  Assumption   1 , where comparisons between any pair  ( i , j ) i j (i,j) ( italic_i , italic_j )  (and  ( j , i ) j i (j,i) ( italic_j , italic_i ) ), for  i > j i j i>j italic_i > italic_j , are observed independently with probability  p p p italic_p . We show that there exists a constant  c p > 0 subscript c p 0 \\mathsf{c}_{p}>0 sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT > 0  such that as long as  n  p  c p  log  n n p subscript c p n np\\geq\\mathsf{c}_{p}\\log n italic_n italic_p  sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT roman_log italic_n , the Erdos-Renyi pairwise comparison model satisfies  Assumptions   2 ,  3  and  4  with high probability. We also note that much of our technical analysis in each of the three scenarios lies in analyzing the principal ratio.",
            "Let  S S S italic_S  be a canonical Markov matrix in  Definition   2  corresponding to a complete graph with  d = 2  n d 2 n d=2n italic_d = 2 italic_n  and stationary distribution    \\pi italic_ . Suppose further that  Assumption   1  holds. Then, we have",
            "The proof is provided in  Section   A-A ; our argument is a modification of that in  [ 61 , Theorem 3.1] .  Proposition   5  illustrates that  Assumption   4  holds with  h = 1 /  2 h 1 superscript  2 h=1/\\delta^{2} italic_h = 1 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT . It also implies that the pairwise comparison model satisfies  Assumption   2  with   =  3 4  ( 1 +  )  superscript  3 4 1  \\xi=\\frac{\\delta^{3}}{4(1+\\delta)} italic_ = divide start_ARG italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG start_ARG 4 ( 1 + italic_ ) end_ARG , because we obtain the following lower bound on the edge expansion    ( R ) italic- R \\phi(R) italic_ ( italic_R )  using  Eq.   16  by substituting  d = 2  n d 2 n d=2n italic_d = 2 italic_n :",
            "where we have utilized the fact that for complete graphs,   ~  ( G ) = n 2 ~ italic- G n 2 \\tilde{\\phi}({\\mathcal{G}})=\\frac{n}{2} over~ start_ARG italic_ end_ARG ( caligraphic_G ) = divide start_ARG italic_n end_ARG start_ARG 2 end_ARG . Alternatively, for complete graphs, we can obtain tighter upper bounds on the critical threshold (i.e., with better implicit dependence on    \\delta italic_ ) by directly bounding the second largest singular value   2  ( R ) subscript  2 R \\sigma_{2}(R) italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( italic_R )  of the DTM  R R R italic_R  (see  Lemma   3  in  Section   V-A ) instead of relying on expansion properties and  Cheeger inequalities  (i.e., using  Assumption   2  and  Lemma   4  in  Section   V-A ). This alternative approach leverages bounds between contraction coefficients, specifically, in terms of the  Dobrushin contraction coefficient  for TV distance; see  Section   V-A  for details. Additionally, note that a complete graph trivially satisfies  Assumption   3 . Thus, for the case of complete graphs, we have shown that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4 . This allows us to test whether data generated from any pairwise comparison matrix  P P P italic_P  corresponding to a complete induced graph satisfying  Assumption   1  conforms to an underlying BTL model. However, the testing procedure for a complete graph requires  n  ( n  1 )  k n n 1 k n(n-1)k italic_n ( italic_n - 1 ) italic_k  samples.",
            "Let  S S S italic_S  be a canonical Markov matrix in  Definition   2  corresponding to a  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graph  G G {\\mathcal{G}} caligraphic_G  with  d = 2  d ~ d 2 ~ d d=2\\tilde{d} italic_d = 2 over~ start_ARG italic_d end_ARG  and stationary distribution    \\pi italic_ . Suppose further that  Assumption   1  holds, and for some constants  a , b , c > 0 a b c 0 a,b,c>0 italic_a , italic_b , italic_c > 0 ,  G G {\\mathcal{G}} caligraphic_G  satisfies  | E  ( S , T ) |  a  | S |  | T | E S T a S T |{\\mathcal{E}}(\\mathcal{S},\\mathcal{T})|\\geq a|\\mathcal{S}||\\mathcal{T}| | caligraphic_E ( caligraphic_S , caligraphic_T ) |  italic_a | caligraphic_S | | caligraphic_T |  for all disjoint subsets  S , T  [ n ] S T delimited-[] n \\mathcal{S},\\mathcal{T}\\subseteq[n] caligraphic_S , caligraphic_T  [ italic_n ]  with  | S |  b  n S b n |\\mathcal{S}|\\geq bn | caligraphic_S |  italic_b italic_n  and  | T |  c  n T c n |\\mathcal{T}|\\geq cn | caligraphic_T |  italic_c italic_n . If  d ~  c  n ~ d c n \\tilde{d}\\geq cn over~ start_ARG italic_d end_ARG  italic_c italic_n  then, we have",
            "The proof is provided in  Section   A-B . This result generalizes the result in  [ 72 , Theorem 3] , and illustrates that  Assumption   4  holds with  h = c ~  ( a ) /  5 h ~ c a superscript  5 h=\\tilde{c}(a)/\\delta^{5} italic_h = over~ start_ARG italic_c end_ARG ( italic_a ) / italic_ start_POSTSUPERSCRIPT 5 end_POSTSUPERSCRIPT . The assumption,  | E  ( S , T ) |  a  | S |  | T | E S T a S T |\\mathcal{E}(\\mathcal{S},\\mathcal{T})|\\geq a|\\mathcal{S}||\\mathcal{T}| | caligraphic_E ( caligraphic_S , caligraphic_T ) |  italic_a | caligraphic_S | | caligraphic_T |  for all disjoint subsets  S , T S T \\mathcal{S},\\mathcal{T} caligraphic_S , caligraphic_T  with cardinality    ( n )  n \\Theta(n) roman_ ( italic_n ) , is typically satisfied by  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs   G G {\\mathcal{G}} caligraphic_G  with  d ~ =   n ~ d  n \\tilde{d}=\\ \\nu n over~ start_ARG italic_d end_ARG = italic_ italic_n  and   2  ( G )  ( 1   ~ )  d ~ subscript  2 G 1 ~  ~ d \\lambda_{2}({\\mathcal{G}})\\leq(1-\\tilde{\\nu})\\tilde{d} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  ( 1 - over~ start_ARG italic_ end_ARG ) over~ start_ARG italic_d end_ARG  for some constants   ,  ~  ( 0 , 1 ]  ~  0 1 \\nu,\\tilde{\\nu}\\in(0,1] italic_ , over~ start_ARG italic_ end_ARG  ( 0 , 1 ] , where   2  ( G ) subscript  2 G \\lambda_{2}({\\mathcal{G}}) italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  denotes the second largest eigenvalue modulus of the adjacency matrix of  G G {\\mathcal{G}} caligraphic_G ; we refer readers to  [ 73 ]  for the definition of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs. We also refer the readers to  Section   A-C  for details regarding the existence of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs with  d ~ =   n ~ d  n \\tilde{d}=\\nu n over~ start_ARG italic_d end_ARG = italic_ italic_n  and   2  ( G )  ( 1   ~ )  d ~ , subscript  2 G 1 ~  ~ d \\lambda_{2}({\\mathcal{G}})\\leq(1-\\tilde{\\nu})\\tilde{d}, italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  ( 1 - over~ start_ARG italic_ end_ARG ) over~ start_ARG italic_d end_ARG ,  and why they satisfy the assumption in  Proposition   6 . Furthermore, pairwise comparison models corresponding to such graphs also satisfy  Assumption   2  as explained in  Section   A-C , cf.  [ 74 , Theorem 9.2.1] , and trivially satisfy  Assumption   3 . Thus, for the case of dense  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs with appropriate expansion properties, we have again established that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4 . This permits us to test whether data generated from any pairwise comparison matrix  P P P italic_P  corresponding to a dense  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graph satisfying  Assumption   1  and certain expansion properties conforms to an underlying BTL model. Moreover, the denseness requirement  d ~ =   ( n ) ~ d  n \\tilde{d}=\\Theta(n) over~ start_ARG italic_d end_ARG = roman_ ( italic_n )  implies that the testing procedure requires    ( n 2  k )  superscript n 2 k \\Theta(n^{2}k) roman_ ( italic_n start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k )  samples in order to satisfy the various assumptions. The next setting establishes the utility of our testing procedure for sparse induced graphs.",
            "We emphasize that the probability law utilized here differs from that in the minimax risk framework. The definition of minimax risk in  Eq.   22  assumes a fixed graph  G G {\\mathcal{G}} caligraphic_G  and considers probabilities associated with the randomness in the data generating mechanism. In contrast, the probability laws in  Proposition   7  and other results in this section are governed by the graph generation process.",
            "The proof of  Proposition   8  is provided in  Section   A-D . In particular,  Proposition   8  illustrates that  Assumption   4  holds with  h = 7 /  2 h 7 superscript  2 h=7/\\delta^{2} italic_h = 7 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  with high probability. Moreover, random graphs are known to have nice expansion properties  [ 75 , Theorem 2.8]  (also see  [ 76 ] ). Indeed, using  [ 77 , Equation (11)] , we have that for an Erdos-Renyi random graph,   ~  ( G )  1 4  n  p ~ italic- G 1 4 n p \\tilde{\\phi}({\\mathcal{G}})\\geq\\frac{1}{4}np over~ start_ARG italic_ end_ARG ( caligraphic_G )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG italic_n italic_p  with high probability, thereby showing that the pairwise comparison matrix  P P P italic_P  also satisfies  Assumption   2  with   =  3 / ( 12  7  ( 1 +  ) )  superscript  3  12 7 1  \\xi=\\delta^{3}/(12\\cdot 7\\cdot(1+\\delta)) italic_ = italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT / ( 12  7  ( 1 + italic_ ) )  with high probability.  Proposition   7  also implies that an Erdos-Renyi random graph satisfies  Assumption   3  with high probability. Thus, for the case of Erdos-Renyi random graphs, we have again demonstrated that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4  with high probability, as required for theoretical guarantees on our testing procedure. Notably, in this case, the testing procedure requires  O  ( k  n  log  n ) O k n n O(kn\\log n) italic_O ( italic_k italic_n roman_log italic_n )  pairwise comparisons, which matches the total number of observations needed for consistently estimating the parameters of the BTL model in  [ 11 ] .",
            "We prove  Propositions   1 ,  3 ,  2  and  1  in this section. Throughout this proof, we employ a concise notation by using overlapping labels (e.g.,  c , c ~ , c 1 , c 2 , c  , c ^ , ... c ~ c subscript c 1 subscript c 2 superscript c  ^ c ... c,\\tilde{c},c_{1},c_{2},c^{\\prime},\\hat{c},\\dots italic_c , over~ start_ARG italic_c end_ARG , italic_c start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT , over^ start_ARG italic_c end_ARG , ... ) to denote various constants. To avoid ambiguity, we explicitly reserve the notation  c  , c  , c  subscript c  subscript c  subscript c  c_{\\alpha},c_{\\beta},c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  for specially defined constants in  Lemma   7  and the subsequent proof.",
            "Therefore, using  Eqs.   36  and  42 , the ratio in  Eq.   34  is upper bounded as",
            "This section is devoted to the proofs of various lemmata and existing results needed to prove  Theorems   2  and  3 . The main portion of the proof of  Theorem   2  is presented in  Section   V-B  and proof of  Theorem   3  is presented in  Section   V-D . But first, we need to establish some key results discussed in the following section.",
            "In this section, we will prove key lemmata that will be used quite frequently to develop the proof of the main result in  Theorem   2 . The following lemma is similar to  [ 11 , Theorem 8]  but also holds when the canonical Markov matrix of  P P P italic_P  is not reversible.",
            "For  S ^ ^ S {\\hat{S}} over^ start_ARG italic_S end_ARG  constructed as in  Eq.   25 , we have",
            "The proof of  Lemma   2  is quite similar to  [ 30 ]  but requires slight modifications and is provided in  Section   V-C 3  for completeness.",
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows by a standard argument and the explanation is provided below.   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  is a consequence of Cheegers inequality for non-negative matrices in  Lemma   5  (see below).   3 subscript  3 \\zeta_{3} italic_ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  follows since  1  x  1  x / 2 1 x 1 x 2 \\sqrt{1-x}\\leq 1-x/2 square-root start_ARG 1 - italic_x end_ARG  1 - italic_x / 2  for  x  0 . x 0 x\\geq 0. italic_x  0 .  and since    ( R ) =   ( ( R + R T ) / 2 ) =   ( R T ) italic- R italic- R superscript R T 2 italic- superscript R T \\phi(R)=\\phi((R+R^{\\mathrm{T}})/2)=\\phi(R^{\\mathrm{T}}) italic_ ( italic_R ) = italic_ ( ( italic_R + italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) / 2 ) = italic_ ( italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  (proof provided below for completeness). Finally,   4 subscript  4 \\zeta_{4} italic_ start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT  follows because    ( R )   , italic- R  \\phi(R)\\geq\\xi, italic_ ( italic_R )  italic_ ,  by  Assumption   2 . Regarding   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , observe that since the matrix  R R R italic_R  is  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG -lazy, i.e.,  R i  i  1 2 subscript R i i 1 2 R_{ii}\\geq\\frac{1}{2} italic_R start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG  for all  i  [ n ] i delimited-[] n i\\in[n] italic_i  [ italic_n ]  (as  S i  i  1 2 subscript S i i 1 2 S_{ii}\\geq\\frac{1}{2} italic_S start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG ), therefore we have",
            "Combining  Lemma   2  and  Lemma   3  we obtain the following corollary.",
            "Under the pairwise comparison model discussed in  Section   II  such that  Assumptions   2  and  4  holds and for  k  max  { 1 , c  h  log  n d max   4 } k 1 c h n subscript d superscript  4 k\\geq\\max\\big{\\{}1,\\frac{ch\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 1 , divide start_ARG italic_c italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG }  and  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n , the following bound holds:",
            "In this section, we will utilize the lemmata developed above to prove  Theorem   2 .",
            "The proof is provided in  Section   V-C 2 . Now under hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT , by  Lemma   8 ,  E H 0  [ T 3 ] = 0 subscript E subscript H 0 delimited-[] subscript T 3 0 {\\mathbb{E}}_{H_{0}}[T_{3}]=0 blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT [ italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT ] = 0  and  var H 0  ( T 3 )  4  n  d max      4 k 2 subscript var subscript H 0 subscript T 3 4 n subscript d subscript superscript norm  4 superscript k 2 {\\mathrm{var}}_{H_{0}}(T_{3})\\leq\\frac{4nd_{\\max}\\|\\pi\\|^{4}_{\\infty}}{k^{2}} roman_var start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ( italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT )  divide start_ARG 4 italic_n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  italic_  start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT  end_POSTSUBSCRIPT end_ARG start_ARG italic_k start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_ARG . Moreover, the event  { T  t } T t \\{T\\geq t\\} { italic_T  italic_t }  can be written as",
            "Thus, for sufficiently large constant  a 0 subscript a 0 a_{0} italic_a start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  we have demonstrated that the sum of type  \\Romannum 1 and type  \\Romannum 2 errors is bounded by  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Combining this result with the definition of the critical threshold in  Eq.   23 , we obtain the following bound on   c subscript  c \\varepsilon_{\\mathsf{c}} italic_ start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT :",
            "From  Equation   52 , we have  E  [ Q i  j ] = 0 E delimited-[] subscript Q i j 0 {\\mathbb{E}}[Q_{ij}]=0 blackboard_E [ italic_Q start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ] = 0 . Now we re-write  T 1  a subscript T 1 a T_{1a} italic_T start_POSTSUBSCRIPT 1 italic_a end_POSTSUBSCRIPT  in terms of the matrix  Q Q Q italic_Q  as",
            "Bounding   Q  2 subscript norm Q 2 \\|Q\\|_{2}  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT :  Now it remains to show that   Q  2  O  ( d max / k ) subscript norm Q 2 O subscript d k \\|Q\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. In the case of a complete graph, it is much easier to show because each entry  Q i  j subscript Q i j Q_{ij} italic_Q start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  is bounded, and therefore  Q Q {Q} italic_Q  is a random sub-Gaussian matrix, and the variance of each entry is upper bounded by  4 / k 4 k 4/k 4 / italic_k  (by  Eq.   52 ). Hence, by  [ 80 , Theorem 4.4.5] , the spectral norm   Q  2  2  c q  ( 2  d max + t ) / k subscript norm Q 2 2 subscript c q 2 subscript d t k \\|{Q}\\|_{2}\\leq 2c_{q}(2\\sqrt{d_{\\max}}+t)/\\sqrt{k}  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  2 italic_c start_POSTSUBSCRIPT italic_q end_POSTSUBSCRIPT ( 2 square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT end_ARG + italic_t ) / square-root start_ARG italic_k end_ARG  for some constant  c q subscript c q c_{q} italic_c start_POSTSUBSCRIPT italic_q end_POSTSUBSCRIPT  with probability at least  1  2  e  t 2 1 2 superscript e superscript t 2 1-2e^{-t^{2}} 1 - 2 italic_e start_POSTSUPERSCRIPT - italic_t start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT . Substituting  t = log  n t n t=\\sqrt{\\log n} italic_t = square-root start_ARG roman_log italic_n end_ARG , we get the following bound with a probability at least  1  O  ( 1 / n 3 ) 1 O 1 superscript n 3 1-O(1/n^{3}) 1 - italic_O ( 1 / italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT )",
            "Substituting the above bound in  Eq.   73  we obtain the bound in  Eq.   72  for some constant  c ~ 2 subscript ~ c 2 \\tilde{c}_{2} over~ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT .",
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows from the moments of the Binomial random variable as described in  Eq.   52  along with additional calculations provided below,   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  follows by upper bounding  p i  j  ( 1  p i  j ) subscript p i j 1 subscript p i j p_{ij}(1-p_{ij}) italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ( 1 - italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  by  1 / 4 1 4 1/4 1 / 4  and   3 subscript  3 \\zeta_{3} italic_ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  follows by upper bounding   i subscript  i \\pi_{i} italic_ start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  by      subscript norm  \\|\\pi\\|_{\\infty}  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  and  p i  j 2  ( 1  p i  j ) 2 superscript subscript p i j 2 superscript 1 subscript p i j 2 p_{ij}^{2}(1-p_{ij})^{2} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( 1 - italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ) start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  by  1 / 16 1 16 1/16 1 / 16 . To show   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , note that",
            "Combining  Eq.   80  and  Eq.   82  and using the fact that  d  2  d max d 2 subscript d d\\geq 2d_{\\max} italic_d  2 italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  completes the proof.",
            "First, we begin by deriving bounds on the probability of type  \\Romannum 1 error. Similar to the proof of  Theorem   2 , we split the test statistic  T T T italic_T  as  T = T 1 + T 2 + T 3 T subscript T 1 subscript T 2 subscript T 3 T=T_{1}+T_{2}+T_{3} italic_T = italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , where  T 1 , T 2 subscript T 1 subscript T 2 T_{1},T_{2} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  are defined in  Eqs.   53 ,  54  and  55 . To calculate the  P  ( T  t ) P T t {\\mathbb{P}}(T\\geq t) blackboard_P ( italic_T  italic_t )  for  t  0 t 0 t\\geq 0 italic_t  0 , we use the following inequality",
            "We will focus on the  ( i , j ) i j (i,j) ( italic_i , italic_j ) th term of the product in  Equation   92  for  i = j i j i\\neq j italic_i = italic_j  and denote it as  f  ( p i  j , p i  j  ) f subscript p i j subscript superscript p  i j f(p_{ij},p^{\\prime}_{ij}) italic_f ( italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT , italic_p start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ) :",
            "for any fixed  m 1  [ k i 1  i 2 ] , ... , m l  1  [ k i l  1  i l ] formulae-sequence superscript m 1 delimited-[] subscript k subscript i 1 subscript i 2 ... superscript m l 1 delimited-[] subscript k subscript i l 1 subscript i l m^{1}\\in[k_{i_{1}i_{2}}],\\dots,m^{l-1}\\in[k_{i_{l-1}i_{l}}] italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] , ... , italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT end_POSTSUBSCRIPT ]  and  m ~ 1  [ k i l  i l  1 ] , ... , m ~ l  1  [ k i 2  i 1 ] formulae-sequence superscript ~ m 1 delimited-[] subscript k subscript i l subscript i l 1 ... superscript ~ m l 1 delimited-[] subscript k subscript i 2 subscript i 1 \\tilde{m}^{1}\\in[k_{i_{l}i_{l-1}}],\\dots,\\tilde{m}^{l-1}\\in[k_{i_{2}i_{1}}] over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] , ... , over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] . Note that here  Z m j , i j  i j + 1 subscript Z superscript m j subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}} italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  denotes the  m j superscript m j m^{j} italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT th observartion ( m j  [ k i j  i j + 1 ] superscript m j delimited-[] subscript k subscript i j subscript i j 1 m^{j}\\in[k_{i_{j}i_{j+1}}] italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] ) of the form  i j subscript i j i_{j} italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT  vs.  i j + 1 subscript i j 1 i_{j+1} italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT \" and hence  Z m j , i j  i j + 1  Bernoulli  ( p i j  i j + 1 ) similar-to subscript Z superscript m j subscript i j subscript i j 1 Bernoulli subscript p subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}}\\sim{\\mathsf{Bernoulli}}(p_{i_{j}i_{j+1}}) italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  sansserif_Bernoulli ( italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ) . Therefore, we have that  Z F  L subscript Z F L Z_{FL} italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT  follows a Bernoulli distribution with parameter   j = 1 l  1 p i j  i j + 1 superscript subscript product j 1 l 1 subscript p subscript i j subscript i j 1 \\prod_{j=1}^{l-1}p_{i_{j}i_{j+1}}  start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , and  Z B  L subscript Z B L Z_{BL} italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT  follows a Bernoulli distribution with parameters   j = 1 l  1 p i l  j + 1  i l  j superscript subscript product j 1 l 1 subscript p subscript i l j 1 subscript i l j \\prod_{j=1}^{l-1}p_{i_{l-j+1}i_{l-j}}  start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j + 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j end_POSTSUBSCRIPT end_POSTSUBSCRIPT . Based on the Kolgomorov loop criteria, under the hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT , we have  P  ( { Z F  L = 1 } ) P subscript Z F L 1 {\\mathbb{P}}(\\{Z_{FL}=1\\}) blackboard_P ( { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 } )  is the same as  P  ( { Z B  L = 1 } ) P subscript Z B L 1 {\\mathbb{P}}(\\{Z_{BL}=1\\}) blackboard_P ( { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 } )  and moreover both the events  { Z F  L = 1 } subscript Z F L 1 \\{Z_{FL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 }  and  { Z B  L = 1 } subscript Z B L 1 \\{Z_{BL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 }  occur only when each of the random variables  Z m j , i j  i j + 1 subscript Z superscript m j subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}} italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  Z m ~ j , i l  j + 1  i l  j subscript Z superscript ~ m j subscript i l j 1 subscript i l j Z_{\\tilde{m}^{j},{i_{l-j+1}i_{l-j}}} italic_Z start_POSTSUBSCRIPT over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l - italic_j + 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j end_POSTSUBSCRIPT end_POSTSUBSCRIPT  in the product (in  Eq.   97 ) are  1 1 1 1 . Therefore, this motivates the following shuffling process where we essentially replace the data in  Z Z {\\mathcal{Z}} caligraphic_Z  corresponding to event  { Z F  L = 1 } subscript Z F L 1 \\{Z_{FL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 }  by the data corresponding to event  { Z B  L = 1 } subscript Z B L 1 \\{Z_{BL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 } . To proceed with the shuffling process, we begin by uniformly selecting an item  i 1 = i subscript i 1 i i_{1}=i italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT = italic_i  and then randomly choose a comparison of the form  i i i italic_i  vs.  j j j italic_j \" from the data  Z Z \\mathcal{Z} caligraphic_Z , for any  j = i j i j\\neq i italic_j = italic_i  such that  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E . If the outcome of the comparison results in item  j j j italic_j  being preferred over item  i i i italic_i , we move to item  j j j italic_j  (i.e., set  i 2 = j subscript i 2 j i_{2}=j italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT = italic_j ) and continue this process from item  j , j j, italic_j ,  otherwise, we again repeat this step from item  i i i italic_i . This iterative procedure continues until we revisit item  i i i italic_i  after at least one departure, effectively completing a cycle (with  i l = i subscript i l i i_{l}=i italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT = italic_i ). Next, we proceed to remove the data corresponding to the forward cycle  { Z m 1 , i 1  i 2 , ... , Z m l  1 , i l  1  i l } subscript Z superscript m 1 subscript i 1 subscript i 2 ... subscript Z superscript m l 1 subscript i l 1 subscript i l \\{Z_{m^{1},{i_{1}i_{2}}},\\dots,Z_{m^{l-1},{i_{l-1}i_{l}}}\\} { italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , ... , italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT end_POSTSUBSCRIPT }  while adding new data points to  Z Z \\mathcal{Z} caligraphic_Z  corresponding to the backward cycle  { Z m 1 , i l  i l  1 , ... , Z m l  1 , i 2  i 1 } subscript Z superscript m 1 subscript i l subscript i l 1 ... subscript Z superscript m l 1 subscript i 2 subscript i 1 \\{Z_{m^{1},{i_{l}i_{l-1}}},\\dots,Z_{m^{l-1},{i_{2}i_{1}}}\\} { italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , ... , italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT } . This step is illustrated with the following example. Suppose that a cycle of length  3 3 3 3  is found in our dataset. Assume that in this cycle, item  j j j italic_j  is preferred over item  i i i italic_i  in a  i i i italic_i  vs.  j j j italic_j  comparison, followed by item  k k k italic_k  being preferred over item  j j j italic_j  in the  j j j italic_j  vs.  k k k italic_k  comparison, and finally, item  i i i italic_i  triumphs over item  k k k italic_k  in the  k k k italic_k  vs.  i i i italic_i  comparison. According to Kolmogorovs loop criterion, the forward loop probability product:  p i  j  p j  k  p k  i  subscript p i j subscript p j k subscript p k i p_{ij}\\cdot p_{jk}\\cdot p_{ki} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_j italic_k end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_k italic_i end_POSTSUBSCRIPT  should be the same as the backward loop probability product  p i  k  p k  j  p j  i  subscript p i k subscript p k j subscript p j i p_{ik}\\cdot p_{kj}\\cdot p_{ji} italic_p start_POSTSUBSCRIPT italic_i italic_k end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_k italic_j end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_j italic_i end_POSTSUBSCRIPT . This corresponds to replacing these three outcomes with the following comparisons: item  k k k italic_k  being preferred over item  i i i italic_i  in a  i i i italic_i  vs.  k k k italic_k  comparison, item  j j j italic_j  preferred over item  k k k italic_k  in a  k k k italic_k  vs.  j j j italic_j  comparison, and item  i i i italic_i  preferred over  j j j italic_j  in a  j j j italic_j  vs.  i i i italic_i  comparison. This entire process of finding a cycle and replacing the data is repeated for a sufficient number of iterations to ensure robust shuffling. Another example illustrating this data transformation process for a cycle of length  4 4 4 4  is shown in  Fig.   2",
            "This appendix provides supporting details on the expansion properties of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -expanders, including existence results and verification of assumptions in  Proposition   6  and  Assumption   2 .",
            "This yields the bound  a  ( 1   )   ~ a 1  ~  a\\geq(1-\\nu)\\tilde{\\nu} italic_a  ( 1 - italic_ ) over~ start_ARG italic_ end_ARG  on  a a a italic_a  in  Proposition   6 . Now to show  Assumption   2  holds for this expander, we substitute  T = S c T superscript S c \\mathcal{T}=\\mathcal{S}^{\\mathrm{c}} caligraphic_T = caligraphic_S start_POSTSUPERSCRIPT roman_c end_POSTSUPERSCRIPT  in  Eq.   99  and which by a simple argument gives",
            "Therefore, with probability at least  1  O  ( n  3 ) 1 O superscript n 3 1-O(n^{-3}) 1 - italic_O ( italic_n start_POSTSUPERSCRIPT - 3 end_POSTSUPERSCRIPT ) , we have     T  D  2  n       . subscript norm superscript  superscript T D 2 n subscript norm superscript  \\|\\pi^{*^{\\mathrm{T}}}D\\|_{2}\\leq\\sqrt{n}\\|\\pi^{*}\\|_{\\infty}.  italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT italic_D  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  square-root start_ARG italic_n end_ARG  italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT .  Applying the same technique to  (   T  ( S 0  S 0  ) ) i subscript superscript  superscript T subscript S 0 superscript subscript S 0 i (\\pi^{*^{\\mathrm{T}}}({S_{0}}-S_{0}^{*}))_{i} ( italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT - italic_S start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT ) ) start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  yields a similar high probability bound, and thus  Eq.   112  completes the proof."
        ]
    },
    "id_table_3": {
        "caption": "",
        "table": "S3.Ex3",
        "footnotes": [],
        "references": [
            "We define the critical threshold for our testing problem and establish an upper bound on it in  Theorem   2  for general induced observation graphs (satisfying mild assumptions). Furthermore, we also derive upper bounds on the type  \\Romannum 1 and type  \\Romannum 2 probabilities of error in  Theorem   3 . These bounds provide insights into the influence of various parameters on the error decay rate.",
            "The paper is organized as follows. Several notational preliminaries are presented in  Section   I-D . In  Section   II , we introduce general pairwise comparison models, define the necessary terminology, and present the various regularity assumptions necessary for our analysis. In  Section   III , we present the main results of our work. Specifically, in  Section   III-A , we introduce a notion of separation distance that allows us to measure the deviation of a pairwise comparison model from the class of all BTL models. Additionally, we mathematically formulate the hypothesis testing problem and introduce the associated testing rule.  Section   III-B  provides an upper bound on the scaling of the critical threshold for this hypothesis test. In  Section   III-C , we provide upper bounds on type  \\Romannum 1 and type  \\Romannum 2 probabilities of error. Moreover,  Section   III-D  introduces a matching lower bound on the critical threshold of the test proving minimax optimality (up to constant factors). In  Section   III-E , we provide examples of different classes of graphs that meet the required assumptions for all pairwise comparison models. We then move on to characterizing the stability of the BTL model in  Section   III-F . In our paper, formal proofs of various propositions are available in  Section   IV , while the upper bound proofs for the critical threshold ( Theorem   2 ) and type  \\Romannum 1 and type  \\Romannum 2 probabilities of error ( Theorem   3 ) are provided in  Section   V . The proofs of lower bounds and stability results are presented in  Section   VI . In  Section   VII , we present numerical simulations for synthetic data that support our theoretical results and also apply our testing rule to both real-world and synthetic datasets. Finally, in  Section   VIII , we reiterate our results and provide some directions for future research. Additionally, we present our remaining proofs in the appendices.",
            "Intuitively,  Assumption   3  states that  d max  d min subscript d subscript d d_{\\max}\\approx d_{\\min} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  italic_d start_POSTSUBSCRIPT roman_min end_POSTSUBSCRIPT , i.e., the minimum and maximum degrees are close to each other. Another measure of regularity for a non-negative matrix is the well-known concept of  principal ratio , cf.  [ 64 ]  (which is the  Birkhoff norm of the Perron-Frobenius vector   [ 65 ] , and is sometimes called the  height of the Perron-Frobenius vector   [ 66 ] ).",
            "There exists a constant  h > 0 h 0 h>0 italic_h > 0  such that the principal ratio  h  subscript h  h_{\\pi} italic_h start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  is bounded: 1 1 1 The constants    \\xi italic_ ,    \\kappa italic_ , and  h h h italic_h  in  Assumptions   2 ,  3  and  4  do not depend on  n n n italic_n .",
            "automatically satisfy both  Assumptions   1  and  4  (with  h =   1 h superscript  1 h=\\delta^{-1} italic_h = italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT ). 2 2 2 We refer readers to  Section   IV-A  for an explicit expression for the stationary distribution in BTL models.  Furthermore, if the underlying graph  G G {\\mathcal{G}} caligraphic_G  exhibits significant edge expansion in the canonical sense, i.e.,   ~  ( G )   ~  d ~ italic- G ~ italic- d \\tilde{\\phi}({\\mathcal{G}})\\geq\\tilde{\\epsilon}d over~ start_ARG italic_ end_ARG ( caligraphic_G )  over~ start_ARG italic_ end_ARG italic_d  for some constant   ~ > 0 ~ italic- 0 \\tilde{\\epsilon}>0 over~ start_ARG italic_ end_ARG > 0 , and adheres to  Assumption   3 , then all four assumptions are simultaneously satisfied for all BTL models with bounded condition number. For general pairwise comparison models, we will present several classes of graphs in  Section   III-E , e.g., complete graphs, dense regular graphs, and Erdos-Renyi random graphs, where any pairwise comparison model satisfying  Assumption   1  will also satisfy  Assumptions   2 ,  3  and  4  (with high probability, where appropriate).",
            "Proposition   2  is proved in  Section   IV-B . It suggests that we can use the Frobenius norm of    P + P    P E  ( 1 n   T )  P P  subscript P E subscript 1 n superscript  T \\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}}) roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  to quantify the deviation of a pairwise comparison matrix from the family of BTL models. To rigorously argue that the (scaled) Frobenius norm of    P + P    P E  ( 1 n   T )  P P  subscript P E subscript 1 n superscript  T \\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}}) roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  coincides with the usual measure of separation distance in this setting, we require a useful decomposition of weighted Frobenius norm given in  Proposition   3 .",
            "The proof of  Proposition   3  is provided in  Section   IV-C . (We note that since   i > 0 subscript  i 0 \\pi_{i}>0 italic_ start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT > 0  for all  i  [ n ] i delimited-[] n i\\in[n] italic_i  [ italic_n ] , the norm       1 , F \\|\\cdot\\|_{\\pi^{-1},\\mathrm{F}}    start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT , roman_F end_POSTSUBSCRIPT  is well-defined.) Using  Proposition   3 , we show in  Theorem   1  that if a pairwise comparison model  P P P italic_P  satisfies  Assumptions   1 ,  2 ,  3  and  4 , then the quantity     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  is always within constant factors of the Frobenius-norm-distance between  P P P italic_P  and the set of BTL models (or more precisely, the set  BTL h subscript BTL h \\mathsf{BTL}_{h} sansserif_BTL start_POSTSUBSCRIPT italic_h end_POSTSUBSCRIPT  defined below). Hence,     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  captures a natural notion of separation distance in this setting.",
            "Suppose the pairwise comparison matrix  P P P italic_P  and the induced graph  G G {\\mathcal{G}} caligraphic_G  satisfy  Assumptions   1 ,  2 ,  3  and  4 . Then, there exist constants  c 1 , c 2 > 0 subscript c 1 subscript c 2 0 c_{1},c_{2}>0 italic_c start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT > 0  (independent of  n n n italic_n ) such that",
            "For a given tolerance parameter   > 0 italic- 0 \\epsilon>0 italic_ > 0  and a pairwise comparison model  P P P italic_P  satisfying  Assumptions   1 ,  2 ,  3  and  4 , we can formulate the hypothesis testing problem in ( 5 ) as:",
            "Let    \\Phi roman_  denote a  decision rule  or  hypothesis test  that maps the consolidated observations  Z Z {\\mathcal{Z}} caligraphic_Z  to  { 0 , 1 } 0 1 \\{0,1\\} { 0 , 1 } , where  0 0  represents the null hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  1 1 1 1  represents the alternative hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . Let  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  denote the probability distributions of the observations  Z Z {\\mathcal{Z}} caligraphic_Z  under  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , respectively. Throughout this paper, we will use  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  when we need to specify a hypothesis, and  P P {\\mathbb{P}} blackboard_P  when a probability expression holds for both hypotheses. Similarly,  E H 0 subscript E subscript H 0 {\\mathbb{E}}_{H_{0}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ,  E H 1 subscript E subscript H 1 {\\mathbb{E}}_{H_{1}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , and  E E {\\mathbb{E}} blackboard_E  will represent the corresponding expectation operators. Furthermore, for a fixed induced graph  G G {\\mathcal{G}} caligraphic_G  satisfying  Assumption   3 , let  M 0 subscript M 0 {\\mathcal{M}}_{0} caligraphic_M start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  M  (  ) M italic- {\\mathcal{M}}(\\epsilon) caligraphic_M ( italic_ )  denote the sets of pairwise comparison models that satisfy the null and alternative hypotheses, respectively, in ( 19 ) along with  Assumptions   1 ,  2  and  4 :",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , the critical threshold defined in  Eq.   23  is upper bounded by",
            "The proof is provided in  Section   V . The proof has several essential steps. Among these, the most important step involves computing  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -error bounds (see  Lemma   6 ) for the estimated BTL parameters   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  when the data is generated by a general pairwise comparison model, which is not necessarily BTL (i.e., under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ). The derivation of these error bounds requires us to analyze the second largest singular values of DTMs corresponding to non-reversible Markov chains, particularly in the context of induced graphs that are not complete. Once we have established these  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -error bounds, we can compute bounds on  E  [ T ] E delimited-[] T {\\mathbb{E}}[T] blackboard_E [ italic_T ]  and  var  ( T ) var T {\\mathrm{var}}(T) roman_var ( italic_T ) . This step involves mitigating the correlation between the terms   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  and  { Z i  j } ( i , j )  E subscript subscript Z i j i j E \\{Z_{ij}\\}_{(i,j)\\in{\\mathcal{E}}} { italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT ( italic_i , italic_j )  caligraphic_E end_POSTSUBSCRIPT  in  Eq.   24  as both of them share the same source of randomness. Broadly speaking, this is done by splitting the product of dependent terms into three parts (by utilizing the identity  a ^  b ^ = ( a ^  a )  ( b ^  b ) + ( a ^  a )  b + a  b ^ ^ a ^ b ^ a a ^ b b ^ a a b a ^ b \\hat{a}\\hat{b}=(\\hat{a}-a)(\\hat{b}-b)+(\\hat{a}-a)b+a\\hat{b} over^ start_ARG italic_a end_ARG over^ start_ARG italic_b end_ARG = ( over^ start_ARG italic_a end_ARG - italic_a ) ( over^ start_ARG italic_b end_ARG - italic_b ) + ( over^ start_ARG italic_a end_ARG - italic_a ) italic_b + italic_a over^ start_ARG italic_b end_ARG , where  a ^ ^ a \\hat{a} over^ start_ARG italic_a end_ARG  and  b ^ ^ b \\hat{b} over^ start_ARG italic_b end_ARG  are correlated estimators of  a a a italic_a  and  b b b italic_b ) and bounding each part using appropriate concentration inequalities. Moreover, in the case where the induced graph is complete, the analysis becomes considerably simpler. An instance of such simplification in the proofs arises through the utilization of bounds between contraction coefficients of  S S S italic_S  (see  Section   V-A  and  Lemma   3 ).",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n , the critical threshold defined in  Eq.   23  is upper bounded by",
            "The proof of  Proposition   4  can be gleaned from the proof of  Theorem   2  in  Section   V . In essence, the behavior in  Proposition   4  stems from the fact that the proof of  Lemma   7  in  Section   V-C 1  relies on a concentration inequality (see  Proposition   10 ) which, under the stronger assumption  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , allows us to avoid the poly-logarithmic factor in  Proposition   4  when establishing  Theorem   2 . However, if a standard matrix Bernstein inequality were employed for concentration, the special constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , defined in  Lemma   7 , would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . Then, the proof of  Proposition   4  would follow by using essentially the same logic as the proof of  Theorem   2  and observing that  Eq.   63  yields an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT . Moreover, in this regime, our decision rule returns the alternative hypothesis if and only if  T    log  n n  k T  n n k T\\geq\\frac{\\gamma\\sqrt{\\log n}}{nk} italic_T  divide start_ARG italic_ square-root start_ARG roman_log italic_n end_ARG end_ARG start_ARG italic_n italic_k end_ARG  for some appropriately chosen constant    \\gamma italic_ .",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold, and suppose that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT  and there exists a constant  c 4 > 0 subscript c 4 0 c_{4}>0 italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT > 0  such that the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } . Then, we have the following bounds:",
            "Theorem   3  established in  Section   V-D . It is worth mentioning that by  Assumption   4 , we have      =   ( 1 / n ) subscript norm   1 n \\|\\pi\\|_{\\infty}=\\Theta(1/n)  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT = roman_ ( 1 / italic_n ) , which causes the separation distance to scale like  O  ( 1 / n  k ) O 1 n k O(1/\\sqrt{nk}) italic_O ( 1 / square-root start_ARG italic_n italic_k end_ARG )  in order to achieve a minimax risk less than unity.",
            "In this section, we present an information-theoretic lower bound on the critical threshold for the hypothesis testing problem in  Eq.   19  for the special case of a complete induced graph  G G {\\mathcal{G}} caligraphic_G . Our lower bound demonstrates the minimax optimality of the scaling of the critical threshold provided in the upper bound in  Theorem   2  for complete induced graphs. (We will show in  Section   III-E  that pairwise comparison models on complete graphs can satisfy  Assumptions   1 ,  2 ,  3  and  4 .) As noted earlier, we assume that  k i  j = k subscript k i j k k_{ij}=k italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_k  for all  i , j  [ n ] i j delimited-[] n i,j\\in[n] italic_i , italic_j  [ italic_n ]  with  i = j i j i\\neq j italic_i = italic_j .",
            "Consider the hypothesis testing problem in  Eq.   19  and assume that the corresponding induced graph  G G {\\mathcal{G}} caligraphic_G  is a complete graph. Then, there exists a constant  c 8 > 0 subscript c 8 0 c_{8}>0 italic_c start_POSTSUBSCRIPT 8 end_POSTSUBSCRIPT > 0  such that the critical threshold defined in  Eq.   23  is lower bounded by",
            "The proof of  Theorem   4  is provided in  Section   VI-A . The proof uses the  Ingster-Suslina method  for constructing a lower bound on the critical threshold  [ 71 ] . This method is similar to the well-known  Le Cams method , but it establishes a minimax lower bound by considering a point and a mixture on the parameter space instead of just two points. (Although Le Cams method could also be used for this proof in principle, the Ingster-Suslina method greatly simplifies the calculations to bound TV distance in our setting.) Our proof constructs a perturbed family of pairwise comparison models from a fixed BTL model and utilizes the complete graph structure to compute both the stationary distribution and the separation metric     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  in closed form under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . We remark that due to our problem setting, our proof here is much simpler than and quite different to the technique developed in  [ 50 ] , where the separation distance is quantified for Eulerian graphs in terms of sums of TV distances. We leave the problem of determining minimax lower bounds for more general graph topologies satisfying  Assumptions   1 ,  2 ,  3  and  4  for future work. Finally, we also note that the bounds in  Theorems   2  and  4  portray that the    ( 1 / n  k )  1 n k \\Theta(1/\\sqrt{nk}) roman_ ( 1 / square-root start_ARG italic_n italic_k end_ARG )  scaling of the critical threshold is minimax optimal even if we took suprema over all induced graphs satisfying  Assumptions   1 ,  2 ,  3  and  4  inside the infimum in the definition of minimax risk in  Eq.   22 .",
            "In this section, we establish bounds on both the principal ratio and edge expansion for three distinct classes of graphs: complete graphs,  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs, and random graphs generated from Erdos-Renyi models. These three classes represent a few examples of graphs for which  Assumptions   2 ,  3  and  4  hold and the theoretical guarantees of our testing framework are valid for any pairwise comparison matrix  P P P italic_P  consistent with  Assumption   1 . In the first case, we assume that the induced graph is complete and pairwise comparisons among all pairs are observed. The second scenario involves  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs that are sufficiently dense (as explained later) and possess some degree of edge expansion. And the third case assumes the existence of a complete underlying pairwise comparison model consistent with  Assumption   1 , where comparisons between any pair  ( i , j ) i j (i,j) ( italic_i , italic_j )  (and  ( j , i ) j i (j,i) ( italic_j , italic_i ) ), for  i > j i j i>j italic_i > italic_j , are observed independently with probability  p p p italic_p . We show that there exists a constant  c p > 0 subscript c p 0 \\mathsf{c}_{p}>0 sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT > 0  such that as long as  n  p  c p  log  n n p subscript c p n np\\geq\\mathsf{c}_{p}\\log n italic_n italic_p  sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT roman_log italic_n , the Erdos-Renyi pairwise comparison model satisfies  Assumptions   2 ,  3  and  4  with high probability. We also note that much of our technical analysis in each of the three scenarios lies in analyzing the principal ratio.",
            "where we have utilized the fact that for complete graphs,   ~  ( G ) = n 2 ~ italic- G n 2 \\tilde{\\phi}({\\mathcal{G}})=\\frac{n}{2} over~ start_ARG italic_ end_ARG ( caligraphic_G ) = divide start_ARG italic_n end_ARG start_ARG 2 end_ARG . Alternatively, for complete graphs, we can obtain tighter upper bounds on the critical threshold (i.e., with better implicit dependence on    \\delta italic_ ) by directly bounding the second largest singular value   2  ( R ) subscript  2 R \\sigma_{2}(R) italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( italic_R )  of the DTM  R R R italic_R  (see  Lemma   3  in  Section   V-A ) instead of relying on expansion properties and  Cheeger inequalities  (i.e., using  Assumption   2  and  Lemma   4  in  Section   V-A ). This alternative approach leverages bounds between contraction coefficients, specifically, in terms of the  Dobrushin contraction coefficient  for TV distance; see  Section   V-A  for details. Additionally, note that a complete graph trivially satisfies  Assumption   3 . Thus, for the case of complete graphs, we have shown that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4 . This allows us to test whether data generated from any pairwise comparison matrix  P P P italic_P  corresponding to a complete induced graph satisfying  Assumption   1  conforms to an underlying BTL model. However, the testing procedure for a complete graph requires  n  ( n  1 )  k n n 1 k n(n-1)k italic_n ( italic_n - 1 ) italic_k  samples.",
            "The proof is provided in  Section   A-B . This result generalizes the result in  [ 72 , Theorem 3] , and illustrates that  Assumption   4  holds with  h = c ~  ( a ) /  5 h ~ c a superscript  5 h=\\tilde{c}(a)/\\delta^{5} italic_h = over~ start_ARG italic_c end_ARG ( italic_a ) / italic_ start_POSTSUPERSCRIPT 5 end_POSTSUPERSCRIPT . The assumption,  | E  ( S , T ) |  a  | S |  | T | E S T a S T |\\mathcal{E}(\\mathcal{S},\\mathcal{T})|\\geq a|\\mathcal{S}||\\mathcal{T}| | caligraphic_E ( caligraphic_S , caligraphic_T ) |  italic_a | caligraphic_S | | caligraphic_T |  for all disjoint subsets  S , T S T \\mathcal{S},\\mathcal{T} caligraphic_S , caligraphic_T  with cardinality    ( n )  n \\Theta(n) roman_ ( italic_n ) , is typically satisfied by  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs   G G {\\mathcal{G}} caligraphic_G  with  d ~ =   n ~ d  n \\tilde{d}=\\ \\nu n over~ start_ARG italic_d end_ARG = italic_ italic_n  and   2  ( G )  ( 1   ~ )  d ~ subscript  2 G 1 ~  ~ d \\lambda_{2}({\\mathcal{G}})\\leq(1-\\tilde{\\nu})\\tilde{d} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  ( 1 - over~ start_ARG italic_ end_ARG ) over~ start_ARG italic_d end_ARG  for some constants   ,  ~  ( 0 , 1 ]  ~  0 1 \\nu,\\tilde{\\nu}\\in(0,1] italic_ , over~ start_ARG italic_ end_ARG  ( 0 , 1 ] , where   2  ( G ) subscript  2 G \\lambda_{2}({\\mathcal{G}}) italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  denotes the second largest eigenvalue modulus of the adjacency matrix of  G G {\\mathcal{G}} caligraphic_G ; we refer readers to  [ 73 ]  for the definition of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs. We also refer the readers to  Section   A-C  for details regarding the existence of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs with  d ~ =   n ~ d  n \\tilde{d}=\\nu n over~ start_ARG italic_d end_ARG = italic_ italic_n  and   2  ( G )  ( 1   ~ )  d ~ , subscript  2 G 1 ~  ~ d \\lambda_{2}({\\mathcal{G}})\\leq(1-\\tilde{\\nu})\\tilde{d}, italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  ( 1 - over~ start_ARG italic_ end_ARG ) over~ start_ARG italic_d end_ARG ,  and why they satisfy the assumption in  Proposition   6 . Furthermore, pairwise comparison models corresponding to such graphs also satisfy  Assumption   2  as explained in  Section   A-C , cf.  [ 74 , Theorem 9.2.1] , and trivially satisfy  Assumption   3 . Thus, for the case of dense  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs with appropriate expansion properties, we have again established that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4 . This permits us to test whether data generated from any pairwise comparison matrix  P P P italic_P  corresponding to a dense  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graph satisfying  Assumption   1  and certain expansion properties conforms to an underlying BTL model. Moreover, the denseness requirement  d ~ =   ( n ) ~ d  n \\tilde{d}=\\Theta(n) over~ start_ARG italic_d end_ARG = roman_ ( italic_n )  implies that the testing procedure requires    ( n 2  k )  superscript n 2 k \\Theta(n^{2}k) roman_ ( italic_n start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k )  samples in order to satisfy the various assumptions. The next setting establishes the utility of our testing procedure for sparse induced graphs.",
            "Suppose that the induced graph  G G \\mathcal{G} caligraphic_G  is an Erdos-Renyi random graph with edges selected independently with probability  p p p italic_p , and let  d min subscript d d_{\\min} italic_d start_POSTSUBSCRIPT roman_min end_POSTSUBSCRIPT  and  d max subscript d d_{\\max} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  be the minimum and maximum degrees as defined in  Assumption   3 . If  p  c 0  log  n n p subscript c 0 n n p\\geq\\frac{c_{0}\\log n}{n} italic_p  divide start_ARG italic_c start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_n end_ARG  for some sufficiently large constant  c 0 > 0 subscript c 0 0 c_{0}>0 italic_c start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT > 0 , then the event  A 0 subscript A 0 \\mathcal{A}_{0} caligraphic_A start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT , defined as",
            "The proof of  Proposition   8  is provided in  Section   A-D . In particular,  Proposition   8  illustrates that  Assumption   4  holds with  h = 7 /  2 h 7 superscript  2 h=7/\\delta^{2} italic_h = 7 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  with high probability. Moreover, random graphs are known to have nice expansion properties  [ 75 , Theorem 2.8]  (also see  [ 76 ] ). Indeed, using  [ 77 , Equation (11)] , we have that for an Erdos-Renyi random graph,   ~  ( G )  1 4  n  p ~ italic- G 1 4 n p \\tilde{\\phi}({\\mathcal{G}})\\geq\\frac{1}{4}np over~ start_ARG italic_ end_ARG ( caligraphic_G )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG italic_n italic_p  with high probability, thereby showing that the pairwise comparison matrix  P P P italic_P  also satisfies  Assumption   2  with   =  3 / ( 12  7  ( 1 +  ) )  superscript  3  12 7 1  \\xi=\\delta^{3}/(12\\cdot 7\\cdot(1+\\delta)) italic_ = italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT / ( 12  7  ( 1 + italic_ ) )  with high probability.  Proposition   7  also implies that an Erdos-Renyi random graph satisfies  Assumption   3  with high probability. Thus, for the case of Erdos-Renyi random graphs, we have again demonstrated that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4  with high probability, as required for theoretical guarantees on our testing procedure. Notably, in this case, the testing procedure requires  O  ( k  n  log  n ) O k n n O(kn\\log n) italic_O ( italic_k italic_n roman_log italic_n )  pairwise comparisons, which matches the total number of observations needed for consistently estimating the parameters of the BTL model in  [ 11 ] .",
            "We prove  Propositions   1 ,  3 ,  2  and  1  in this section. Throughout this proof, we employ a concise notation by using overlapping labels (e.g.,  c , c ~ , c 1 , c 2 , c  , c ^ , ... c ~ c subscript c 1 subscript c 2 superscript c  ^ c ... c,\\tilde{c},c_{1},c_{2},c^{\\prime},\\hat{c},\\dots italic_c , over~ start_ARG italic_c end_ARG , italic_c start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT , over^ start_ARG italic_c end_ARG , ... ) to denote various constants. To avoid ambiguity, we explicitly reserve the notation  c  , c  , c  subscript c  subscript c  subscript c  c_{\\alpha},c_{\\beta},c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  for specially defined constants in  Lemma   7  and the subsequent proof.",
            "If both  Eqs.   30  and  31  are true, then we can use the following argument to complete the proof. Let  c 0 = min  { c , c  } subscript c 0 c superscript c  c_{0}=\\min\\{c,c^{\\prime}\\} italic_c start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = roman_min { italic_c , italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT } , then we have:",
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows since   A  B  F   n  ( A )   B  F subscript norm A B F subscript  n A subscript norm B F \\|AB\\|_{\\mathrm{F}}\\geq\\sigma_{n}(A)\\|B\\|_{\\mathrm{F}}  italic_A italic_B  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT  italic_ start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT ( italic_A )  italic_B  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT  and   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  follows from  Proposition   3  and sub-additivity of square-root.",
            "Next, we will prove  Eq.   30 . Note that",
            "Now we will prove  Eq.   31 . Observe that",
            "This is because if  Eq.   33  is true, then",
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows since   B  BTL h subscript  B subscript BTL h \\pi_{B}\\in\\mathsf{BTL}_{h} italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT  sansserif_BTL start_POSTSUBSCRIPT italic_h end_POSTSUBSCRIPT , hence   B , i    B   / h subscript  B i subscript norm subscript  B h \\pi_{B,i}\\geq\\|\\pi_{B}\\|_{\\infty}/h italic_ start_POSTSUBSCRIPT italic_B , italic_i end_POSTSUBSCRIPT   italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT / italic_h  which implies    B    h n subscript norm subscript  B h n \\|\\pi_{B}\\|_{\\infty}\\leq\\frac{h}{n}  italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  divide start_ARG italic_h end_ARG start_ARG italic_n end_ARG ,   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  follows from our assumption in  Eq.   33  (which we will prove next) and   3 subscript  3 \\zeta_{3} italic_ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  follows since   min      / h subscript  subscript norm  h \\pi_{\\min}\\geq\\|\\pi\\|_{\\infty}/h italic_ start_POSTSUBSCRIPT roman_min end_POSTSUBSCRIPT   italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT / italic_h  and  n       1 n subscript norm  1 n\\|\\pi\\|_{\\infty}\\geq 1 italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  1 .",
            "Now it remains to prove  Eq.   33 . To do so, observe that",
            "and let   B   diag  (  B  )  superscript subscript  B diag superscript subscript  B {\\Pi_{B}^{*}}\\triangleq\\operatorname{{diag}}({\\pi_{B}^{*}}) roman_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  roman_diag ( italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT ) . To prove  Eq.   33 , we will show that the following ratio is upper bounded by a constant.",
            "Note that  R R R italic_R  is symmetric and is in fact a positive semidefinite matrix (as  u T  R  u =  ( i , j )  E ( u i  p i  j  u j  p j  i ) 2 superscript u T R u subscript i j E superscript subscript u i subscript p i j subscript u j subscript p j i 2 u^{\\mathrm{T}}Ru=\\sum_{(i,j)\\in{\\mathcal{E}}}(u_{i}p_{ij}-u_{j}p_{ji})^{2} italic_u start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT italic_R italic_u =  start_POSTSUBSCRIPT ( italic_i , italic_j )  caligraphic_E end_POSTSUBSCRIPT ( italic_u start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT - italic_u start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_p start_POSTSUBSCRIPT italic_j italic_i end_POSTSUBSCRIPT ) start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ). Therefore, all its eigenvalues are non-negative. Moreover, when the canonical Markov matrix corresponding to  P P P italic_P  is not reversible,  R R R italic_R  is, in fact, positive-definite. Additionally, when the canonical Markov matrix corresponding to  P P P italic_P  is reversible, then  Eq.   33  trivially holds as both sides of the inequality are zero. Therefore, our main focus will be on the case when the matrix  P P P italic_P  is not reversible. First, to begin, let us focus on the denominator term   B  T  R   B  superscript subscript  B superscript T R superscript subscript  B \\pi_{B}^{*^{\\mathrm{T}}}R\\pi_{B}^{*} italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT italic_R italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT . Recall that   B  superscript subscript  B {\\pi_{B}^{*}} italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  is the solution of the following optimization problem:",
            "This is because the optimality condition implies that   B  T =  B  T  ( I n +    1 n  1 n T  R n ) superscript subscript  B superscript T superscript subscript  B superscript T subscript I n superscript  subscript 1 n superscript subscript 1 n T R n \\pi_{B}^{*^{\\mathrm{T}}}=\\pi_{B}^{*^{\\mathrm{T}}}(I_{n}+\\frac{\\lambda^{*}{% \\mathbf{1}}_{n}{\\mathbf{1}}_{n}^{\\mathrm{T}}-R}{n}) italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT = italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_I start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT + divide start_ARG italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT - italic_R end_ARG start_ARG italic_n end_ARG ) . Moreover, note that each entry of  S B ,   0 subscript S B  0 S_{B,\\lambda}\\geq 0 italic_S start_POSTSUBSCRIPT italic_B , italic_ end_POSTSUBSCRIPT  0  for    0  0 \\lambda\\geq 0 italic_  0 . Now, consider the numerator term in  Eq.   34 , which can be expressed as",
            "where  S B , 0 subscript S B 0 S_{B,0} italic_S start_POSTSUBSCRIPT italic_B , 0 end_POSTSUBSCRIPT  is the matrix in  Eq.   37  with   = 0  0 \\lambda=0 italic_ = 0 . Now consider the  i i i italic_i th term of the   B  T  ( S  S B , 0 ) superscript superscript subscript  B T S subscript S B 0 {\\pi_{B}^{*}}^{\\mathrm{T}}(S-S_{B,0}) italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ( italic_S - italic_S start_POSTSUBSCRIPT italic_B , 0 end_POSTSUBSCRIPT )  as",
            "Thus, from  Eq.   38  and the fact that   max  ( R )  2  d max subscript  R 2 subscript d \\lambda_{\\max}(R)\\leq 2d_{\\max} italic_ start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT ( italic_R )  2 italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT , there exists a constant  c c c italic_c  such that we have",
            "Therefore, using  Eqs.   36  and  42 , the ratio in  Eq.   34  is upper bounded as",
            "This section is devoted to the proofs of various lemmata and existing results needed to prove  Theorems   2  and  3 . The main portion of the proof of  Theorem   2  is presented in  Section   V-B  and proof of  Theorem   3  is presented in  Section   V-D . But first, we need to establish some key results discussed in the following section.",
            "The proof of  Lemma   2  is quite similar to  [ 30 ]  but requires slight modifications and is provided in  Section   V-C 3  for completeness.",
            "Combining  Lemma   2  and  Lemma   3  we obtain the following corollary.",
            "Clearly, the condition in ( 63 ) is satisfied for sufficiently a large constant  a 0 subscript a 0 a_{0} italic_a start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  which gives",
            "Thus, for sufficiently large constant  a 0 subscript a 0 a_{0} italic_a start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  we have demonstrated that the sum of type  \\Romannum 1 and type  \\Romannum 2 errors is bounded by  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Combining this result with the definition of the critical threshold in  Eq.   23 , we obtain the following bound on   c subscript  c \\varepsilon_{\\mathsf{c}} italic_ start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT :",
            "We remark that if a standard matrix Bernstein inequality  [ 80 ]  were used in the proof of  Lemma   7 , the constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . From  Eq.   63 , we would get an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT , thus proving  Proposition   4 .",
            "Substituting the above bound in  Eq.   73  we obtain the bound in  Eq.   72  for some constant  c ~ 2 subscript ~ c 2 \\tilde{c}_{2} over~ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT .",
            "First, we begin by deriving bounds on the probability of type  \\Romannum 1 error. Similar to the proof of  Theorem   2 , we split the test statistic  T T T italic_T  as  T = T 1 + T 2 + T 3 T subscript T 1 subscript T 2 subscript T 3 T=T_{1}+T_{2}+T_{3} italic_T = italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , where  T 1 , T 2 subscript T 1 subscript T 2 T_{1},T_{2} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  are defined in  Eqs.   53 ,  54  and  55 . To calculate the  P  ( T  t ) P T t {\\mathbb{P}}(T\\geq t) blackboard_P ( italic_T  italic_t )  for  t  0 t 0 t\\geq 0 italic_t  0 , we use the following inequality",
            "By our construction of pairwise comparison matrices both  p i  j , p i  j  subscript p i j subscript superscript p  i j p_{ij},p^{\\prime}_{ij} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT , italic_p start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  take values in set  { 1 2 , 1 2 +  } 1 2 1 2  \\{\\frac{1}{2},\\frac{1}{2}+\\eta\\} { divide start_ARG 1 end_ARG start_ARG 2 end_ARG , divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_ }  if  j  i j i j\\geq i italic_j  italic_i  (and  { 1 2 , 1 2   } 1 2 1 2  \\{\\frac{1}{2},\\frac{1}{2}-\\eta\\} { divide start_ARG 1 end_ARG start_ARG 2 end_ARG , divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ }  otherwise). Furthermore, whenever either  p i  j subscript p i j p_{ij} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  or  p i  j  superscript subscript p i j  p_{ij}^{\\prime} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  equals  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG , we have  f  ( p i  j , p i  j  ) = 1 f subscript p i j subscript superscript p  i j 1 f(p_{ij},p^{\\prime}_{ij})=1 italic_f ( italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT , italic_p start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ) = 1 . Additionally, by  Eq.   93  we have  f  ( 1 2   , 1 2   ) = f  ( 1 2 +  , 1 2 +  ) f 1 2  1 2  f 1 2  1 2  f(\\frac{1}{2}-\\eta,\\frac{1}{2}-\\eta)=f(\\frac{1}{2}+\\eta,\\frac{1}{2}+\\eta) italic_f ( divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ , divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ ) = italic_f ( divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_ , divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_ ) . Let a random variable  B B B italic_B  denote the number of occurrences where  p i  j = p i  j  = 1 2 +  subscript p i j superscript subscript p i j  1 2  p_{ij}=p_{ij}^{\\prime}=\\frac{1}{2}+\\eta italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT = divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_  in randomly drawn permutation    \\theta italic_  and    superscript   \\theta^{\\prime} italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  (or equivalently,  p i  j = p i  j  = 1 2   subscript p i j superscript subscript p i j  1 2  p_{ij}=p_{ij}^{\\prime}=\\frac{1}{2}-\\eta italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT = divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ ). Consequently, we obtain",
            "In this section, we will perform several experiments on the synthetically generated datasets to verify our theoretical results and the effect of the shuffling techniques discussed above under hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . For the first experiment, we will use the same construction for the pairwise comparison matrix  P P P italic_P  that we utilized in the proof of  Theorem   4  under the null and alternate hypothesis, which are presented in  Eq.   86  and  Eq.   87 . We set the number of pairwise comparisons per pair of agents  k = 12 k 12 k=12 italic_k = 12 , the number of agents  n n n italic_n  is linearly increased from  32 32 32 32  to  128 128 128 128  in  12 12 12 12  equally spaced steps, and the perturbation    \\eta italic_  in ( 88 ) is increased from  0.16 0.16 0.16 0.16  to  0.32 0.32 0.32 0.32  in  12 12 12 12  equally spaced steps. For each value of    \\eta italic_  and  n n n italic_n , simulations are performed by generating  Z i  j  Bin  ( k , p i  j ) similar-to subscript Z i j Bin k subscript p i j Z_{ij}\\sim\\text{Bin}(k,p_{ij}) italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  Bin ( italic_k , italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  for  i = j i j i\\neq j italic_i = italic_j  for both hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , and the corresponding value of values of test statistic  T T T italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and  empirical minimax risk  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  is estimated. The threshold used for the decision rule is set to   2 / n superscript  2 n \\eta^{2}/n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT / italic_n .  Fig.   3  plots the empirical average of  n  T  n T n\\cdot T italic_n  italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  averaged over  250 250 250 250  iterations. Note that for a fixed value of    \\eta italic_ , the values of  n  T  n T n\\cdot T italic_n  italic_T  (under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ) are roughly constant as  n n n italic_n  increases, and the values of  n  T  n T n\\cdot T italic_n  italic_T  increase as    \\eta italic_  increases.  Fig.   3  plots the behavior of  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  for each value of    \\eta italic_  and  n n n italic_n . Observe that  1 R ^ m > 1 / 2 subscript 1 subscript ^ R m 1 2 {\\mathbbm{1}}_{\\hat{\\mathcal{R}}_{\\mathsf{m}}>1/2} blackboard_1 start_POSTSUBSCRIPT over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT > 1 / 2 end_POSTSUBSCRIPT  is largely independent of  n n n italic_n , which is consistent with our derivation in  Section   VI-A , where we have shown that if  8   2  k  c ~ 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c} 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG  then  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Thus, once    \\eta italic_  exceeds a particular threshold  R m subscript R m \\mathcal{R}_{\\mathsf{m}} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  exceeds  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG  for all values of  n n n italic_n .",
            "Since  S  superscript S S^{*} italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  is the canonical Markov matrix corresponding to a complete graph, we get   S   1 n    T     1  1   6 subscript norm superscript S subscript 1 n superscript  superscript T superscript  superscript 1 1  6 \\|S^{*}-{\\mathbf{1}}_{n}\\pi^{*^{\\mathrm{T}}}\\|_{\\pi^{*^{-1}}}\\leq 1-\\frac{% \\delta}{6}  italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT - bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT end_POSTSUBSCRIPT  1 - divide start_ARG italic_ end_ARG start_ARG 6 end_ARG  by  Lemma   3 . We provide a high probability upper bound on   S  S      1 subscript norm S superscript S superscript  superscript 1 \\|{S}-S^{*}\\|_{\\pi^{*^{-1}}}  italic_S - italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT end_POSTSUBSCRIPT  in the subsampled scenario in  Lemma   13 . Combining these two bounds, we obtain that the denominator term is lower bounded by   / 12  12 \\delta/12 italic_ / 12 . Now, it remains to bound    m T  ( S m  S  )     1 subscript norm superscript  superscript m T superscript S m superscript S superscript  superscript 1 \\|{\\pi}^{m^{\\mathrm{T}}}({S}^{m}-{S^{*}})\\|_{\\pi^{*^{-1}}}  italic_ start_POSTSUPERSCRIPT italic_m start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT - italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT end_POSTSUBSCRIPT . For  j = m j m j\\neq m italic_j = italic_m , the  j j j italic_j th entry of   m T  ( S m  S ) superscript  superscript m T superscript S m S {\\pi}^{m^{\\mathrm{T}}}({S}^{m}-{S}) italic_ start_POSTSUPERSCRIPT italic_m start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT - italic_S )  is given by",
            "Utilizing  Lemma   13  and using the same argument as in  Section   B-C  yields, we obtain",
            "and  0 0  otherwise. Therefore,    ( A ^ )  1 4  k  ^ A 1 4 k \\nu(\\hat{A})\\leq\\frac{1}{\\sqrt{4k}} italic_ ( over^ start_ARG italic_A end_ARG )  divide start_ARG 1 end_ARG start_ARG square-root start_ARG 4 italic_k end_ARG end_ARG . Finally,  R  ( A ^ )  1 k R ^ A 1 k R(\\hat{A})\\leq\\frac{1}{k} italic_R ( over^ start_ARG italic_A end_ARG )  divide start_ARG 1 end_ARG start_ARG italic_k end_ARG  as  | V i  j , m |  1 k superscript V i j m 1 k \\left|V^{ij,m}\\right|\\leq\\frac{1}{k} | italic_V start_POSTSUPERSCRIPT italic_i italic_j , italic_m end_POSTSUPERSCRIPT |  divide start_ARG 1 end_ARG start_ARG italic_k end_ARG . Substituting, the above bounds in  Eq.   113  proves the lemma.",
            "Therefore, the proof follows by plugging in the bounds into  Eq.   113 ."
        ]
    },
    "id_table_4": {
        "caption": "",
        "table": "S3.E19",
        "footnotes": [],
        "references": [
            "We devise a notion of separation distance that allows us to easily quantify the deviation of a general pairwise comparison model from the class of all BTL models. Under some regularity conditions, we show in  Theorem   1  that this measure is always within constant factors of the Frobenius norm distance between a general pairwise comparison model and the class of BTL models. We then formulate our hypothesis testing problem for BTL models in a minimax sense using this separation distance and also introduce a test statistic in  Eq.   24  based on it.",
            "We also provide an information-theoretic lower bound on the critical threshold for complete induced observation graphs in  Theorem   4 , thereby demonstrating the minimax optimal scaling of the critical threshold (up to constant factors).",
            "There exists a constant  h > 0 h 0 h>0 italic_h > 0  such that the principal ratio  h  subscript h  h_{\\pi} italic_h start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  is bounded: 1 1 1 The constants    \\xi italic_ ,    \\kappa italic_ , and  h h h italic_h  in  Assumptions   2 ,  3  and  4  do not depend on  n n n italic_n .",
            "It is worth mentioning that coupled with  Assumptions   1  and  4 ,  Assumption   2  can be imposed by lower bounding the canonical notion of edge expansion of  G G {\\mathcal{G}} caligraphic_G . Indeed, observe that",
            "automatically satisfy both  Assumptions   1  and  4  (with  h =   1 h superscript  1 h=\\delta^{-1} italic_h = italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT ). 2 2 2 We refer readers to  Section   IV-A  for an explicit expression for the stationary distribution in BTL models.  Furthermore, if the underlying graph  G G {\\mathcal{G}} caligraphic_G  exhibits significant edge expansion in the canonical sense, i.e.,   ~  ( G )   ~  d ~ italic- G ~ italic- d \\tilde{\\phi}({\\mathcal{G}})\\geq\\tilde{\\epsilon}d over~ start_ARG italic_ end_ARG ( caligraphic_G )  over~ start_ARG italic_ end_ARG italic_d  for some constant   ~ > 0 ~ italic- 0 \\tilde{\\epsilon}>0 over~ start_ARG italic_ end_ARG > 0 , and adheres to  Assumption   3 , then all four assumptions are simultaneously satisfied for all BTL models with bounded condition number. For general pairwise comparison models, we will present several classes of graphs in  Section   III-E , e.g., complete graphs, dense regular graphs, and Erdos-Renyi random graphs, where any pairwise comparison model satisfying  Assumption   1  will also satisfy  Assumptions   2 ,  3  and  4  (with high probability, where appropriate).",
            "The proof of  Proposition   3  is provided in  Section   IV-C . (We note that since   i > 0 subscript  i 0 \\pi_{i}>0 italic_ start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT > 0  for all  i  [ n ] i delimited-[] n i\\in[n] italic_i  [ italic_n ] , the norm       1 , F \\|\\cdot\\|_{\\pi^{-1},\\mathrm{F}}    start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT , roman_F end_POSTSUBSCRIPT  is well-defined.) Using  Proposition   3 , we show in  Theorem   1  that if a pairwise comparison model  P P P italic_P  satisfies  Assumptions   1 ,  2 ,  3  and  4 , then the quantity     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  is always within constant factors of the Frobenius-norm-distance between  P P P italic_P  and the set of BTL models (or more precisely, the set  BTL h subscript BTL h \\mathsf{BTL}_{h} sansserif_BTL start_POSTSUBSCRIPT italic_h end_POSTSUBSCRIPT  defined below). Hence,     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  captures a natural notion of separation distance in this setting.",
            "Suppose the pairwise comparison matrix  P P P italic_P  and the induced graph  G G {\\mathcal{G}} caligraphic_G  satisfy  Assumptions   1 ,  2 ,  3  and  4 . Then, there exist constants  c 1 , c 2 > 0 subscript c 1 subscript c 2 0 c_{1},c_{2}>0 italic_c start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT > 0  (independent of  n n n italic_n ) such that",
            "For a given tolerance parameter   > 0 italic- 0 \\epsilon>0 italic_ > 0  and a pairwise comparison model  P P P italic_P  satisfying  Assumptions   1 ,  2 ,  3  and  4 , we can formulate the hypothesis testing problem in ( 5 ) as:",
            "Let    \\Phi roman_  denote a  decision rule  or  hypothesis test  that maps the consolidated observations  Z Z {\\mathcal{Z}} caligraphic_Z  to  { 0 , 1 } 0 1 \\{0,1\\} { 0 , 1 } , where  0 0  represents the null hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  1 1 1 1  represents the alternative hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . Let  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  denote the probability distributions of the observations  Z Z {\\mathcal{Z}} caligraphic_Z  under  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , respectively. Throughout this paper, we will use  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  when we need to specify a hypothesis, and  P P {\\mathbb{P}} blackboard_P  when a probability expression holds for both hypotheses. Similarly,  E H 0 subscript E subscript H 0 {\\mathbb{E}}_{H_{0}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ,  E H 1 subscript E subscript H 1 {\\mathbb{E}}_{H_{1}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , and  E E {\\mathbb{E}} blackboard_E  will represent the corresponding expectation operators. Furthermore, for a fixed induced graph  G G {\\mathcal{G}} caligraphic_G  satisfying  Assumption   3 , let  M 0 subscript M 0 {\\mathcal{M}}_{0} caligraphic_M start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  M  (  ) M italic- {\\mathcal{M}}(\\epsilon) caligraphic_M ( italic_ )  denote the sets of pairwise comparison models that satisfy the null and alternative hypotheses, respectively, in ( 19 ) along with  Assumptions   1 ,  2  and  4 :",
            "To understand the test statistic  T T T italic_T , notice that if were to set   ^ =  ^   \\hat{\\pi}=\\pi over^ start_ARG italic_ end_ARG = italic_  and assume that  k i  j  2 subscript k i j 2 k_{ij}\\geq 2 italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  2  for all  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E  with  i = j i j i\\neq j italic_i = italic_j  in  Eq.   24  and consider the hypothetical statistic",
            "Lastly, we remark that testing for a single BTL model can be conducted using a   2 superscript  2 \\chi^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -type goodness-of-fit test  [ 69 ] , and testing for a class of BTL models could be attempted using a composite   2 superscript  2 \\chi^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -test  [ 70 ] . However, performing sharp minimax analysis on the corresponding   2 superscript  2 \\chi^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -statistics poses challenges. Therefore, our focus lies on the proposed test statistic  T T T italic_T  in  Eq.   24 . Notably, we demonstrate minimax optimality of the critical threshold for complete graphs, thereby underscoring the effectiveness of considering our proposed test.",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , the critical threshold defined in  Eq.   23  is upper bounded by",
            "The proof is provided in  Section   V . The proof has several essential steps. Among these, the most important step involves computing  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -error bounds (see  Lemma   6 ) for the estimated BTL parameters   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  when the data is generated by a general pairwise comparison model, which is not necessarily BTL (i.e., under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ). The derivation of these error bounds requires us to analyze the second largest singular values of DTMs corresponding to non-reversible Markov chains, particularly in the context of induced graphs that are not complete. Once we have established these  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -error bounds, we can compute bounds on  E  [ T ] E delimited-[] T {\\mathbb{E}}[T] blackboard_E [ italic_T ]  and  var  ( T ) var T {\\mathrm{var}}(T) roman_var ( italic_T ) . This step involves mitigating the correlation between the terms   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  and  { Z i  j } ( i , j )  E subscript subscript Z i j i j E \\{Z_{ij}\\}_{(i,j)\\in{\\mathcal{E}}} { italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT ( italic_i , italic_j )  caligraphic_E end_POSTSUBSCRIPT  in  Eq.   24  as both of them share the same source of randomness. Broadly speaking, this is done by splitting the product of dependent terms into three parts (by utilizing the identity  a ^  b ^ = ( a ^  a )  ( b ^  b ) + ( a ^  a )  b + a  b ^ ^ a ^ b ^ a a ^ b b ^ a a b a ^ b \\hat{a}\\hat{b}=(\\hat{a}-a)(\\hat{b}-b)+(\\hat{a}-a)b+a\\hat{b} over^ start_ARG italic_a end_ARG over^ start_ARG italic_b end_ARG = ( over^ start_ARG italic_a end_ARG - italic_a ) ( over^ start_ARG italic_b end_ARG - italic_b ) + ( over^ start_ARG italic_a end_ARG - italic_a ) italic_b + italic_a over^ start_ARG italic_b end_ARG , where  a ^ ^ a \\hat{a} over^ start_ARG italic_a end_ARG  and  b ^ ^ b \\hat{b} over^ start_ARG italic_b end_ARG  are correlated estimators of  a a a italic_a  and  b b b italic_b ) and bounding each part using appropriate concentration inequalities. Moreover, in the case where the induced graph is complete, the analysis becomes considerably simpler. An instance of such simplification in the proofs arises through the utilization of bounds between contraction coefficients of  S S S italic_S  (see  Section   V-A  and  Lemma   3 ).",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n , the critical threshold defined in  Eq.   23  is upper bounded by",
            "The proof of  Proposition   4  can be gleaned from the proof of  Theorem   2  in  Section   V . In essence, the behavior in  Proposition   4  stems from the fact that the proof of  Lemma   7  in  Section   V-C 1  relies on a concentration inequality (see  Proposition   10 ) which, under the stronger assumption  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , allows us to avoid the poly-logarithmic factor in  Proposition   4  when establishing  Theorem   2 . However, if a standard matrix Bernstein inequality were employed for concentration, the special constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , defined in  Lemma   7 , would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . Then, the proof of  Proposition   4  would follow by using essentially the same logic as the proof of  Theorem   2  and observing that  Eq.   63  yields an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT . Moreover, in this regime, our decision rule returns the alternative hypothesis if and only if  T    log  n n  k T  n n k T\\geq\\frac{\\gamma\\sqrt{\\log n}}{nk} italic_T  divide start_ARG italic_ square-root start_ARG roman_log italic_n end_ARG end_ARG start_ARG italic_n italic_k end_ARG  for some appropriately chosen constant    \\gamma italic_ .",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold, and suppose that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT  and there exists a constant  c 4 > 0 subscript c 4 0 c_{4}>0 italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT > 0  such that the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } . Then, we have the following bounds:",
            "Theorem   3  established in  Section   V-D . It is worth mentioning that by  Assumption   4 , we have      =   ( 1 / n ) subscript norm   1 n \\|\\pi\\|_{\\infty}=\\Theta(1/n)  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT = roman_ ( 1 / italic_n ) , which causes the separation distance to scale like  O  ( 1 / n  k ) O 1 n k O(1/\\sqrt{nk}) italic_O ( 1 / square-root start_ARG italic_n italic_k end_ARG )  in order to achieve a minimax risk less than unity.",
            "In this section, we present an information-theoretic lower bound on the critical threshold for the hypothesis testing problem in  Eq.   19  for the special case of a complete induced graph  G G {\\mathcal{G}} caligraphic_G . Our lower bound demonstrates the minimax optimality of the scaling of the critical threshold provided in the upper bound in  Theorem   2  for complete induced graphs. (We will show in  Section   III-E  that pairwise comparison models on complete graphs can satisfy  Assumptions   1 ,  2 ,  3  and  4 .) As noted earlier, we assume that  k i  j = k subscript k i j k k_{ij}=k italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_k  for all  i , j  [ n ] i j delimited-[] n i,j\\in[n] italic_i , italic_j  [ italic_n ]  with  i = j i j i\\neq j italic_i = italic_j .",
            "The proof of  Theorem   4  is provided in  Section   VI-A . The proof uses the  Ingster-Suslina method  for constructing a lower bound on the critical threshold  [ 71 ] . This method is similar to the well-known  Le Cams method , but it establishes a minimax lower bound by considering a point and a mixture on the parameter space instead of just two points. (Although Le Cams method could also be used for this proof in principle, the Ingster-Suslina method greatly simplifies the calculations to bound TV distance in our setting.) Our proof constructs a perturbed family of pairwise comparison models from a fixed BTL model and utilizes the complete graph structure to compute both the stationary distribution and the separation metric     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  in closed form under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . We remark that due to our problem setting, our proof here is much simpler than and quite different to the technique developed in  [ 50 ] , where the separation distance is quantified for Eulerian graphs in terms of sums of TV distances. We leave the problem of determining minimax lower bounds for more general graph topologies satisfying  Assumptions   1 ,  2 ,  3  and  4  for future work. Finally, we also note that the bounds in  Theorems   2  and  4  portray that the    ( 1 / n  k )  1 n k \\Theta(1/\\sqrt{nk}) roman_ ( 1 / square-root start_ARG italic_n italic_k end_ARG )  scaling of the critical threshold is minimax optimal even if we took suprema over all induced graphs satisfying  Assumptions   1 ,  2 ,  3  and  4  inside the infimum in the definition of minimax risk in  Eq.   22 .",
            "In this section, we establish bounds on both the principal ratio and edge expansion for three distinct classes of graphs: complete graphs,  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs, and random graphs generated from Erdos-Renyi models. These three classes represent a few examples of graphs for which  Assumptions   2 ,  3  and  4  hold and the theoretical guarantees of our testing framework are valid for any pairwise comparison matrix  P P P italic_P  consistent with  Assumption   1 . In the first case, we assume that the induced graph is complete and pairwise comparisons among all pairs are observed. The second scenario involves  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs that are sufficiently dense (as explained later) and possess some degree of edge expansion. And the third case assumes the existence of a complete underlying pairwise comparison model consistent with  Assumption   1 , where comparisons between any pair  ( i , j ) i j (i,j) ( italic_i , italic_j )  (and  ( j , i ) j i (j,i) ( italic_j , italic_i ) ), for  i > j i j i>j italic_i > italic_j , are observed independently with probability  p p p italic_p . We show that there exists a constant  c p > 0 subscript c p 0 \\mathsf{c}_{p}>0 sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT > 0  such that as long as  n  p  c p  log  n n p subscript c p n np\\geq\\mathsf{c}_{p}\\log n italic_n italic_p  sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT roman_log italic_n , the Erdos-Renyi pairwise comparison model satisfies  Assumptions   2 ,  3  and  4  with high probability. We also note that much of our technical analysis in each of the three scenarios lies in analyzing the principal ratio.",
            "The proof is provided in  Section   A-A ; our argument is a modification of that in  [ 61 , Theorem 3.1] .  Proposition   5  illustrates that  Assumption   4  holds with  h = 1 /  2 h 1 superscript  2 h=1/\\delta^{2} italic_h = 1 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT . It also implies that the pairwise comparison model satisfies  Assumption   2  with   =  3 4  ( 1 +  )  superscript  3 4 1  \\xi=\\frac{\\delta^{3}}{4(1+\\delta)} italic_ = divide start_ARG italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG start_ARG 4 ( 1 + italic_ ) end_ARG , because we obtain the following lower bound on the edge expansion    ( R ) italic- R \\phi(R) italic_ ( italic_R )  using  Eq.   16  by substituting  d = 2  n d 2 n d=2n italic_d = 2 italic_n :",
            "where we have utilized the fact that for complete graphs,   ~  ( G ) = n 2 ~ italic- G n 2 \\tilde{\\phi}({\\mathcal{G}})=\\frac{n}{2} over~ start_ARG italic_ end_ARG ( caligraphic_G ) = divide start_ARG italic_n end_ARG start_ARG 2 end_ARG . Alternatively, for complete graphs, we can obtain tighter upper bounds on the critical threshold (i.e., with better implicit dependence on    \\delta italic_ ) by directly bounding the second largest singular value   2  ( R ) subscript  2 R \\sigma_{2}(R) italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( italic_R )  of the DTM  R R R italic_R  (see  Lemma   3  in  Section   V-A ) instead of relying on expansion properties and  Cheeger inequalities  (i.e., using  Assumption   2  and  Lemma   4  in  Section   V-A ). This alternative approach leverages bounds between contraction coefficients, specifically, in terms of the  Dobrushin contraction coefficient  for TV distance; see  Section   V-A  for details. Additionally, note that a complete graph trivially satisfies  Assumption   3 . Thus, for the case of complete graphs, we have shown that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4 . This allows us to test whether data generated from any pairwise comparison matrix  P P P italic_P  corresponding to a complete induced graph satisfying  Assumption   1  conforms to an underlying BTL model. However, the testing procedure for a complete graph requires  n  ( n  1 )  k n n 1 k n(n-1)k italic_n ( italic_n - 1 ) italic_k  samples.",
            "The proof is provided in  Section   A-B . This result generalizes the result in  [ 72 , Theorem 3] , and illustrates that  Assumption   4  holds with  h = c ~  ( a ) /  5 h ~ c a superscript  5 h=\\tilde{c}(a)/\\delta^{5} italic_h = over~ start_ARG italic_c end_ARG ( italic_a ) / italic_ start_POSTSUPERSCRIPT 5 end_POSTSUPERSCRIPT . The assumption,  | E  ( S , T ) |  a  | S |  | T | E S T a S T |\\mathcal{E}(\\mathcal{S},\\mathcal{T})|\\geq a|\\mathcal{S}||\\mathcal{T}| | caligraphic_E ( caligraphic_S , caligraphic_T ) |  italic_a | caligraphic_S | | caligraphic_T |  for all disjoint subsets  S , T S T \\mathcal{S},\\mathcal{T} caligraphic_S , caligraphic_T  with cardinality    ( n )  n \\Theta(n) roman_ ( italic_n ) , is typically satisfied by  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs   G G {\\mathcal{G}} caligraphic_G  with  d ~ =   n ~ d  n \\tilde{d}=\\ \\nu n over~ start_ARG italic_d end_ARG = italic_ italic_n  and   2  ( G )  ( 1   ~ )  d ~ subscript  2 G 1 ~  ~ d \\lambda_{2}({\\mathcal{G}})\\leq(1-\\tilde{\\nu})\\tilde{d} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  ( 1 - over~ start_ARG italic_ end_ARG ) over~ start_ARG italic_d end_ARG  for some constants   ,  ~  ( 0 , 1 ]  ~  0 1 \\nu,\\tilde{\\nu}\\in(0,1] italic_ , over~ start_ARG italic_ end_ARG  ( 0 , 1 ] , where   2  ( G ) subscript  2 G \\lambda_{2}({\\mathcal{G}}) italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  denotes the second largest eigenvalue modulus of the adjacency matrix of  G G {\\mathcal{G}} caligraphic_G ; we refer readers to  [ 73 ]  for the definition of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs. We also refer the readers to  Section   A-C  for details regarding the existence of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs with  d ~ =   n ~ d  n \\tilde{d}=\\nu n over~ start_ARG italic_d end_ARG = italic_ italic_n  and   2  ( G )  ( 1   ~ )  d ~ , subscript  2 G 1 ~  ~ d \\lambda_{2}({\\mathcal{G}})\\leq(1-\\tilde{\\nu})\\tilde{d}, italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  ( 1 - over~ start_ARG italic_ end_ARG ) over~ start_ARG italic_d end_ARG ,  and why they satisfy the assumption in  Proposition   6 . Furthermore, pairwise comparison models corresponding to such graphs also satisfy  Assumption   2  as explained in  Section   A-C , cf.  [ 74 , Theorem 9.2.1] , and trivially satisfy  Assumption   3 . Thus, for the case of dense  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs with appropriate expansion properties, we have again established that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4 . This permits us to test whether data generated from any pairwise comparison matrix  P P P italic_P  corresponding to a dense  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graph satisfying  Assumption   1  and certain expansion properties conforms to an underlying BTL model. Moreover, the denseness requirement  d ~ =   ( n ) ~ d  n \\tilde{d}=\\Theta(n) over~ start_ARG italic_d end_ARG = roman_ ( italic_n )  implies that the testing procedure requires    ( n 2  k )  superscript n 2 k \\Theta(n^{2}k) roman_ ( italic_n start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k )  samples in order to satisfy the various assumptions. The next setting establishes the utility of our testing procedure for sparse induced graphs.",
            "The proof of  Proposition   8  is provided in  Section   A-D . In particular,  Proposition   8  illustrates that  Assumption   4  holds with  h = 7 /  2 h 7 superscript  2 h=7/\\delta^{2} italic_h = 7 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  with high probability. Moreover, random graphs are known to have nice expansion properties  [ 75 , Theorem 2.8]  (also see  [ 76 ] ). Indeed, using  [ 77 , Equation (11)] , we have that for an Erdos-Renyi random graph,   ~  ( G )  1 4  n  p ~ italic- G 1 4 n p \\tilde{\\phi}({\\mathcal{G}})\\geq\\frac{1}{4}np over~ start_ARG italic_ end_ARG ( caligraphic_G )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG italic_n italic_p  with high probability, thereby showing that the pairwise comparison matrix  P P P italic_P  also satisfies  Assumption   2  with   =  3 / ( 12  7  ( 1 +  ) )  superscript  3  12 7 1  \\xi=\\delta^{3}/(12\\cdot 7\\cdot(1+\\delta)) italic_ = italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT / ( 12  7  ( 1 + italic_ ) )  with high probability.  Proposition   7  also implies that an Erdos-Renyi random graph satisfies  Assumption   3  with high probability. Thus, for the case of Erdos-Renyi random graphs, we have again demonstrated that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4  with high probability, as required for theoretical guarantees on our testing procedure. Notably, in this case, the testing procedure requires  O  ( k  n  log  n ) O k n n O(kn\\log n) italic_O ( italic_k italic_n roman_log italic_n )  pairwise comparisons, which matches the total number of observations needed for consistently estimating the parameters of the BTL model in  [ 11 ] .",
            "This is because the optimality condition implies that   B  T =  B  T  ( I n +    1 n  1 n T  R n ) superscript subscript  B superscript T superscript subscript  B superscript T subscript I n superscript  subscript 1 n superscript subscript 1 n T R n \\pi_{B}^{*^{\\mathrm{T}}}=\\pi_{B}^{*^{\\mathrm{T}}}(I_{n}+\\frac{\\lambda^{*}{% \\mathbf{1}}_{n}{\\mathbf{1}}_{n}^{\\mathrm{T}}-R}{n}) italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT = italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_I start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT + divide start_ARG italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT - italic_R end_ARG start_ARG italic_n end_ARG ) . Moreover, note that each entry of  S B ,   0 subscript S B  0 S_{B,\\lambda}\\geq 0 italic_S start_POSTSUBSCRIPT italic_B , italic_ end_POSTSUBSCRIPT  0  for    0  0 \\lambda\\geq 0 italic_  0 . Now, consider the numerator term in  Eq.   34 , which can be expressed as",
            "Rearranging the terms and utilizing  Lemma   4  we get the following bound",
            "Combining  Eqs.   40  and  41 , we get",
            "Therefore, using  Eqs.   36  and  42 , the ratio in  Eq.   34  is upper bounded as",
            "We would like to emphasize the distinction between our proof above and the approach adopted in  [ 11 , Theorem 8]  for proving a similar result, and elucidate the proof in  [ 11 ] . In transitioning from  Eq.   44  to  Eq.   45 , the authors in  [ 11 ]  utilize the  l 2  (  ) superscript l 2  \\ell^{2}(\\pi) roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( italic_ )  norm, as opposed to the  l 2  (   1 ) superscript l 2 superscript  1 \\ell^{2}(\\pi^{-1}) roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT )  norm. Specifically, they bound the final term on the right-hand side as follows",
            "where   l  ( S ) subscript  l S \\lambda_{l}(S) italic_ start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT ( italic_S )  is the  l l l italic_l th largest eigenvalue (in magnitude) of  S S S italic_S  for  l  [ n ] l delimited-[] n l\\in[n] italic_l  [ italic_n ] . This bound is rather subtle and a detailed reasoning for  Eq.   46  is missing. Therefore, we provide it below. Define the function:",
            "Finally,    ( S ) =  2  (   1 / 2  S   1 / 2 )  S subscript  2 superscript  1 2 S superscript  1 2 \\rho(S)=\\lambda_{2}(\\Pi^{-1/2}S\\Pi^{1/2}) italic_ ( italic_S ) = italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT )  follows by observing that    1 / 2 superscript  1 2 \\pi^{-1/2} italic_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT  and   3 / 2 superscript  3 2 \\pi^{3/2} italic_ start_POSTSUPERSCRIPT 3 / 2 end_POSTSUPERSCRIPT  are the corresponding right and left eigenvectors of    1 / 2  S   1 / 2 superscript  1 2 S superscript  1 2 \\Pi^{-1/2}S\\Pi^{1/2} roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . And since for the BTL model (under hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT )   1 / 2  S    1 / 2 superscript  1 2 S superscript  1 2 \\Pi^{1/2}S\\Pi^{-1/2} roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT  is a symmetric matrix, it has real eigenvalues. This implies that, by a similarity transform,  S ,  1 / 2  S    1 / 2 ,   1 / 2  S   1 / 2 S superscript  1 2 S superscript  1 2 superscript  1 2 S superscript  1 2 S,\\Pi^{1/2}S\\Pi^{-1/2},\\Pi^{-1/2}S\\Pi^{1/2} italic_S , roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT , roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  all have the same eigenvalues. This proves the bound in  Eq.   46 . However, this technique does not work for general pairwise comparison models, and therefore we have to resort to  l 2  (   1 ) superscript l 2 superscript  1 \\ell^{2}(\\pi^{-1}) roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT )  norm.",
            "Under the pairwise comparison model discussed in  Section   II  such that  Assumptions   2  and  4  holds and for  k  max  { 1 , c  h  log  n d max   4 } k 1 c h n subscript d superscript  4 k\\geq\\max\\big{\\{}1,\\frac{ch\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 1 , divide start_ARG italic_c italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG }  and  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n , the following bound holds:",
            "We remark that if a standard matrix Bernstein inequality  [ 80 ]  were used in the proof of  Lemma   7 , the constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . From  Eq.   63 , we would get an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT , thus proving  Proposition   4 .",
            "Now again we need to show that   P ^  P  2  O  ( d max / k ) subscript norm ^ P P 2 O subscript d k \\|\\hat{P}-P\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. In case of complete graph, by  [ 80 , Theorem 4.4.5] , we have   P ^  P  2  6  c p  d max / k subscript norm ^ P P 2 6 subscript c p subscript d k \\|\\hat{P}-P\\|_{2}\\leq 6c_{p}\\sqrt{d_{\\max}/k}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  6 italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG  with high probability for some constant  c p subscript c p c_{p} italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT  by the same argument as ( 69 ) (since  var  ( p ^ i  j )  1 / k var subscript ^ p i j 1 k {\\mathrm{var}}(\\hat{p}_{ij})\\leq 1/k roman_var ( over^ start_ARG italic_p end_ARG start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  1 / italic_k ). For a general graph model, and by application of matrix Bernstein inequality, again a  log  n n \\log n roman_log italic_n  factor becomes a bottleneck as we obtain   P ^  P  2  O  ( d max  log  n k ) subscript norm ^ P P 2 O subscript d n k \\|\\hat{P}-P\\|_{2}\\leq O\\big{(}\\sqrt{\\frac{d_{\\max}\\log n}{k}}\\big{)}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG )  (with high probability). Therefore, we again utilize  [ 81 ,  Corollary 2.15]  to obtain tighter concentration bounds on   P ^  P  2 subscript norm ^ P P 2 \\|\\hat{P}-P\\|_{2}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT . Applying,  Lemma   14  we obtain",
            "where the term  O  ( 1 n 3 ) O 1 superscript n 3 O(\\frac{1}{n^{3}}) italic_O ( divide start_ARG 1 end_ARG start_ARG italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG )  is added to account for the probability with which the event  A 2 subscript A 2 \\mathcal{A}_{2} caligraphic_A start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  Eqs.   68  and  74  holds. Substituting  t = c    log  n t   c n t=\\bar{c}\\log n italic_t = over  start_ARG italic_c end_ARG roman_log italic_n  for some constant  c     c \\bar{c} over  start_ARG italic_c end_ARG , and utilizing the fact that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , we obtain that there exists a constant  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  such that with probability at least  1  O  ( 1 / n 3 ) 1 O 1 superscript n 3 1-O(1/n^{3}) 1 - italic_O ( 1 / italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT ) , we have  T 1  c   n      2 k subscript T 1 subscript c  n superscript subscript norm  2 k T_{1}\\leq c_{\\alpha}\\frac{n\\|\\pi\\|_{\\infty}^{2}}{k} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT divide start_ARG italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_ARG start_ARG italic_k end_ARG . The corresponding lower bounds on  T 1 subscript T 1 T_{1} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  can be obtained in a similar manner, and therefore, for the tail bound on  | T 1 | subscript T 1 |T_{1}| | italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT | , we get a factor of  2 2 2 2 , thus proving  Eq.   56 .",
            "First, we begin by deriving bounds on the probability of type  \\Romannum 1 error. Similar to the proof of  Theorem   2 , we split the test statistic  T T T italic_T  as  T = T 1 + T 2 + T 3 T subscript T 1 subscript T 2 subscript T 3 T=T_{1}+T_{2}+T_{3} italic_T = italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , where  T 1 , T 2 subscript T 1 subscript T 2 T_{1},T_{2} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  are defined in  Eqs.   53 ,  54  and  55 . To calculate the  P  ( T  t ) P T t {\\mathbb{P}}(T\\geq t) blackboard_P ( italic_T  italic_t )  for  t  0 t 0 t\\geq 0 italic_t  0 , we use the following inequality",
            "To obtain tail bounds under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , we again utilize  Eq.   84  as",
            "In this section, we will provide proofs of  Theorem   4  and  Proposition   9 .",
            "The above equation combined with  Eq.   94  gives",
            "In this section, we will perform several experiments on the synthetically generated datasets to verify our theoretical results and the effect of the shuffling techniques discussed above under hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . For the first experiment, we will use the same construction for the pairwise comparison matrix  P P P italic_P  that we utilized in the proof of  Theorem   4  under the null and alternate hypothesis, which are presented in  Eq.   86  and  Eq.   87 . We set the number of pairwise comparisons per pair of agents  k = 12 k 12 k=12 italic_k = 12 , the number of agents  n n n italic_n  is linearly increased from  32 32 32 32  to  128 128 128 128  in  12 12 12 12  equally spaced steps, and the perturbation    \\eta italic_  in ( 88 ) is increased from  0.16 0.16 0.16 0.16  to  0.32 0.32 0.32 0.32  in  12 12 12 12  equally spaced steps. For each value of    \\eta italic_  and  n n n italic_n , simulations are performed by generating  Z i  j  Bin  ( k , p i  j ) similar-to subscript Z i j Bin k subscript p i j Z_{ij}\\sim\\text{Bin}(k,p_{ij}) italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  Bin ( italic_k , italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  for  i = j i j i\\neq j italic_i = italic_j  for both hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , and the corresponding value of values of test statistic  T T T italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and  empirical minimax risk  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  is estimated. The threshold used for the decision rule is set to   2 / n superscript  2 n \\eta^{2}/n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT / italic_n .  Fig.   3  plots the empirical average of  n  T  n T n\\cdot T italic_n  italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  averaged over  250 250 250 250  iterations. Note that for a fixed value of    \\eta italic_ , the values of  n  T  n T n\\cdot T italic_n  italic_T  (under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ) are roughly constant as  n n n italic_n  increases, and the values of  n  T  n T n\\cdot T italic_n  italic_T  increase as    \\eta italic_  increases.  Fig.   3  plots the behavior of  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  for each value of    \\eta italic_  and  n n n italic_n . Observe that  1 R ^ m > 1 / 2 subscript 1 subscript ^ R m 1 2 {\\mathbbm{1}}_{\\hat{\\mathcal{R}}_{\\mathsf{m}}>1/2} blackboard_1 start_POSTSUBSCRIPT over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT > 1 / 2 end_POSTSUBSCRIPT  is largely independent of  n n n italic_n , which is consistent with our derivation in  Section   VI-A , where we have shown that if  8   2  k  c ~ 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c} 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG  then  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Thus, once    \\eta italic_  exceeds a particular threshold  R m subscript R m \\mathcal{R}_{\\mathsf{m}} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  exceeds  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG  for all values of  n n n italic_n .",
            "Fig.   4  and  Fig.   5  plots the obtained thresholds   0 subscript  0 \\gamma_{0} italic_ start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT ,   1 subscript  1 \\gamma_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and   2 subscript  2 \\gamma_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  for various values of  n n n italic_n  and  k k k italic_k  for complete induced and for an Erdos-Renyi random graph respectively. It can be seen from both figures that each of the three scaled thresholds remains roughly constant for various values of  n n n italic_n  and  k k k italic_k , and moreover, under the BTL model, the thresholds, especially   0 ,  2 subscript  0 subscript  2 \\gamma_{0},\\gamma_{2} italic_ start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , match each other quite closely even though they are obtained from quite different mechanisms.",
            "Under the alternative hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , we repeat the same experiment as above for both Erdos-Renyi and complete graphs, but only for a single pairwise comparison model  P = 1 2  1 n  1 n T +  P 1 2 subscript 1 n superscript subscript 1 n T  P=\\frac{1}{2}{\\mathbf{1}}_{n}{\\mathbf{1}}_{n}^{\\mathrm{T}}+\\Delta italic_P = divide start_ARG 1 end_ARG start_ARG 2 end_ARG bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT + roman_  where   i  j = 0.22 subscript  i j 0.22 \\Delta_{ij}=0.22 roman_ start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = 0.22  if  i > j i j i>j italic_i > italic_j  and   i  j =  0.22 subscript  i j 0.22 \\Delta_{ij}=-0.22 roman_ start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = - 0.22  if  j > i j i j>i italic_j > italic_i  (and  0 0  if  i = j i j i=j italic_i = italic_j ). Subsequently, we generate independent synthetic data  200 200 200 200  times using the pairwise probabilities and compute the scaled test statistic  n  k  T  n k T n\\cdot k\\cdot T italic_n  italic_k  italic_T  each time.  Fig.   4  and  Fig.   5  plot the 95% percentile confidence intervals for the scaled test statistic  n  k  T  n k T n\\cdot k\\cdot T italic_n  italic_k  italic_T  as shaded regions under the complete graph and Erdos-Renyi random graph, respectively. The thresholds   1 subscript  1 \\gamma_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and   2 subscript  2 \\gamma_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  are computed in the same manner as for hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT . Notably, by comparing  Figs.   4  and  4 , the threshold   2 subscript  2 \\gamma_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  is roughly the same as derived under hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT . This suggests that the combination of shuffling corresponding to reversibility and translated skew-symmetry essentially turns the data as if it were generated by a BTL model. Also, by the construction of our pairwise comparison matrix, the shuffling corresponding to translated skew-symmetry is redundant as  p i  j + p j  i = 1 subscript p i j subscript p j i 1 p_{ij}+p_{ji}=1 italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT + italic_p start_POSTSUBSCRIPT italic_j italic_i end_POSTSUBSCRIPT = 1  for all  ( i , j ) i j (i,j) ( italic_i , italic_j ) . Therefore, the threshold   1 subscript  1 \\gamma_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  is closer to the 95% percentile for the scaled test statistic.",
            "Finally, combining the bounds on  L 1 subscript L 1 L_{1} italic_L start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  (see  Lemma   10 ),  L 2 subscript L 2 L_{2} italic_L start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  (see  Eq.   104 ),  L 3 subscript L 3 L_{3} italic_L start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  (see  Eq.   109 ) together, we get the following bound simultaneously for all  m  [ n ] m delimited-[] n m\\in[n] italic_m  [ italic_n ] :",
            "By  Assumption   4 , we know that the principal ratio of    \\pi italic_  is bounded as it is the stationary distribution corresponding to a complete graph. Now, it remains to bound    T  ( S ^  S )  2 . subscript norm superscript  T ^ S S 2 \\|\\pi^{\\mathrm{T}}(\\hat{S}-S)\\|_{2}.  italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ( over^ start_ARG italic_S end_ARG - italic_S )  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT .  Consider the  i i i italic_i th coordinate of   T  ( S ^  S ) superscript  T ^ S S \\pi^{\\mathrm{T}}(\\hat{S}-S) italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ( over^ start_ARG italic_S end_ARG - italic_S ) :",
            "The proofs of  Lemma   14  and  Lemma   15  are provided in  Section   D-A  and  Section   D-B , respectively. The proofs of both the lemmata are based on the ensuing proposition from  [ 81 ] .",
            "Next we will apply  Proposition   10  on the  V ^ i  j superscript ^ V i j \\hat{V}^{ij} over^ start_ARG italic_V end_ARG start_POSTSUPERSCRIPT italic_i italic_j end_POSTSUPERSCRIPT , but first we need to calculate parameters   ^  ( Y ^  E  [ Y ^ ] ) . ^  ^ Y E delimited-[] ^ Y \\hat{\\sigma}(\\hat{Y}-{\\mathbb{E}}[\\hat{Y}]). over^ start_ARG italic_ end_ARG ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) .  Using the same reasoning as in the proof of  Lemma   14 , for  i = j i j i\\neq j italic_i = italic_j  and  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E , we have  E  [ ( ( Y ^  E  [ Y ^ ] ) T  ( Y ^  E  [ Y ^ ] ) ) i  j ] = 0 E delimited-[] subscript superscript ^ Y E delimited-[] ^ Y T ^ Y E delimited-[] ^ Y i j 0 \\mathbb{E}[((\\hat{Y}-{\\mathbb{E}}[\\hat{Y}])^{\\mathrm{T}}(\\hat{Y}-{\\mathbb{E}}[% \\hat{Y}]))_{ij}]=0 blackboard_E [ ( ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) ) start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ] = 0 . Moreover,",
            "Similarly, using the same reasoning as in proof of  Lemma   14  we can show that"
        ]
    },
    "id_table_5": {
        "caption": "",
        "table": "Ax1.EGx2",
        "footnotes": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        "references": [
            "Our test requires that the underlying observation graph and the pairwise comparison matrix satisfy certain regularity assumptions, e.g., expansion and bounded principal ratio. To substantiate this, we identify different classes of graphs in  Section   III-E  (see  Propositions   5 ,  6  and  8 ) that fulfill these criteria for all pairwise comparison models.",
            "To pose the hypothesis testing problem in  Eq.   5  more rigorously, we demonstrate an interesting relation between a BTL model and its canonical Markov matrix. Recall that a Markov chain on the state space  [ n ] delimited-[] n [n] [ italic_n ] , defined by the row stochastic matrix  W  R n  n W superscript R n n W\\in{\\mathbb{R}}^{n\\times n} italic_W  blackboard_R start_POSTSUPERSCRIPT italic_n  italic_n end_POSTSUPERSCRIPT , is said to be  reversible  if it satisfies the  detailed balance conditions   [ 56 , Section 1.6] :",
            "For a given tolerance parameter   > 0 italic- 0 \\epsilon>0 italic_ > 0  and a pairwise comparison model  P P P italic_P  satisfying  Assumptions   1 ,  2 ,  3  and  4 , we can formulate the hypothesis testing problem in ( 5 ) as:",
            "The proof is provided in  Section   A-A ; our argument is a modification of that in  [ 61 , Theorem 3.1] .  Proposition   5  illustrates that  Assumption   4  holds with  h = 1 /  2 h 1 superscript  2 h=1/\\delta^{2} italic_h = 1 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT . It also implies that the pairwise comparison model satisfies  Assumption   2  with   =  3 4  ( 1 +  )  superscript  3 4 1  \\xi=\\frac{\\delta^{3}}{4(1+\\delta)} italic_ = divide start_ARG italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG start_ARG 4 ( 1 + italic_ ) end_ARG , because we obtain the following lower bound on the edge expansion    ( R ) italic- R \\phi(R) italic_ ( italic_R )  using  Eq.   16  by substituting  d = 2  n d 2 n d=2n italic_d = 2 italic_n :",
            "Utilizing  Proposition   5 , we know that the principal ratio of    superscript  \\pi^{*} italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  is upper bounded by a constant  1 /  2 1 superscript  2 1/\\delta^{2} 1 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  (note that  Proposition   5  also holds for  d = 3  n d 3 n d=3n italic_d = 3 italic_n , since the stationary distribution is independent of  d d d italic_d  as long as  d  n d n d\\geq n italic_d  italic_n ). In the sequel, we will prove that as long as  n  p  c p  log  n n p subscript c p n np\\geq\\mathsf{c}_{p}\\log n italic_n italic_p  sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT roman_log italic_n  for some large enough constant  c p subscript c p \\mathsf{c}_{p} sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT , the principal ratio of a pairwise comparison model over an Erdos-Renyi random graph is also upper bounded by a constant with high probability. To bound the principal ratio, we first provide a perturbation bound between    superscript  \\pi^{*} italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  and    \\pi italic_ .",
            "The proof of  Theorem   5  is provided in  Appendix   B . The theorem immediately yields the following bound on the principal ratio corresponding to the sub-sampled pairwise comparison matrix  P P P italic_P .",
            "Given an underlying pairwise comparison matrix  P  superscript P P^{*} italic_P start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  with  n  3 n 3 n\\geq 3 italic_n  3  satisfying  Assumption   1 , suppose we obtain the pairwise comparison matrix  P P P italic_P  by randomly sampling the entries of  P  superscript P P^{*} italic_P start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  according to an Erdos-Renyi model with parameter  p  ( 0 , 1 ] p 0 1 p\\in(0,1] italic_p  ( 0 , 1 ]  satisfying  p  c p  log  n n p subscript c p n n p\\geq\\frac{\\mathsf{c}_{p}\\log n}{n} italic_p  divide start_ARG sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_n end_ARG  for a constant  c p  max  { c 9 , 2  c 10 /  4 } subscript c p subscript c 9 2 subscript c 10 superscript  4 \\mathsf{c}_{p}\\geq\\max\\{c_{9},2c_{10}/\\delta^{4}\\} sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT  roman_max { italic_c start_POSTSUBSCRIPT 9 end_POSTSUBSCRIPT , 2 italic_c start_POSTSUBSCRIPT 10 end_POSTSUBSCRIPT / italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT }  (where  c 9 , c 10 subscript c 9 subscript c 10 c_{9},c_{10} italic_c start_POSTSUBSCRIPT 9 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 10 end_POSTSUBSCRIPT  are given in  Theorem   5 ). Then, with probability at least  1  O  ( n  3 ) 1 O superscript n 3 1-O(n^{-3}) 1 - italic_O ( italic_n start_POSTSUPERSCRIPT - 3 end_POSTSUPERSCRIPT ) , the principal ratio satisfies the bound",
            "We would like to emphasize the distinction between our proof above and the approach adopted in  [ 11 , Theorem 8]  for proving a similar result, and elucidate the proof in  [ 11 ] . In transitioning from  Eq.   44  to  Eq.   45 , the authors in  [ 11 ]  utilize the  l 2  (  ) superscript l 2  \\ell^{2}(\\pi) roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( italic_ )  norm, as opposed to the  l 2  (   1 ) superscript l 2 superscript  1 \\ell^{2}(\\pi^{-1}) roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT )  norm. Specifically, they bound the final term on the right-hand side as follows",
            "For  S ^ ^ S {\\hat{S}} over^ start_ARG italic_S end_ARG  constructed as in  Eq.   25 , we have",
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows by a standard argument and the explanation is provided below.   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  is a consequence of Cheegers inequality for non-negative matrices in  Lemma   5  (see below).   3 subscript  3 \\zeta_{3} italic_ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  follows since  1  x  1  x / 2 1 x 1 x 2 \\sqrt{1-x}\\leq 1-x/2 square-root start_ARG 1 - italic_x end_ARG  1 - italic_x / 2  for  x  0 . x 0 x\\geq 0. italic_x  0 .  and since    ( R ) =   ( ( R + R T ) / 2 ) =   ( R T ) italic- R italic- R superscript R T 2 italic- superscript R T \\phi(R)=\\phi((R+R^{\\mathrm{T}})/2)=\\phi(R^{\\mathrm{T}}) italic_ ( italic_R ) = italic_ ( ( italic_R + italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) / 2 ) = italic_ ( italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  (proof provided below for completeness). Finally,   4 subscript  4 \\zeta_{4} italic_ start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT  follows because    ( R )   , italic- R  \\phi(R)\\geq\\xi, italic_ ( italic_R )  italic_ ,  by  Assumption   2 . Regarding   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , observe that since the matrix  R R R italic_R  is  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG -lazy, i.e.,  R i  i  1 2 subscript R i i 1 2 R_{ii}\\geq\\frac{1}{2} italic_R start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG  for all  i  [ n ] i delimited-[] n i\\in[n] italic_i  [ italic_n ]  (as  S i  i  1 2 subscript S i i 1 2 S_{ii}\\geq\\frac{1}{2} italic_S start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG ), therefore we have",
            "Hence, by  Eq.   51  and variational characterization of eigenvalues, we have",
            "The following bounds hold for the mean and variance of  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  as defined in  Eq.   55 .",
            "From  Equation   52 , we have  E  [ Q i  j ] = 0 E delimited-[] subscript Q i j 0 {\\mathbb{E}}[Q_{ij}]=0 blackboard_E [ italic_Q start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ] = 0 . Now we re-write  T 1  a subscript T 1 a T_{1a} italic_T start_POSTSUBSCRIPT 1 italic_a end_POSTSUBSCRIPT  in terms of the matrix  Q Q Q italic_Q  as",
            "Bounding   Q  2 subscript norm Q 2 \\|Q\\|_{2}  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT :  Now it remains to show that   Q  2  O  ( d max / k ) subscript norm Q 2 O subscript d k \\|Q\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. In the case of a complete graph, it is much easier to show because each entry  Q i  j subscript Q i j Q_{ij} italic_Q start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  is bounded, and therefore  Q Q {Q} italic_Q  is a random sub-Gaussian matrix, and the variance of each entry is upper bounded by  4 / k 4 k 4/k 4 / italic_k  (by  Eq.   52 ). Hence, by  [ 80 , Theorem 4.4.5] , the spectral norm   Q  2  2  c q  ( 2  d max + t ) / k subscript norm Q 2 2 subscript c q 2 subscript d t k \\|{Q}\\|_{2}\\leq 2c_{q}(2\\sqrt{d_{\\max}}+t)/\\sqrt{k}  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  2 italic_c start_POSTSUBSCRIPT italic_q end_POSTSUBSCRIPT ( 2 square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT end_ARG + italic_t ) / square-root start_ARG italic_k end_ARG  for some constant  c q subscript c q c_{q} italic_c start_POSTSUBSCRIPT italic_q end_POSTSUBSCRIPT  with probability at least  1  2  e  t 2 1 2 superscript e superscript t 2 1-2e^{-t^{2}} 1 - 2 italic_e start_POSTSUPERSCRIPT - italic_t start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT . Substituting  t = log  n t n t=\\sqrt{\\log n} italic_t = square-root start_ARG roman_log italic_n end_ARG , we get the following bound with a probability at least  1  O  ( 1 / n 3 ) 1 O 1 superscript n 3 1-O(1/n^{3}) 1 - italic_O ( 1 / italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT )",
            "For a general graph model (with  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n ), an application of matrix Bernstein inequality yields   Q  2  O  ( d max  log  n k ) subscript norm Q 2 O subscript d n k \\|Q\\|_{2}\\leq O(\\sqrt{\\frac{d_{\\max}\\log n}{k}})  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG )  (with high probability). The extra  log  n n \\log n roman_log italic_n  factor becomes a bottleneck later in the analysis. However, using recent advances in concentration inequalities  [ 81 ,  Corollary 2.15]  we can indeed show that if  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , then   Q  2  O  ( d max / k ) subscript norm Q 2 O subscript d k \\|Q\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. The tail bounds of   Q  2 subscript norm Q 2 \\|Q\\|_{2}  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  are computed in  Lemma   15 , and therefore, we have",
            "Now combining  Eqs.   65 ,  70 ,  71  and  75 , we obtain",
            "where the term  O  ( 1 n 3 ) O 1 superscript n 3 O(\\frac{1}{n^{3}}) italic_O ( divide start_ARG 1 end_ARG start_ARG italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG )  is added to account for the probability with which the event  A 2 subscript A 2 \\mathcal{A}_{2} caligraphic_A start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  Eqs.   68  and  74  holds. Substituting  t = c    log  n t   c n t=\\bar{c}\\log n italic_t = over  start_ARG italic_c end_ARG roman_log italic_n  for some constant  c     c \\bar{c} over  start_ARG italic_c end_ARG , and utilizing the fact that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , we obtain that there exists a constant  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  such that with probability at least  1  O  ( 1 / n 3 ) 1 O 1 superscript n 3 1-O(1/n^{3}) 1 - italic_O ( 1 / italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT ) , we have  T 1  c   n      2 k subscript T 1 subscript c  n superscript subscript norm  2 k T_{1}\\leq c_{\\alpha}\\frac{n\\|\\pi\\|_{\\infty}^{2}}{k} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT divide start_ARG italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_ARG start_ARG italic_k end_ARG . The corresponding lower bounds on  T 1 subscript T 1 T_{1} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  can be obtained in a similar manner, and therefore, for the tail bound on  | T 1 | subscript T 1 |T_{1}| | italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT | , we get a factor of  2 2 2 2 , thus proving  Eq.   56 .",
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows from the moments of the Binomial random variable as described in  Eq.   52  along with additional calculations provided below,   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  follows by upper bounding  p i  j  ( 1  p i  j ) subscript p i j 1 subscript p i j p_{ij}(1-p_{ij}) italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ( 1 - italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  by  1 / 4 1 4 1/4 1 / 4  and   3 subscript  3 \\zeta_{3} italic_ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  follows by upper bounding   i subscript  i \\pi_{i} italic_ start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  by      subscript norm  \\|\\pi\\|_{\\infty}  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  and  p i  j 2  ( 1  p i  j ) 2 superscript subscript p i j 2 superscript 1 subscript p i j 2 p_{ij}^{2}(1-p_{ij})^{2} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( 1 - italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ) start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  by  1 / 16 1 16 1/16 1 / 16 . To show   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , note that",
            "First, we begin by deriving bounds on the probability of type  \\Romannum 1 error. Similar to the proof of  Theorem   2 , we split the test statistic  T T T italic_T  as  T = T 1 + T 2 + T 3 T subscript T 1 subscript T 2 subscript T 3 T=T_{1}+T_{2}+T_{3} italic_T = italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , where  T 1 , T 2 subscript T 1 subscript T 2 T_{1},T_{2} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  are defined in  Eqs.   53 ,  54  and  55 . To calculate the  P  ( T  t ) P T t {\\mathbb{P}}(T\\geq t) blackboard_P ( italic_T  italic_t )  for  t  0 t 0 t\\geq 0 italic_t  0 , we use the following inequality",
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows from  Eq.   85  and   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  follows by applying Hoeffdings inequality. Therefore, we obtain",
            "Substituting the above bound in  Eq.   95 , we obtain",
            "Fig.   4  and  Fig.   5  plots the obtained thresholds   0 subscript  0 \\gamma_{0} italic_ start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT ,   1 subscript  1 \\gamma_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and   2 subscript  2 \\gamma_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  for various values of  n n n italic_n  and  k k k italic_k  for complete induced and for an Erdos-Renyi random graph respectively. It can be seen from both figures that each of the three scaled thresholds remains roughly constant for various values of  n n n italic_n  and  k k k italic_k , and moreover, under the BTL model, the thresholds, especially   0 ,  2 subscript  0 subscript  2 \\gamma_{0},\\gamma_{2} italic_ start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , match each other quite closely even though they are obtained from quite different mechanisms.",
            "Under the alternative hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , we repeat the same experiment as above for both Erdos-Renyi and complete graphs, but only for a single pairwise comparison model  P = 1 2  1 n  1 n T +  P 1 2 subscript 1 n superscript subscript 1 n T  P=\\frac{1}{2}{\\mathbf{1}}_{n}{\\mathbf{1}}_{n}^{\\mathrm{T}}+\\Delta italic_P = divide start_ARG 1 end_ARG start_ARG 2 end_ARG bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT + roman_  where   i  j = 0.22 subscript  i j 0.22 \\Delta_{ij}=0.22 roman_ start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = 0.22  if  i > j i j i>j italic_i > italic_j  and   i  j =  0.22 subscript  i j 0.22 \\Delta_{ij}=-0.22 roman_ start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = - 0.22  if  j > i j i j>i italic_j > italic_i  (and  0 0  if  i = j i j i=j italic_i = italic_j ). Subsequently, we generate independent synthetic data  200 200 200 200  times using the pairwise probabilities and compute the scaled test statistic  n  k  T  n k T n\\cdot k\\cdot T italic_n  italic_k  italic_T  each time.  Fig.   4  and  Fig.   5  plot the 95% percentile confidence intervals for the scaled test statistic  n  k  T  n k T n\\cdot k\\cdot T italic_n  italic_k  italic_T  as shaded regions under the complete graph and Erdos-Renyi random graph, respectively. The thresholds   1 subscript  1 \\gamma_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and   2 subscript  2 \\gamma_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  are computed in the same manner as for hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT . Notably, by comparing  Figs.   4  and  4 , the threshold   2 subscript  2 \\gamma_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  is roughly the same as derived under hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT . This suggests that the combination of shuffling corresponding to reversibility and translated skew-symmetry essentially turns the data as if it were generated by a BTL model. Also, by the construction of our pairwise comparison matrix, the shuffling corresponding to translated skew-symmetry is redundant as  p i  j + p j  i = 1 subscript p i j subscript p j i 1 p_{ij}+p_{ji}=1 italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT + italic_p start_POSTSUBSCRIPT italic_j italic_i end_POSTSUBSCRIPT = 1  for all  ( i , j ) i j (i,j) ( italic_i , italic_j ) . Therefore, the threshold   1 subscript  1 \\gamma_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  is closer to the 95% percentile for the scaled test statistic.",
            "The proof immediately follows by utilizing  Theorem   5 , and an application of triangle inequality, giving us the following bounds on      ,  min   min i  [ n ]   i   subscript norm  subscript superscript  subscript i delimited-[] n subscript superscript  i \\|\\pi\\|_{\\infty},\\pi^{*}_{\\min}\\triangleq\\min_{i\\in[n]}\\pi^{*}_{i}  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT , italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_min end_POSTSUBSCRIPT  roman_min start_POSTSUBSCRIPT italic_i  [ italic_n ] end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  as:",
            "where    \\zeta italic_  follows since the principal ratio for    superscript  \\pi^{*} italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  is upper bounded by  1 /  2 1 superscript  2 1/\\delta^{2} 1 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  by  Proposition   5 . Therefore, we can upper bound the principal ratio for a large enough constant  c p subscript c p \\mathsf{c}_{p} sansserif_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT  as",
            "In this section, we will provide a proof for  Theorem   5 . For brevity, we will refer to the scenarios in  Theorem   5  as the  sub-sampled  case. Recall that, in the sub-sampled case,  S  superscript S S^{*} italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  and  S S S italic_S  are defined as",
            "In the following section, we will provide a unified proof of  Theorem   5 . Since    {\\pi} italic_  and    superscript  \\pi^{*} italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  are stationary distribution of  S S {S} italic_S  and  S  superscript S S^{*} italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT , we can write the  i i i italic_i th entry as",
            "For the setting of  Theorem   5 , assume that the sampling probability satisfies  n  p  log  n n p n np\\geq\\log n italic_n italic_p  roman_log italic_n , then there exists a constant  c c c italic_c  such that",
            "Thus, we have established the existence of a constant  c 9 subscript c 9 c_{9} italic_c start_POSTSUBSCRIPT 9 end_POSTSUBSCRIPT  such that for  n  p  c 9  log  n n p subscript c 9 n np\\geq c_{9}\\log n italic_n italic_p  italic_c start_POSTSUBSCRIPT 9 end_POSTSUBSCRIPT roman_log italic_n , the perturbation bound holds               O  ( log  n n  p ) subscript norm  superscript  subscript norm  O n n p \\|\\pi-\\pi^{*}\\|_{\\infty}\\leq\\|\\pi\\|_{\\infty}O(\\sqrt{\\frac{\\log n}{np}})  italic_ - italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT   italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT italic_O ( square-root start_ARG divide start_ARG roman_log italic_n end_ARG start_ARG italic_n italic_p end_ARG end_ARG ) . This proves  Theorem   5 .",
            "For the setting of  Theorem   5 , there exists a constant  c > 1 c 1 c>1 italic_c > 1  such that for  n  p  c  log  n n p c n np\\geq c\\log n italic_n italic_p  italic_c roman_log italic_n , the following bound holds:",
            "Note that, as the stationary distribution    superscript  \\pi^{*} italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  corresponds to a complete graph, its principal ratio is bounded by  1 /  2 1 superscript  2 1/\\delta^{2} 1 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  as established in  Proposition   5 . Consequently, we have",
            "The proofs of  Lemma   14  and  Lemma   15  are provided in  Section   D-A  and  Section   D-B , respectively. The proofs of both the lemmata are based on the ensuing proposition from  [ 81 ] ."
        ]
    },
    "id_table_6": {
        "caption": "",
        "table": "Ax1.EGx3",
        "footnotes": [],
        "references": [
            "Our test requires that the underlying observation graph and the pairwise comparison matrix satisfy certain regularity assumptions, e.g., expansion and bounded principal ratio. To substantiate this, we identify different classes of graphs in  Section   III-E  (see  Propositions   5 ,  6  and  8 ) that fulfill these criteria for all pairwise comparison models.",
            "We also prove several auxiliary results. For example, we utilize the notion of separation distance mentioned above to analyze the stability of BTL assumptions in the context of rankings. More specifically, we investigate the deviation from the BTL condition that is sufficient for the ranking produced under the BTL assumption to differ from the classical Borda count ranking  [ 54 ] . Our results in  Proposition   9  show that a deviation of  O  ( 1 / n ) O 1 n O(1/\\sqrt{n}) italic_O ( 1 / square-root start_ARG italic_n end_ARG )  from the BTL condition is sufficient to produce inconsistent BTL and Borda rankings. As another example, during our analysis, we also obtain  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -estimation error bounds for (virtual) BTL parameters in  Lemma   6  when the data is actually generated by a general pairwise comparison model as opposed to a BTL model. These bounds also highlight the robustness of the spectral ranking method under model mismatch.",
            "The proof is provided in  Section   V . The proof has several essential steps. Among these, the most important step involves computing  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -error bounds (see  Lemma   6 ) for the estimated BTL parameters   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  when the data is generated by a general pairwise comparison model, which is not necessarily BTL (i.e., under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ). The derivation of these error bounds requires us to analyze the second largest singular values of DTMs corresponding to non-reversible Markov chains, particularly in the context of induced graphs that are not complete. Once we have established these  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -error bounds, we can compute bounds on  E  [ T ] E delimited-[] T {\\mathbb{E}}[T] blackboard_E [ italic_T ]  and  var  ( T ) var T {\\mathrm{var}}(T) roman_var ( italic_T ) . This step involves mitigating the correlation between the terms   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  and  { Z i  j } ( i , j )  E subscript subscript Z i j i j E \\{Z_{ij}\\}_{(i,j)\\in{\\mathcal{E}}} { italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT ( italic_i , italic_j )  caligraphic_E end_POSTSUBSCRIPT  in  Eq.   24  as both of them share the same source of randomness. Broadly speaking, this is done by splitting the product of dependent terms into three parts (by utilizing the identity  a ^  b ^ = ( a ^  a )  ( b ^  b ) + ( a ^  a )  b + a  b ^ ^ a ^ b ^ a a ^ b b ^ a a b a ^ b \\hat{a}\\hat{b}=(\\hat{a}-a)(\\hat{b}-b)+(\\hat{a}-a)b+a\\hat{b} over^ start_ARG italic_a end_ARG over^ start_ARG italic_b end_ARG = ( over^ start_ARG italic_a end_ARG - italic_a ) ( over^ start_ARG italic_b end_ARG - italic_b ) + ( over^ start_ARG italic_a end_ARG - italic_a ) italic_b + italic_a over^ start_ARG italic_b end_ARG , where  a ^ ^ a \\hat{a} over^ start_ARG italic_a end_ARG  and  b ^ ^ b \\hat{b} over^ start_ARG italic_b end_ARG  are correlated estimators of  a a a italic_a  and  b b b italic_b ) and bounding each part using appropriate concentration inequalities. Moreover, in the case where the induced graph is complete, the analysis becomes considerably simpler. An instance of such simplification in the proofs arises through the utilization of bounds between contraction coefficients of  S S S italic_S  (see  Section   V-A  and  Lemma   3 ).",
            "where the precise threshold  t =   ( ( n  k )  1 ) t  superscript n k 1 t=\\Theta((nk)^{-1}) italic_t = roman_ ( ( italic_n italic_k ) start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT )  is given in  Eq.   60 . (In other words, this decision rule returns the alternative hypothesis if and only if  T  t T t T\\geq t italic_T  italic_t  for an appropriate threshold  t =   ( ( n  k )  1 ) t  superscript n k 1 t=\\Theta((nk)^{-1}) italic_t = roman_ ( ( italic_n italic_k ) start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT ) .) In  Section   VII-A , we also present a permutation-test-based approach to obtain a non-explicit threshold for our test based on data. This approach can be more readily employed in simulations and works even when the  k i  j subscript k i j k_{ij} italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT s are not all equal.",
            "The proof of  Proposition   4  can be gleaned from the proof of  Theorem   2  in  Section   V . In essence, the behavior in  Proposition   4  stems from the fact that the proof of  Lemma   7  in  Section   V-C 1  relies on a concentration inequality (see  Proposition   10 ) which, under the stronger assumption  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , allows us to avoid the poly-logarithmic factor in  Proposition   4  when establishing  Theorem   2 . However, if a standard matrix Bernstein inequality were employed for concentration, the special constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , defined in  Lemma   7 , would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . Then, the proof of  Proposition   4  would follow by using essentially the same logic as the proof of  Theorem   2  and observing that  Eq.   63  yields an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT . Moreover, in this regime, our decision rule returns the alternative hypothesis if and only if  T    log  n n  k T  n n k T\\geq\\frac{\\gamma\\sqrt{\\log n}}{nk} italic_T  divide start_ARG italic_ square-root start_ARG roman_log italic_n end_ARG end_ARG start_ARG italic_n italic_k end_ARG  for some appropriately chosen constant    \\gamma italic_ .",
            "The proof is provided in  Section   A-A ; our argument is a modification of that in  [ 61 , Theorem 3.1] .  Proposition   5  illustrates that  Assumption   4  holds with  h = 1 /  2 h 1 superscript  2 h=1/\\delta^{2} italic_h = 1 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT . It also implies that the pairwise comparison model satisfies  Assumption   2  with   =  3 4  ( 1 +  )  superscript  3 4 1  \\xi=\\frac{\\delta^{3}}{4(1+\\delta)} italic_ = divide start_ARG italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG start_ARG 4 ( 1 + italic_ ) end_ARG , because we obtain the following lower bound on the edge expansion    ( R ) italic- R \\phi(R) italic_ ( italic_R )  using  Eq.   16  by substituting  d = 2  n d 2 n d=2n italic_d = 2 italic_n :",
            "The proof is provided in  Section   A-B . This result generalizes the result in  [ 72 , Theorem 3] , and illustrates that  Assumption   4  holds with  h = c ~  ( a ) /  5 h ~ c a superscript  5 h=\\tilde{c}(a)/\\delta^{5} italic_h = over~ start_ARG italic_c end_ARG ( italic_a ) / italic_ start_POSTSUPERSCRIPT 5 end_POSTSUPERSCRIPT . The assumption,  | E  ( S , T ) |  a  | S |  | T | E S T a S T |\\mathcal{E}(\\mathcal{S},\\mathcal{T})|\\geq a|\\mathcal{S}||\\mathcal{T}| | caligraphic_E ( caligraphic_S , caligraphic_T ) |  italic_a | caligraphic_S | | caligraphic_T |  for all disjoint subsets  S , T S T \\mathcal{S},\\mathcal{T} caligraphic_S , caligraphic_T  with cardinality    ( n )  n \\Theta(n) roman_ ( italic_n ) , is typically satisfied by  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs   G G {\\mathcal{G}} caligraphic_G  with  d ~ =   n ~ d  n \\tilde{d}=\\ \\nu n over~ start_ARG italic_d end_ARG = italic_ italic_n  and   2  ( G )  ( 1   ~ )  d ~ subscript  2 G 1 ~  ~ d \\lambda_{2}({\\mathcal{G}})\\leq(1-\\tilde{\\nu})\\tilde{d} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  ( 1 - over~ start_ARG italic_ end_ARG ) over~ start_ARG italic_d end_ARG  for some constants   ,  ~  ( 0 , 1 ]  ~  0 1 \\nu,\\tilde{\\nu}\\in(0,1] italic_ , over~ start_ARG italic_ end_ARG  ( 0 , 1 ] , where   2  ( G ) subscript  2 G \\lambda_{2}({\\mathcal{G}}) italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  denotes the second largest eigenvalue modulus of the adjacency matrix of  G G {\\mathcal{G}} caligraphic_G ; we refer readers to  [ 73 ]  for the definition of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs. We also refer the readers to  Section   A-C  for details regarding the existence of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -regular expander graphs with  d ~ =   n ~ d  n \\tilde{d}=\\nu n over~ start_ARG italic_d end_ARG = italic_ italic_n  and   2  ( G )  ( 1   ~ )  d ~ , subscript  2 G 1 ~  ~ d \\lambda_{2}({\\mathcal{G}})\\leq(1-\\tilde{\\nu})\\tilde{d}, italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  ( 1 - over~ start_ARG italic_ end_ARG ) over~ start_ARG italic_d end_ARG ,  and why they satisfy the assumption in  Proposition   6 . Furthermore, pairwise comparison models corresponding to such graphs also satisfy  Assumption   2  as explained in  Section   A-C , cf.  [ 74 , Theorem 9.2.1] , and trivially satisfy  Assumption   3 . Thus, for the case of dense  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graphs with appropriate expansion properties, we have again established that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4 . This permits us to test whether data generated from any pairwise comparison matrix  P P P italic_P  corresponding to a dense  d ~ ~ d \\tilde{d} over~ start_ARG italic_d end_ARG -regular graph satisfying  Assumption   1  and certain expansion properties conforms to an underlying BTL model. Moreover, the denseness requirement  d ~ =   ( n ) ~ d  n \\tilde{d}=\\Theta(n) over~ start_ARG italic_d end_ARG = roman_ ( italic_n )  implies that the testing procedure requires    ( n 2  k )  superscript n 2 k \\Theta(n^{2}k) roman_ ( italic_n start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k )  samples in order to satisfy the various assumptions. The next setting establishes the utility of our testing procedure for sparse induced graphs.",
            "Therefore, using  Eqs.   36  and  42 , the ratio in  Eq.   34  is upper bounded as",
            "where   l  ( S ) subscript  l S \\lambda_{l}(S) italic_ start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT ( italic_S )  is the  l l l italic_l th largest eigenvalue (in magnitude) of  S S S italic_S  for  l  [ n ] l delimited-[] n l\\in[n] italic_l  [ italic_n ] . This bound is rather subtle and a detailed reasoning for  Eq.   46  is missing. Therefore, we provide it below. Define the function:",
            "Finally,    ( S ) =  2  (   1 / 2  S   1 / 2 )  S subscript  2 superscript  1 2 S superscript  1 2 \\rho(S)=\\lambda_{2}(\\Pi^{-1/2}S\\Pi^{1/2}) italic_ ( italic_S ) = italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT )  follows by observing that    1 / 2 superscript  1 2 \\pi^{-1/2} italic_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT  and   3 / 2 superscript  3 2 \\pi^{3/2} italic_ start_POSTSUPERSCRIPT 3 / 2 end_POSTSUPERSCRIPT  are the corresponding right and left eigenvectors of    1 / 2  S   1 / 2 superscript  1 2 S superscript  1 2 \\Pi^{-1/2}S\\Pi^{1/2} roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . And since for the BTL model (under hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT )   1 / 2  S    1 / 2 superscript  1 2 S superscript  1 2 \\Pi^{1/2}S\\Pi^{-1/2} roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT  is a symmetric matrix, it has real eigenvalues. This implies that, by a similarity transform,  S ,  1 / 2  S    1 / 2 ,   1 / 2  S   1 / 2 S superscript  1 2 S superscript  1 2 superscript  1 2 S superscript  1 2 S,\\Pi^{1/2}S\\Pi^{-1/2},\\Pi^{-1/2}S\\Pi^{1/2} italic_S , roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT , roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  all have the same eigenvalues. This proves the bound in  Eq.   46 . However, this technique does not work for general pairwise comparison models, and therefore we have to resort to  l 2  (   1 ) superscript l 2 superscript  1 \\ell^{2}(\\pi^{-1}) roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT )  norm.",
            "Clearly, the condition in ( 63 ) is satisfied for sufficiently a large constant  a 0 subscript a 0 a_{0} italic_a start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  which gives",
            "We remark that if a standard matrix Bernstein inequality  [ 80 ]  were used in the proof of  Lemma   7 , the constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . From  Eq.   63 , we would get an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT , thus proving  Proposition   4 .",
            "and by  Lemma   6  we know that  P  ( A 2 )  1  O  ( n  3 ) P subscript A 2 1 O superscript n 3 {\\mathbb{P}}(\\mathcal{A}_{2})\\geq 1-O(n^{-3}) blackboard_P ( caligraphic_A start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT )  1 - italic_O ( italic_n start_POSTSUPERSCRIPT - 3 end_POSTSUPERSCRIPT ) .",
            "Combining  Eq.   67  and  Eq.   68 , and utilizing the fact that  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n",
            "In a similar manner, we can bound the term  1 n T  Q  (  ^ 2   2 ) superscript subscript 1 n T Q superscript ^  2 superscript  2 {\\mathbf{1}}_{n}^{\\mathrm{T}}Q({\\hat{\\pi}}^{2}-\\pi^{2}) bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT italic_Q ( over^ start_ARG italic_ end_ARG start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT - italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ) , and thus, we obtain the bound in  Eq.   66 .",
            "Bounding   0 subscript  0 \\zeta_{0} italic_ start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT :  To bound  1 n T  ( P ^  P )  (  ^ 2   2 ) superscript subscript 1 n T ^ P P superscript ^  2 superscript  2 {\\mathbf{1}}_{n}^{\\mathrm{T}}(\\hat{P}-P)\\left(\\hat{\\pi}^{2}-\\pi^{2}\\right) bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ( over^ start_ARG italic_P end_ARG - italic_P ) ( over^ start_ARG italic_ end_ARG start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT - italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ) , we utilize the same trick as used in  Eq.   66 . Observe that",
            "Substituting,  t = c  d max  log  n k t c subscript d n k t=c\\sqrt{\\frac{d_{\\max}\\log n}{k}} italic_t = italic_c square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG  for some constant  c c c italic_c  and utilizing the union bound as in  Eq.   68 , we obtain the bound the following bound with probability at least  1  O  ( n  4 ) 1 O superscript n 4 1-O(n^{-4}) 1 - italic_O ( italic_n start_POSTSUPERSCRIPT - 4 end_POSTSUPERSCRIPT ) .",
            "Now again we need to show that   P ^  P  2  O  ( d max / k ) subscript norm ^ P P 2 O subscript d k \\|\\hat{P}-P\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. In case of complete graph, by  [ 80 , Theorem 4.4.5] , we have   P ^  P  2  6  c p  d max / k subscript norm ^ P P 2 6 subscript c p subscript d k \\|\\hat{P}-P\\|_{2}\\leq 6c_{p}\\sqrt{d_{\\max}/k}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  6 italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG  with high probability for some constant  c p subscript c p c_{p} italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT  by the same argument as ( 69 ) (since  var  ( p ^ i  j )  1 / k var subscript ^ p i j 1 k {\\mathrm{var}}(\\hat{p}_{ij})\\leq 1/k roman_var ( over^ start_ARG italic_p end_ARG start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  1 / italic_k ). For a general graph model, and by application of matrix Bernstein inequality, again a  log  n n \\log n roman_log italic_n  factor becomes a bottleneck as we obtain   P ^  P  2  O  ( d max  log  n k ) subscript norm ^ P P 2 O subscript d n k \\|\\hat{P}-P\\|_{2}\\leq O\\big{(}\\sqrt{\\frac{d_{\\max}\\log n}{k}}\\big{)}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG )  (with high probability). Therefore, we again utilize  [ 81 ,  Corollary 2.15]  to obtain tighter concentration bounds on   P ^  P  2 subscript norm ^ P P 2 \\|\\hat{P}-P\\|_{2}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT . Applying,  Lemma   14  we obtain",
            "Now combining  Eqs.   65 ,  70 ,  71  and  75 , we obtain",
            "where the term  O  ( 1 n 3 ) O 1 superscript n 3 O(\\frac{1}{n^{3}}) italic_O ( divide start_ARG 1 end_ARG start_ARG italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG )  is added to account for the probability with which the event  A 2 subscript A 2 \\mathcal{A}_{2} caligraphic_A start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  Eqs.   68  and  74  holds. Substituting  t = c    log  n t   c n t=\\bar{c}\\log n italic_t = over  start_ARG italic_c end_ARG roman_log italic_n  for some constant  c     c \\bar{c} over  start_ARG italic_c end_ARG , and utilizing the fact that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , we obtain that there exists a constant  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  such that with probability at least  1  O  ( 1 / n 3 ) 1 O 1 superscript n 3 1-O(1/n^{3}) 1 - italic_O ( 1 / italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT ) , we have  T 1  c   n      2 k subscript T 1 subscript c  n superscript subscript norm  2 k T_{1}\\leq c_{\\alpha}\\frac{n\\|\\pi\\|_{\\infty}^{2}}{k} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT divide start_ARG italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_ARG start_ARG italic_k end_ARG . The corresponding lower bounds on  T 1 subscript T 1 T_{1} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  can be obtained in a similar manner, and therefore, for the tail bound on  | T 1 | subscript T 1 |T_{1}| | italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT | , we get a factor of  2 2 2 2 , thus proving  Eq.   56 .",
            "where    \\zeta italic_  holds for some constant  c  superscript c  c^{\\prime} italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  if  8   2  k  c ~ . 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c}. 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG .  Moreover, the quantity in  Eq.   96  is bounded above by  1 4 1 4 \\frac{1}{4} divide start_ARG 1 end_ARG start_ARG 4 end_ARG  if  c ~ ~ c \\tilde{c} over~ start_ARG italic_c end_ARG  is small enough. However, by  Eq.   90 , we have   2  C ~  n   2 superscript  2 ~ C n superscript italic- 2 \\eta^{2}\\geq\\tilde{C}n\\epsilon^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_C end_ARG italic_n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  for some constant  C ~ ~ C \\tilde{C} over~ start_ARG italic_C end_ARG . Therefore, we have shown that if  8  C ~  n  k   2  c ~ 8 ~ C n k superscript italic- 2 ~ c 8\\tilde{C}nk\\epsilon^{2}\\leq\\tilde{c} 8 over~ start_ARG italic_C end_ARG italic_n italic_k italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_c end_ARG , then   2 ( P  | | P 0 )  1 4 \\chi^{2}({\\mathbb{P}}_{\\Theta}||{\\mathbb{P}}_{0})\\leq\\frac{1}{4} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( blackboard_P start_POSTSUBSCRIPT roman_ end_POSTSUBSCRIPT | | blackboard_P start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG , which by  Eq.   91  implies that the minimax risk  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Hence,   c 2  c / ( k  n ) superscript subscript  c 2 c k n \\varepsilon_{\\mathsf{c}}^{2}\\geq c/(kn) italic_ start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  italic_c / ( italic_k italic_n )  as desired.",
            "In this section, we will perform several experiments on the synthetically generated datasets to verify our theoretical results and the effect of the shuffling techniques discussed above under hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . For the first experiment, we will use the same construction for the pairwise comparison matrix  P P P italic_P  that we utilized in the proof of  Theorem   4  under the null and alternate hypothesis, which are presented in  Eq.   86  and  Eq.   87 . We set the number of pairwise comparisons per pair of agents  k = 12 k 12 k=12 italic_k = 12 , the number of agents  n n n italic_n  is linearly increased from  32 32 32 32  to  128 128 128 128  in  12 12 12 12  equally spaced steps, and the perturbation    \\eta italic_  in ( 88 ) is increased from  0.16 0.16 0.16 0.16  to  0.32 0.32 0.32 0.32  in  12 12 12 12  equally spaced steps. For each value of    \\eta italic_  and  n n n italic_n , simulations are performed by generating  Z i  j  Bin  ( k , p i  j ) similar-to subscript Z i j Bin k subscript p i j Z_{ij}\\sim\\text{Bin}(k,p_{ij}) italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  Bin ( italic_k , italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  for  i = j i j i\\neq j italic_i = italic_j  for both hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , and the corresponding value of values of test statistic  T T T italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and  empirical minimax risk  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  is estimated. The threshold used for the decision rule is set to   2 / n superscript  2 n \\eta^{2}/n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT / italic_n .  Fig.   3  plots the empirical average of  n  T  n T n\\cdot T italic_n  italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  averaged over  250 250 250 250  iterations. Note that for a fixed value of    \\eta italic_ , the values of  n  T  n T n\\cdot T italic_n  italic_T  (under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ) are roughly constant as  n n n italic_n  increases, and the values of  n  T  n T n\\cdot T italic_n  italic_T  increase as    \\eta italic_  increases.  Fig.   3  plots the behavior of  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  for each value of    \\eta italic_  and  n n n italic_n . Observe that  1 R ^ m > 1 / 2 subscript 1 subscript ^ R m 1 2 {\\mathbbm{1}}_{\\hat{\\mathcal{R}}_{\\mathsf{m}}>1/2} blackboard_1 start_POSTSUBSCRIPT over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT > 1 / 2 end_POSTSUBSCRIPT  is largely independent of  n n n italic_n , which is consistent with our derivation in  Section   VI-A , where we have shown that if  8   2  k  c ~ 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c} 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG  then  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Thus, once    \\eta italic_  exceeds a particular threshold  R m subscript R m \\mathcal{R}_{\\mathsf{m}} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  exceeds  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG  for all values of  n n n italic_n .",
            "Dataset 1:  Our first dataset encompasses public data gathered from cricket One Day International (ODI) matches spanning a period of  19 19 19 19  years, from  1999 1999 1999 1999  to  2017 2017 2017 2017 . To ensure the robustness of our analysis, we excluded matches resulting in a tie or draw. Furthermore, matches where neither of the teams played as the home-team were also removed from consideration. Subsequently, we narrowed our focus to the eight teams that had engaged in the most number of matches against each other in both home and away scenarios. The testing procedure involves calculating the proposed test statistic and the thresholds using the empirical quantile approach and permutation-based scheme. We calculate the test statistic and the thresholds on the cumulative data of  t t t italic_t  recent years.  Fig.   6  shows the value of  n  T  n T n\\cdot T italic_n  italic_T  (with  n = 8 n 8 n=8 italic_n = 8 ) computed on the cumulative data of  t t t italic_t  most recent years along with the respective (scaled) thresholds computed using the empirical-quantile approach and permutation-based scheme. As can be seen in the figure, the calculated test statistic consistently exceeded the threshold for cricket matches for most values of  t t t italic_t . This indicates that the BTL model may not be the most suitable model for accurately characterizing the performance of cricket teams. The marked deviation can be attributed, in part, to a significant observed home advantage in the sport which could be clearly observed by examining the empirical pairwise probability matrix.",
            "Dataset 2:  For our second dataset, we employed a similar process, this time focusing on National Football League (NFL) matches from the years  2001 2001 2001 2001  to  2016 2016 2016 2016 . The dataset comprised matches played by fifteen teams that had the most extensive history of matches with one another. As with the cricket dataset, we performed the same test, calculating the scaled test statistic  n  T  n T n\\cdot T italic_n  italic_T  (with  n = 15 n 15 n=15 italic_n = 15 ) and comparing it against the threshold computed using the empirical-quantile approach and permutation-based scheme on the cumulative data for  t t t italic_t  most recent years. Our observations for the NFL dataset are presented in  Fig.   6  which illustrates that the BTL model has a much better fit, especially for smaller values of  t t t italic_t . Also, note that the test statistic exceeds the threshold for larger values of  t t t italic_t . This is reasonable because over such a large period, one could expect significant changes in the skill scores of the teams over time, and therefore, a single BTL model may not be able to accurately capture the data with a single time independent skill score. Additionally, for both experiments, the thresholds obtained using the two different techniques agree with each other demonstrating the consistency and effectiveness of both techniques.",
            "This appendix provides supporting details on the expansion properties of  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) ) -expanders, including existence results and verification of assumptions in  Proposition   6  and  Assumption   2 .",
            "To show that a  ( n , d ~ ,  2  ( G ) ) n ~ d subscript  2 G (n,\\tilde{d},\\lambda_{2}({\\mathcal{G}})) ( italic_n , over~ start_ARG italic_d end_ARG , italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G ) )  expander with  d ~ =   n ~ d  n \\tilde{d}=\\nu n over~ start_ARG italic_d end_ARG = italic_ italic_n  and   2  ( G )  ( 1   ~ )  d ~ subscript  2 G 1 ~  ~ d \\lambda_{2}({\\mathcal{G}})\\leq(1-\\tilde{\\nu})\\tilde{d} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( caligraphic_G )  ( 1 - over~ start_ARG italic_ end_ARG ) over~ start_ARG italic_d end_ARG  implies the assumption in  Proposition   6 , we utilize the expander mixing lemma in  [ 83 , Theorem 1] , which by a simple calculation yields",
            "This yields the bound  a  ( 1   )   ~ a 1  ~  a\\geq(1-\\nu)\\tilde{\\nu} italic_a  ( 1 - italic_ ) over~ start_ARG italic_ end_ARG  on  a a a italic_a  in  Proposition   6 . Now to show  Assumption   2  holds for this expander, we substitute  T = S c T superscript S c \\mathcal{T}=\\mathcal{S}^{\\mathrm{c}} caligraphic_T = caligraphic_S start_POSTSUPERSCRIPT roman_c end_POSTSUPERSCRIPT  in  Eq.   99  and which by a simple argument gives",
            "Using  Eq.   16 , this gives     6 c ~  ( a )  ( 1 +  )   ~  superscript  6 ~ c a 1  ~  \\xi\\geq\\frac{\\delta^{6}}{\\tilde{c}(a)(1+\\delta)}\\tilde{\\nu} italic_  divide start_ARG italic_ start_POSTSUPERSCRIPT 6 end_POSTSUPERSCRIPT end_ARG start_ARG over~ start_ARG italic_c end_ARG ( italic_a ) ( 1 + italic_ ) end_ARG over~ start_ARG italic_ end_ARG , where  c ~  ( a ) ~ c a \\tilde{c}(a) over~ start_ARG italic_c end_ARG ( italic_a )  is the constant in  Proposition   6 .",
            "Therefore, combining the above bound along with  Lemma   11  and  Eq.   106 , we obtain the following bound on  L 3 , 2 subscript L 3 2 L_{3,2} italic_L start_POSTSUBSCRIPT 3 , 2 end_POSTSUBSCRIPT  in the sub-sampled case."
        ]
    },
    "id_table_7": {
        "caption": "",
        "table": "S4.Ex24",
        "footnotes": [],
        "references": [
            "then  E  [ T   ] =    P + P    P E  ( 1 n   T )  F 2 E delimited-[]   T subscript superscript norm  P P  subscript P E subscript 1 n superscript  T 2 F {\\mathbb{E}}[\\bar{T}]=\\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n% }\\pi^{\\mathrm{T}})\\|^{2}_{\\mathrm{F}} blackboard_E [ over  start_ARG italic_T end_ARG ] =  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT . So, the statistic  T T T italic_T  is designed by plugging in   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  in place of    \\pi italic_  in an unbiased estimator  T     T \\bar{T} over  start_ARG italic_T end_ARG  of     P + P    P E  ( 1 n   T )  F 2 subscript superscript norm  P P  subscript P E subscript 1 n superscript  T 2 F \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|^{% 2}_{\\mathrm{F}}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT . The precise decision rule using  T T T italic_T  is given in the next section in  Eq.   27 .",
            "The proof of  Proposition   4  can be gleaned from the proof of  Theorem   2  in  Section   V . In essence, the behavior in  Proposition   4  stems from the fact that the proof of  Lemma   7  in  Section   V-C 1  relies on a concentration inequality (see  Proposition   10 ) which, under the stronger assumption  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , allows us to avoid the poly-logarithmic factor in  Proposition   4  when establishing  Theorem   2 . However, if a standard matrix Bernstein inequality were employed for concentration, the special constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , defined in  Lemma   7 , would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . Then, the proof of  Proposition   4  would follow by using essentially the same logic as the proof of  Theorem   2  and observing that  Eq.   63  yields an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT . Moreover, in this regime, our decision rule returns the alternative hypothesis if and only if  T    log  n n  k T  n n k T\\geq\\frac{\\gamma\\sqrt{\\log n}}{nk} italic_T  divide start_ARG italic_ square-root start_ARG roman_log italic_n end_ARG end_ARG start_ARG italic_n italic_k end_ARG  for some appropriately chosen constant    \\gamma italic_ .",
            "We emphasize that the probability law utilized here differs from that in the minimax risk framework. The definition of minimax risk in  Eq.   22  assumes a fixed graph  G G {\\mathcal{G}} caligraphic_G  and considers probabilities associated with the randomness in the data generating mechanism. In contrast, the probability laws in  Proposition   7  and other results in this section are governed by the graph generation process.",
            "The proof of  Proposition   8  is provided in  Section   A-D . In particular,  Proposition   8  illustrates that  Assumption   4  holds with  h = 7 /  2 h 7 superscript  2 h=7/\\delta^{2} italic_h = 7 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  with high probability. Moreover, random graphs are known to have nice expansion properties  [ 75 , Theorem 2.8]  (also see  [ 76 ] ). Indeed, using  [ 77 , Equation (11)] , we have that for an Erdos-Renyi random graph,   ~  ( G )  1 4  n  p ~ italic- G 1 4 n p \\tilde{\\phi}({\\mathcal{G}})\\geq\\frac{1}{4}np over~ start_ARG italic_ end_ARG ( caligraphic_G )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG italic_n italic_p  with high probability, thereby showing that the pairwise comparison matrix  P P P italic_P  also satisfies  Assumption   2  with   =  3 / ( 12  7  ( 1 +  ) )  superscript  3  12 7 1  \\xi=\\delta^{3}/(12\\cdot 7\\cdot(1+\\delta)) italic_ = italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT / ( 12  7  ( 1 + italic_ ) )  with high probability.  Proposition   7  also implies that an Erdos-Renyi random graph satisfies  Assumption   3  with high probability. Thus, for the case of Erdos-Renyi random graphs, we have again demonstrated that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4  with high probability, as required for theoretical guarantees on our testing procedure. Notably, in this case, the testing procedure requires  O  ( k  n  log  n ) O k n n O(kn\\log n) italic_O ( italic_k italic_n roman_log italic_n )  pairwise comparisons, which matches the total number of observations needed for consistently estimating the parameters of the BTL model in  [ 11 ] .",
            "We prove  Propositions   1 ,  3 ,  2  and  1  in this section. Throughout this proof, we employ a concise notation by using overlapping labels (e.g.,  c , c ~ , c 1 , c 2 , c  , c ^ , ... c ~ c subscript c 1 subscript c 2 superscript c  ^ c ... c,\\tilde{c},c_{1},c_{2},c^{\\prime},\\hat{c},\\dots italic_c , over~ start_ARG italic_c end_ARG , italic_c start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT , over^ start_ARG italic_c end_ARG , ... ) to denote various constants. To avoid ambiguity, we explicitly reserve the notation  c  , c  , c  subscript c  subscript c  subscript c  c_{\\alpha},c_{\\beta},c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  for specially defined constants in  Lemma   7  and the subsequent proof.",
            "where  S B , 0 subscript S B 0 S_{B,0} italic_S start_POSTSUBSCRIPT italic_B , 0 end_POSTSUBSCRIPT  is the matrix in  Eq.   37  with   = 0  0 \\lambda=0 italic_ = 0 . Now consider the  i i i italic_i th term of the   B  T  ( S  S B , 0 ) superscript superscript subscript  B T S subscript S B 0 {\\pi_{B}^{*}}^{\\mathrm{T}}(S-S_{B,0}) italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ( italic_S - italic_S start_POSTSUBSCRIPT italic_B , 0 end_POSTSUBSCRIPT )  as",
            "We remark that if a standard matrix Bernstein inequality  [ 80 ]  were used in the proof of  Lemma   7 , the constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . From  Eq.   63 , we would get an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT , thus proving  Proposition   4 .",
            "Combining  Eq.   67  and  Eq.   68 , and utilizing the fact that  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n",
            "Substituting the above bound in  Eq.   73  we obtain the bound in  Eq.   72  for some constant  c ~ 2 subscript ~ c 2 \\tilde{c}_{2} over~ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT .",
            "Now combining  Eqs.   65 ,  70 ,  71  and  75 , we obtain",
            "where the term  O  ( 1 n 3 ) O 1 superscript n 3 O(\\frac{1}{n^{3}}) italic_O ( divide start_ARG 1 end_ARG start_ARG italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG )  is added to account for the probability with which the event  A 2 subscript A 2 \\mathcal{A}_{2} caligraphic_A start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  Eqs.   68  and  74  holds. Substituting  t = c    log  n t   c n t=\\bar{c}\\log n italic_t = over  start_ARG italic_c end_ARG roman_log italic_n  for some constant  c     c \\bar{c} over  start_ARG italic_c end_ARG , and utilizing the fact that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , we obtain that there exists a constant  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  such that with probability at least  1  O  ( 1 / n 3 ) 1 O 1 superscript n 3 1-O(1/n^{3}) 1 - italic_O ( 1 / italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT ) , we have  T 1  c   n      2 k subscript T 1 subscript c  n superscript subscript norm  2 k T_{1}\\leq c_{\\alpha}\\frac{n\\|\\pi\\|_{\\infty}^{2}}{k} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT divide start_ARG italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_ARG start_ARG italic_k end_ARG . The corresponding lower bounds on  T 1 subscript T 1 T_{1} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  can be obtained in a similar manner, and therefore, for the tail bound on  | T 1 | subscript T 1 |T_{1}| | italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT | , we get a factor of  2 2 2 2 , thus proving  Eq.   56 .",
            "Also, since  D D D italic_D  is a diagonal matrix, we have   D  2 = max i  | D i  i | subscript norm D 2 subscript i subscript D i i \\|D\\|_{2}=\\max_{i}|D_{ii}|  italic_D  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT = roman_max start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT | italic_D start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT | . And by  Eq.   79 , for any fixed  i i i italic_i ,  k  d  D i  i k d subscript D i i kdD_{ii} italic_k italic_d italic_D start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT  is a sum of at most  k  d max k subscript d kd_{\\max} italic_k italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  independent, zero-mean random variables and each random variable takes values in  (  1 , 1 ) 1 1 (-1,1) ( - 1 , 1 ) . Therefore, by applying Hoeffdings inequality, we have",
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows from  Lemma   7 . Now we will derive tail bounds for  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT . To proceed, consider the quantity  T 3 i  j subscript superscript T i j 3 T^{ij}_{3} italic_T start_POSTSUPERSCRIPT italic_i italic_j end_POSTSUPERSCRIPT start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  for  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E  and  i = j i j i\\neq j italic_i = italic_j  defined as the  ( i , j ) i j (i,j) ( italic_i , italic_j ) th term of  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT :",
            "for any fixed  m 1  [ k i 1  i 2 ] , ... , m l  1  [ k i l  1  i l ] formulae-sequence superscript m 1 delimited-[] subscript k subscript i 1 subscript i 2 ... superscript m l 1 delimited-[] subscript k subscript i l 1 subscript i l m^{1}\\in[k_{i_{1}i_{2}}],\\dots,m^{l-1}\\in[k_{i_{l-1}i_{l}}] italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] , ... , italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT end_POSTSUBSCRIPT ]  and  m ~ 1  [ k i l  i l  1 ] , ... , m ~ l  1  [ k i 2  i 1 ] formulae-sequence superscript ~ m 1 delimited-[] subscript k subscript i l subscript i l 1 ... superscript ~ m l 1 delimited-[] subscript k subscript i 2 subscript i 1 \\tilde{m}^{1}\\in[k_{i_{l}i_{l-1}}],\\dots,\\tilde{m}^{l-1}\\in[k_{i_{2}i_{1}}] over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] , ... , over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] . Note that here  Z m j , i j  i j + 1 subscript Z superscript m j subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}} italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  denotes the  m j superscript m j m^{j} italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT th observartion ( m j  [ k i j  i j + 1 ] superscript m j delimited-[] subscript k subscript i j subscript i j 1 m^{j}\\in[k_{i_{j}i_{j+1}}] italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] ) of the form  i j subscript i j i_{j} italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT  vs.  i j + 1 subscript i j 1 i_{j+1} italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT \" and hence  Z m j , i j  i j + 1  Bernoulli  ( p i j  i j + 1 ) similar-to subscript Z superscript m j subscript i j subscript i j 1 Bernoulli subscript p subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}}\\sim{\\mathsf{Bernoulli}}(p_{i_{j}i_{j+1}}) italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  sansserif_Bernoulli ( italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ) . Therefore, we have that  Z F  L subscript Z F L Z_{FL} italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT  follows a Bernoulli distribution with parameter   j = 1 l  1 p i j  i j + 1 superscript subscript product j 1 l 1 subscript p subscript i j subscript i j 1 \\prod_{j=1}^{l-1}p_{i_{j}i_{j+1}}  start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , and  Z B  L subscript Z B L Z_{BL} italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT  follows a Bernoulli distribution with parameters   j = 1 l  1 p i l  j + 1  i l  j superscript subscript product j 1 l 1 subscript p subscript i l j 1 subscript i l j \\prod_{j=1}^{l-1}p_{i_{l-j+1}i_{l-j}}  start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j + 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j end_POSTSUBSCRIPT end_POSTSUBSCRIPT . Based on the Kolgomorov loop criteria, under the hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT , we have  P  ( { Z F  L = 1 } ) P subscript Z F L 1 {\\mathbb{P}}(\\{Z_{FL}=1\\}) blackboard_P ( { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 } )  is the same as  P  ( { Z B  L = 1 } ) P subscript Z B L 1 {\\mathbb{P}}(\\{Z_{BL}=1\\}) blackboard_P ( { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 } )  and moreover both the events  { Z F  L = 1 } subscript Z F L 1 \\{Z_{FL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 }  and  { Z B  L = 1 } subscript Z B L 1 \\{Z_{BL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 }  occur only when each of the random variables  Z m j , i j  i j + 1 subscript Z superscript m j subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}} italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  Z m ~ j , i l  j + 1  i l  j subscript Z superscript ~ m j subscript i l j 1 subscript i l j Z_{\\tilde{m}^{j},{i_{l-j+1}i_{l-j}}} italic_Z start_POSTSUBSCRIPT over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l - italic_j + 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j end_POSTSUBSCRIPT end_POSTSUBSCRIPT  in the product (in  Eq.   97 ) are  1 1 1 1 . Therefore, this motivates the following shuffling process where we essentially replace the data in  Z Z {\\mathcal{Z}} caligraphic_Z  corresponding to event  { Z F  L = 1 } subscript Z F L 1 \\{Z_{FL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 }  by the data corresponding to event  { Z B  L = 1 } subscript Z B L 1 \\{Z_{BL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 } . To proceed with the shuffling process, we begin by uniformly selecting an item  i 1 = i subscript i 1 i i_{1}=i italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT = italic_i  and then randomly choose a comparison of the form  i i i italic_i  vs.  j j j italic_j \" from the data  Z Z \\mathcal{Z} caligraphic_Z , for any  j = i j i j\\neq i italic_j = italic_i  such that  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E . If the outcome of the comparison results in item  j j j italic_j  being preferred over item  i i i italic_i , we move to item  j j j italic_j  (i.e., set  i 2 = j subscript i 2 j i_{2}=j italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT = italic_j ) and continue this process from item  j , j j, italic_j ,  otherwise, we again repeat this step from item  i i i italic_i . This iterative procedure continues until we revisit item  i i i italic_i  after at least one departure, effectively completing a cycle (with  i l = i subscript i l i i_{l}=i italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT = italic_i ). Next, we proceed to remove the data corresponding to the forward cycle  { Z m 1 , i 1  i 2 , ... , Z m l  1 , i l  1  i l } subscript Z superscript m 1 subscript i 1 subscript i 2 ... subscript Z superscript m l 1 subscript i l 1 subscript i l \\{Z_{m^{1},{i_{1}i_{2}}},\\dots,Z_{m^{l-1},{i_{l-1}i_{l}}}\\} { italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , ... , italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT end_POSTSUBSCRIPT }  while adding new data points to  Z Z \\mathcal{Z} caligraphic_Z  corresponding to the backward cycle  { Z m 1 , i l  i l  1 , ... , Z m l  1 , i 2  i 1 } subscript Z superscript m 1 subscript i l subscript i l 1 ... subscript Z superscript m l 1 subscript i 2 subscript i 1 \\{Z_{m^{1},{i_{l}i_{l-1}}},\\dots,Z_{m^{l-1},{i_{2}i_{1}}}\\} { italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , ... , italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT } . This step is illustrated with the following example. Suppose that a cycle of length  3 3 3 3  is found in our dataset. Assume that in this cycle, item  j j j italic_j  is preferred over item  i i i italic_i  in a  i i i italic_i  vs.  j j j italic_j  comparison, followed by item  k k k italic_k  being preferred over item  j j j italic_j  in the  j j j italic_j  vs.  k k k italic_k  comparison, and finally, item  i i i italic_i  triumphs over item  k k k italic_k  in the  k k k italic_k  vs.  i i i italic_i  comparison. According to Kolmogorovs loop criterion, the forward loop probability product:  p i  j  p j  k  p k  i  subscript p i j subscript p j k subscript p k i p_{ij}\\cdot p_{jk}\\cdot p_{ki} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_j italic_k end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_k italic_i end_POSTSUBSCRIPT  should be the same as the backward loop probability product  p i  k  p k  j  p j  i  subscript p i k subscript p k j subscript p j i p_{ik}\\cdot p_{kj}\\cdot p_{ji} italic_p start_POSTSUBSCRIPT italic_i italic_k end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_k italic_j end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_j italic_i end_POSTSUBSCRIPT . This corresponds to replacing these three outcomes with the following comparisons: item  k k k italic_k  being preferred over item  i i i italic_i  in a  i i i italic_i  vs.  k k k italic_k  comparison, item  j j j italic_j  preferred over item  k k k italic_k  in a  k k k italic_k  vs.  j j j italic_j  comparison, and item  i i i italic_i  preferred over  j j j italic_j  in a  j j j italic_j  vs.  i i i italic_i  comparison. This entire process of finding a cycle and replacing the data is repeated for a sufficient number of iterations to ensure robust shuffling. Another example illustrating this data transformation process for a cycle of length  4 4 4 4  is shown in  Fig.   2",
            "In this section, we will perform several experiments on the synthetically generated datasets to verify our theoretical results and the effect of the shuffling techniques discussed above under hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . For the first experiment, we will use the same construction for the pairwise comparison matrix  P P P italic_P  that we utilized in the proof of  Theorem   4  under the null and alternate hypothesis, which are presented in  Eq.   86  and  Eq.   87 . We set the number of pairwise comparisons per pair of agents  k = 12 k 12 k=12 italic_k = 12 , the number of agents  n n n italic_n  is linearly increased from  32 32 32 32  to  128 128 128 128  in  12 12 12 12  equally spaced steps, and the perturbation    \\eta italic_  in ( 88 ) is increased from  0.16 0.16 0.16 0.16  to  0.32 0.32 0.32 0.32  in  12 12 12 12  equally spaced steps. For each value of    \\eta italic_  and  n n n italic_n , simulations are performed by generating  Z i  j  Bin  ( k , p i  j ) similar-to subscript Z i j Bin k subscript p i j Z_{ij}\\sim\\text{Bin}(k,p_{ij}) italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  Bin ( italic_k , italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  for  i = j i j i\\neq j italic_i = italic_j  for both hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , and the corresponding value of values of test statistic  T T T italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and  empirical minimax risk  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  is estimated. The threshold used for the decision rule is set to   2 / n superscript  2 n \\eta^{2}/n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT / italic_n .  Fig.   3  plots the empirical average of  n  T  n T n\\cdot T italic_n  italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  averaged over  250 250 250 250  iterations. Note that for a fixed value of    \\eta italic_ , the values of  n  T  n T n\\cdot T italic_n  italic_T  (under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ) are roughly constant as  n n n italic_n  increases, and the values of  n  T  n T n\\cdot T italic_n  italic_T  increase as    \\eta italic_  increases.  Fig.   3  plots the behavior of  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  for each value of    \\eta italic_  and  n n n italic_n . Observe that  1 R ^ m > 1 / 2 subscript 1 subscript ^ R m 1 2 {\\mathbbm{1}}_{\\hat{\\mathcal{R}}_{\\mathsf{m}}>1/2} blackboard_1 start_POSTSUBSCRIPT over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT > 1 / 2 end_POSTSUBSCRIPT  is largely independent of  n n n italic_n , which is consistent with our derivation in  Section   VI-A , where we have shown that if  8   2  k  c ~ 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c} 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG  then  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Thus, once    \\eta italic_  exceeds a particular threshold  R m subscript R m \\mathcal{R}_{\\mathsf{m}} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  exceeds  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG  for all values of  n n n italic_n .",
            "Moreover, in the sub-sampled case, we use  d = 3  n  p d 3 n p d=3np italic_d = 3 italic_n italic_p  and we use the notation  d max = 3  n  p 2 , d min = n  p 2 formulae-sequence subscript d 3 n p 2 subscript d n p 2 d_{\\max}=\\frac{3np}{2},d_{\\min}=\\frac{np}{2} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT = divide start_ARG 3 italic_n italic_p end_ARG start_ARG 2 end_ARG , italic_d start_POSTSUBSCRIPT roman_min end_POSTSUBSCRIPT = divide start_ARG italic_n italic_p end_ARG start_ARG 2 end_ARG  to denote the maximum degree in the high probability sense (see  Proposition   7 ). On the event  A 0 subscript A 0 \\mathcal{A}_{0} caligraphic_A start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  in  Proposition   7 ,  S S S italic_S  is a valid row stochastic matrix and therefore    \\pi italic_  exists.",
            "By  Proposition   7  we know that  d min  n  p 2 subscript d n p 2 d_{\\min}\\geq\\frac{np}{2} italic_d start_POSTSUBSCRIPT roman_min end_POSTSUBSCRIPT  divide start_ARG italic_n italic_p end_ARG start_ARG 2 end_ARG . Therefore, on the event  A 0 subscript A 0 \\mathcal{A}_{0} caligraphic_A start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT , we have"
        ]
    },
    "id_table_8": {
        "caption": "",
        "table": "S4.Ex25",
        "footnotes": [],
        "references": [
            "Our test requires that the underlying observation graph and the pairwise comparison matrix satisfy certain regularity assumptions, e.g., expansion and bounded principal ratio. To substantiate this, we identify different classes of graphs in  Section   III-E  (see  Propositions   5 ,  6  and  8 ) that fulfill these criteria for all pairwise comparison models.",
            "where  BTL h subscript BTL h \\mathsf{BTL}_{h} sansserif_BTL start_POSTSUBSCRIPT italic_h end_POSTSUBSCRIPT  is the set of all pairwise comparison matrices  B B B italic_B  corresponding to BTL models whose skill scores    R n  superscript R n \\alpha\\in{\\mathbb{R}}^{n} italic_  blackboard_R start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT  satisfy  Eq.   18  with  h =   1 h superscript  1 h=\\delta^{-1} italic_h = italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT .",
            "The proof of  Proposition   8  is provided in  Section   A-D . In particular,  Proposition   8  illustrates that  Assumption   4  holds with  h = 7 /  2 h 7 superscript  2 h=7/\\delta^{2} italic_h = 7 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  with high probability. Moreover, random graphs are known to have nice expansion properties  [ 75 , Theorem 2.8]  (also see  [ 76 ] ). Indeed, using  [ 77 , Equation (11)] , we have that for an Erdos-Renyi random graph,   ~  ( G )  1 4  n  p ~ italic- G 1 4 n p \\tilde{\\phi}({\\mathcal{G}})\\geq\\frac{1}{4}np over~ start_ARG italic_ end_ARG ( caligraphic_G )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG italic_n italic_p  with high probability, thereby showing that the pairwise comparison matrix  P P P italic_P  also satisfies  Assumption   2  with   =  3 / ( 12  7  ( 1 +  ) )  superscript  3  12 7 1  \\xi=\\delta^{3}/(12\\cdot 7\\cdot(1+\\delta)) italic_ = italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT / ( 12  7  ( 1 + italic_ ) )  with high probability.  Proposition   7  also implies that an Erdos-Renyi random graph satisfies  Assumption   3  with high probability. Thus, for the case of Erdos-Renyi random graphs, we have again demonstrated that any pairwise comparison model satisfying  Assumption   1  also satisfies  Assumptions   2 ,  3  and  4  with high probability, as required for theoretical guarantees on our testing procedure. Notably, in this case, the testing procedure requires  O  ( k  n  log  n ) O k n n O(kn\\log n) italic_O ( italic_k italic_n roman_log italic_n )  pairwise comparisons, which matches the total number of observations needed for consistently estimating the parameters of the BTL model in  [ 11 ] .",
            "Thus, from  Eq.   38  and the fact that   max  ( R )  2  d max subscript  R 2 subscript d \\lambda_{\\max}(R)\\leq 2d_{\\max} italic_ start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT ( italic_R )  2 italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT , there exists a constant  c c c italic_c  such that we have",
            "The proof is provided in  Section   V-C 2 . Now under hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT , by  Lemma   8 ,  E H 0  [ T 3 ] = 0 subscript E subscript H 0 delimited-[] subscript T 3 0 {\\mathbb{E}}_{H_{0}}[T_{3}]=0 blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT [ italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT ] = 0  and  var H 0  ( T 3 )  4  n  d max      4 k 2 subscript var subscript H 0 subscript T 3 4 n subscript d subscript superscript norm  4 superscript k 2 {\\mathrm{var}}_{H_{0}}(T_{3})\\leq\\frac{4nd_{\\max}\\|\\pi\\|^{4}_{\\infty}}{k^{2}} roman_var start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ( italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT )  divide start_ARG 4 italic_n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  italic_  start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT  end_POSTSUBSCRIPT end_ARG start_ARG italic_k start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_ARG . Moreover, the event  { T  t } T t \\{T\\geq t\\} { italic_T  italic_t }  can be written as",
            "Combining  Eq.   67  and  Eq.   68 , and utilizing the fact that  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n",
            "Substituting,  t = c  d max  log  n k t c subscript d n k t=c\\sqrt{\\frac{d_{\\max}\\log n}{k}} italic_t = italic_c square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG  for some constant  c c c italic_c  and utilizing the union bound as in  Eq.   68 , we obtain the bound the following bound with probability at least  1  O  ( n  4 ) 1 O superscript n 4 1-O(n^{-4}) 1 - italic_O ( italic_n start_POSTSUPERSCRIPT - 4 end_POSTSUPERSCRIPT ) .",
            "where the term  O  ( 1 n 3 ) O 1 superscript n 3 O(\\frac{1}{n^{3}}) italic_O ( divide start_ARG 1 end_ARG start_ARG italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG )  is added to account for the probability with which the event  A 2 subscript A 2 \\mathcal{A}_{2} caligraphic_A start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  Eqs.   68  and  74  holds. Substituting  t = c    log  n t   c n t=\\bar{c}\\log n italic_t = over  start_ARG italic_c end_ARG roman_log italic_n  for some constant  c     c \\bar{c} over  start_ARG italic_c end_ARG , and utilizing the fact that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , we obtain that there exists a constant  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  such that with probability at least  1  O  ( 1 / n 3 ) 1 O 1 superscript n 3 1-O(1/n^{3}) 1 - italic_O ( 1 / italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT ) , we have  T 1  c   n      2 k subscript T 1 subscript c  n superscript subscript norm  2 k T_{1}\\leq c_{\\alpha}\\frac{n\\|\\pi\\|_{\\infty}^{2}}{k} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT divide start_ARG italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_ARG start_ARG italic_k end_ARG . The corresponding lower bounds on  T 1 subscript T 1 T_{1} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  can be obtained in a similar manner, and therefore, for the tail bound on  | T 1 | subscript T 1 |T_{1}| | italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT | , we get a factor of  2 2 2 2 , thus proving  Eq.   56 .",
            "Combining  Eq.   80  and  Eq.   82  and using the fact that  d  2  d max d 2 subscript d d\\geq 2d_{\\max} italic_d  2 italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  completes the proof.",
            "To obtain tail bounds under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , we again utilize  Eq.   84  as",
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows from  Eq.   85  and   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  follows by applying Hoeffdings inequality. Therefore, we obtain",
            "In this section, we will perform several experiments on the synthetically generated datasets to verify our theoretical results and the effect of the shuffling techniques discussed above under hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . For the first experiment, we will use the same construction for the pairwise comparison matrix  P P P italic_P  that we utilized in the proof of  Theorem   4  under the null and alternate hypothesis, which are presented in  Eq.   86  and  Eq.   87 . We set the number of pairwise comparisons per pair of agents  k = 12 k 12 k=12 italic_k = 12 , the number of agents  n n n italic_n  is linearly increased from  32 32 32 32  to  128 128 128 128  in  12 12 12 12  equally spaced steps, and the perturbation    \\eta italic_  in ( 88 ) is increased from  0.16 0.16 0.16 0.16  to  0.32 0.32 0.32 0.32  in  12 12 12 12  equally spaced steps. For each value of    \\eta italic_  and  n n n italic_n , simulations are performed by generating  Z i  j  Bin  ( k , p i  j ) similar-to subscript Z i j Bin k subscript p i j Z_{ij}\\sim\\text{Bin}(k,p_{ij}) italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  Bin ( italic_k , italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  for  i = j i j i\\neq j italic_i = italic_j  for both hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , and the corresponding value of values of test statistic  T T T italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and  empirical minimax risk  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  is estimated. The threshold used for the decision rule is set to   2 / n superscript  2 n \\eta^{2}/n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT / italic_n .  Fig.   3  plots the empirical average of  n  T  n T n\\cdot T italic_n  italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  averaged over  250 250 250 250  iterations. Note that for a fixed value of    \\eta italic_ , the values of  n  T  n T n\\cdot T italic_n  italic_T  (under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ) are roughly constant as  n n n italic_n  increases, and the values of  n  T  n T n\\cdot T italic_n  italic_T  increase as    \\eta italic_  increases.  Fig.   3  plots the behavior of  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  for each value of    \\eta italic_  and  n n n italic_n . Observe that  1 R ^ m > 1 / 2 subscript 1 subscript ^ R m 1 2 {\\mathbbm{1}}_{\\hat{\\mathcal{R}}_{\\mathsf{m}}>1/2} blackboard_1 start_POSTSUBSCRIPT over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT > 1 / 2 end_POSTSUBSCRIPT  is largely independent of  n n n italic_n , which is consistent with our derivation in  Section   VI-A , where we have shown that if  8   2  k  c ~ 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c} 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG  then  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Thus, once    \\eta italic_  exceeds a particular threshold  R m subscript R m \\mathcal{R}_{\\mathsf{m}} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  exceeds  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG  for all values of  n n n italic_n ."
        ]
    },
    "id_table_9": {
        "caption": "",
        "table": "Ax1.EGx4",
        "footnotes": [],
        "references": [
            "We also prove several auxiliary results. For example, we utilize the notion of separation distance mentioned above to analyze the stability of BTL assumptions in the context of rankings. More specifically, we investigate the deviation from the BTL condition that is sufficient for the ranking produced under the BTL assumption to differ from the classical Borda count ranking  [ 54 ] . Our results in  Proposition   9  show that a deviation of  O  ( 1 / n ) O 1 n O(1/\\sqrt{n}) italic_O ( 1 / square-root start_ARG italic_n end_ARG )  from the BTL condition is sufficient to produce inconsistent BTL and Borda rankings. As another example, during our analysis, we also obtain  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -estimation error bounds for (virtual) BTL parameters in  Lemma   6  when the data is actually generated by a general pairwise comparison model as opposed to a BTL model. These bounds also highlight the robustness of the spectral ranking method under model mismatch.",
            "Let    \\Phi roman_  denote a  decision rule  or  hypothesis test  that maps the consolidated observations  Z Z {\\mathcal{Z}} caligraphic_Z  to  { 0 , 1 } 0 1 \\{0,1\\} { 0 , 1 } , where  0 0  represents the null hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  1 1 1 1  represents the alternative hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . Let  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  denote the probability distributions of the observations  Z Z {\\mathcal{Z}} caligraphic_Z  under  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , respectively. Throughout this paper, we will use  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  when we need to specify a hypothesis, and  P P {\\mathbb{P}} blackboard_P  when a probability expression holds for both hypotheses. Similarly,  E H 0 subscript E subscript H 0 {\\mathbb{E}}_{H_{0}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ,  E H 1 subscript E subscript H 1 {\\mathbb{E}}_{H_{1}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , and  E E {\\mathbb{E}} blackboard_E  will represent the corresponding expectation operators. Furthermore, for a fixed induced graph  G G {\\mathcal{G}} caligraphic_G  satisfying  Assumption   3 , let  M 0 subscript M 0 {\\mathcal{M}}_{0} caligraphic_M start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  M  (  ) M italic- {\\mathcal{M}}(\\epsilon) caligraphic_M ( italic_ )  denote the sets of pairwise comparison models that satisfy the null and alternative hypotheses, respectively, in ( 19 ) along with  Assumptions   1 ,  2  and  4 :",
            "where the infimum is taken over all (possibly randomized)  { 0 , 1 } 0 1 \\{0,1\\} { 0 , 1 } -valued decision rules    \\Phi roman_  based on  Z Z \\mathcal{Z} caligraphic_Z . We would like to emphasize here that the suprema in the minimax risk are over all pairwise comparison matrices with a fixed graph  G G {\\mathcal{G}} caligraphic_G , and the probability measures  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  are defined by the randomness in the data generation process given a fixed graph  G G {\\mathcal{G}} caligraphic_G . Finally, we define the  critical threshold  of the hypothesis testing problem in ( 19 ) as the smallest value of   italic- \\epsilon italic_  for which the minimax risk is bounded by  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG :",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , the critical threshold defined in  Eq.   23  is upper bounded by",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n , the critical threshold defined in  Eq.   23  is upper bounded by",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold, and suppose that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT  and there exists a constant  c 4 > 0 subscript c 4 0 c_{4}>0 italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT > 0  such that the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } . Then, we have the following bounds:",
            "In this section, we present an information-theoretic lower bound on the critical threshold for the hypothesis testing problem in  Eq.   19  for the special case of a complete induced graph  G G {\\mathcal{G}} caligraphic_G . Our lower bound demonstrates the minimax optimality of the scaling of the critical threshold provided in the upper bound in  Theorem   2  for complete induced graphs. (We will show in  Section   III-E  that pairwise comparison models on complete graphs can satisfy  Assumptions   1 ,  2 ,  3  and  4 .) As noted earlier, we assume that  k i  j = k subscript k i j k k_{ij}=k italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_k  for all  i , j  [ n ] i j delimited-[] n i,j\\in[n] italic_i , italic_j  [ italic_n ]  with  i = j i j i\\neq j italic_i = italic_j .",
            "Consider the hypothesis testing problem in  Eq.   19  and assume that the corresponding induced graph  G G {\\mathcal{G}} caligraphic_G  is a complete graph. Then, there exists a constant  c 8 > 0 subscript c 8 0 c_{8}>0 italic_c start_POSTSUBSCRIPT 8 end_POSTSUBSCRIPT > 0  such that the critical threshold defined in  Eq.   23  is lower bounded by",
            "The proof is deferred to  Section   VI-B . Part 1 of  Proposition   9  highlights the relationship between Borda and BTL rankings in terms of the weighted sum of entries of the error matrix. Moreover, part 2 conveys that the BTL assumption may potentially generate a wrong ranking (with respect to the Borda ranking) when the underlying pairwise comparison matrix is  O  ( 1 / n ) O 1 n O(1/\\sqrt{n}) italic_O ( 1 / square-root start_ARG italic_n end_ARG ) -separation distance away from the class of BTL models. Interestingly, this  O  ( 1 / n ) O 1 n O(1/\\sqrt{n}) italic_O ( 1 / square-root start_ARG italic_n end_ARG )  deviation coincides with the critical threshold for the BTL testing problem (up to constant factors). It would be interesting to further explore the stability of the BTL assumption in the context of rankings in future work. We emphasize that our results here only consider stability in the complete graph case. When the induced graph is not complete, defining Borda rankings becomes ambiguous. Indeed, for a general graph, Borda rankings may not coincide with BTL rankings even under the BTL model.",
            "Now again we need to show that   P ^  P  2  O  ( d max / k ) subscript norm ^ P P 2 O subscript d k \\|\\hat{P}-P\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. In case of complete graph, by  [ 80 , Theorem 4.4.5] , we have   P ^  P  2  6  c p  d max / k subscript norm ^ P P 2 6 subscript c p subscript d k \\|\\hat{P}-P\\|_{2}\\leq 6c_{p}\\sqrt{d_{\\max}/k}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  6 italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG  with high probability for some constant  c p subscript c p c_{p} italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT  by the same argument as ( 69 ) (since  var  ( p ^ i  j )  1 / k var subscript ^ p i j 1 k {\\mathrm{var}}(\\hat{p}_{ij})\\leq 1/k roman_var ( over^ start_ARG italic_p end_ARG start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  1 / italic_k ). For a general graph model, and by application of matrix Bernstein inequality, again a  log  n n \\log n roman_log italic_n  factor becomes a bottleneck as we obtain   P ^  P  2  O  ( d max  log  n k ) subscript norm ^ P P 2 O subscript d n k \\|\\hat{P}-P\\|_{2}\\leq O\\big{(}\\sqrt{\\frac{d_{\\max}\\log n}{k}}\\big{)}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG )  (with high probability). Therefore, we again utilize  [ 81 ,  Corollary 2.15]  to obtain tighter concentration bounds on   P ^  P  2 subscript norm ^ P P 2 \\|\\hat{P}-P\\|_{2}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT . Applying,  Lemma   14  we obtain",
            "Also, since  D D D italic_D  is a diagonal matrix, we have   D  2 = max i  | D i  i | subscript norm D 2 subscript i subscript D i i \\|D\\|_{2}=\\max_{i}|D_{ii}|  italic_D  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT = roman_max start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT | italic_D start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT | . And by  Eq.   79 , for any fixed  i i i italic_i ,  k  d  D i  i k d subscript D i i kdD_{ii} italic_k italic_d italic_D start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT  is a sum of at most  k  d max k subscript d kd_{\\max} italic_k italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  independent, zero-mean random variables and each random variable takes values in  (  1 , 1 ) 1 1 (-1,1) ( - 1 , 1 ) . Therefore, by applying Hoeffdings inequality, we have",
            "Bounding   S 0  S ^ 0  2 subscript norm subscript S 0 subscript ^ S 0 2 \\|S_{0}-\\hat{S}_{0}\\|_{2}  italic_S start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT - over^ start_ARG italic_S end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT :  The bound follows by a direct application of  Lemma   9  on   k  d  ( S 0  S ^ 0 )  2 subscript norm k d subscript S 0 subscript ^ S 0 2 \\|kd(S_{0}-\\hat{S}_{0})\\|_{2}  italic_k italic_d ( italic_S start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT - over^ start_ARG italic_S end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT )  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT . Substituting  t = 2  k  d max  log  n t 2 k subscript d n t=2\\sqrt{kd_{\\max}\\log n} italic_t = 2 square-root start_ARG italic_k italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG  utilizing our assumption that  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n , we obtain",
            "In this section, we will provide proofs of  Theorem   4  and  Proposition   9 .",
            "Let   =    P  + P     1 n   T  F / ( n      ) italic- subscript norm  subscript P  subscript P   subscript 1 n superscript  T F n subscript norm  \\epsilon=\\|\\Pi P_{\\theta}+P_{\\theta}\\Pi-\\mathbf{1}_{n}\\pi^{\\mathrm{T}}\\|_{% \\mathrm{F}}/(n\\|\\pi\\|_{\\infty}) italic_ =  roman_ italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT + italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT roman_ - bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT / ( italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT )  to ensure that the  P  subscript P  P_{\\theta} italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT s satisfy the condition of the alternative hypothesis in ( 19 ). Substituting the values of      = y subscript norm  y \\|\\pi\\|_{\\infty}=y  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT = italic_y  and     P  + P  T    1 n   T  F subscript norm  subscript P  superscript subscript P  T  subscript 1 n superscript  T F \\|\\Pi P_{\\theta}+P_{\\theta}^{\\mathrm{T}}\\Pi-\\mathbf{1}_{n}\\pi^{\\mathrm{T}}\\|_{% \\mathrm{F}}  roman_ italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT + italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT roman_ - bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT  implies that",
            "We will focus on the  ( i , j ) i j (i,j) ( italic_i , italic_j ) th term of the product in  Equation   92  for  i = j i j i\\neq j italic_i = italic_j  and denote it as  f  ( p i  j , p i  j  ) f subscript p i j subscript superscript p  i j f(p_{ij},p^{\\prime}_{ij}) italic_f ( italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT , italic_p start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ) :",
            "By our construction of pairwise comparison matrices both  p i  j , p i  j  subscript p i j subscript superscript p  i j p_{ij},p^{\\prime}_{ij} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT , italic_p start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  take values in set  { 1 2 , 1 2 +  } 1 2 1 2  \\{\\frac{1}{2},\\frac{1}{2}+\\eta\\} { divide start_ARG 1 end_ARG start_ARG 2 end_ARG , divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_ }  if  j  i j i j\\geq i italic_j  italic_i  (and  { 1 2 , 1 2   } 1 2 1 2  \\{\\frac{1}{2},\\frac{1}{2}-\\eta\\} { divide start_ARG 1 end_ARG start_ARG 2 end_ARG , divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ }  otherwise). Furthermore, whenever either  p i  j subscript p i j p_{ij} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  or  p i  j  superscript subscript p i j  p_{ij}^{\\prime} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  equals  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG , we have  f  ( p i  j , p i  j  ) = 1 f subscript p i j subscript superscript p  i j 1 f(p_{ij},p^{\\prime}_{ij})=1 italic_f ( italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT , italic_p start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ) = 1 . Additionally, by  Eq.   93  we have  f  ( 1 2   , 1 2   ) = f  ( 1 2 +  , 1 2 +  ) f 1 2  1 2  f 1 2  1 2  f(\\frac{1}{2}-\\eta,\\frac{1}{2}-\\eta)=f(\\frac{1}{2}+\\eta,\\frac{1}{2}+\\eta) italic_f ( divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ , divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ ) = italic_f ( divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_ , divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_ ) . Let a random variable  B B B italic_B  denote the number of occurrences where  p i  j = p i  j  = 1 2 +  subscript p i j superscript subscript p i j  1 2  p_{ij}=p_{ij}^{\\prime}=\\frac{1}{2}+\\eta italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT = divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_  in randomly drawn permutation    \\theta italic_  and    superscript   \\theta^{\\prime} italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  (or equivalently,  p i  j = p i  j  = 1 2   subscript p i j superscript subscript p i j  1 2  p_{ij}=p_{ij}^{\\prime}=\\frac{1}{2}-\\eta italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT = divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ ). Consequently, we obtain",
            "The above equation combined with  Eq.   94  gives",
            "Substituting the above bound in  Eq.   95 , we obtain",
            "where    \\zeta italic_  holds for some constant  c  superscript c  c^{\\prime} italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  if  8   2  k  c ~ . 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c}. 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG .  Moreover, the quantity in  Eq.   96  is bounded above by  1 4 1 4 \\frac{1}{4} divide start_ARG 1 end_ARG start_ARG 4 end_ARG  if  c ~ ~ c \\tilde{c} over~ start_ARG italic_c end_ARG  is small enough. However, by  Eq.   90 , we have   2  C ~  n   2 superscript  2 ~ C n superscript italic- 2 \\eta^{2}\\geq\\tilde{C}n\\epsilon^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_C end_ARG italic_n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  for some constant  C ~ ~ C \\tilde{C} over~ start_ARG italic_C end_ARG . Therefore, we have shown that if  8  C ~  n  k   2  c ~ 8 ~ C n k superscript italic- 2 ~ c 8\\tilde{C}nk\\epsilon^{2}\\leq\\tilde{c} 8 over~ start_ARG italic_C end_ARG italic_n italic_k italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_c end_ARG , then   2 ( P  | | P 0 )  1 4 \\chi^{2}({\\mathbb{P}}_{\\Theta}||{\\mathbb{P}}_{0})\\leq\\frac{1}{4} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( blackboard_P start_POSTSUBSCRIPT roman_ end_POSTSUBSCRIPT | | blackboard_P start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG , which by  Eq.   91  implies that the minimax risk  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Hence,   c 2  c / ( k  n ) superscript subscript  c 2 c k n \\varepsilon_{\\mathsf{c}}^{2}\\geq c/(kn) italic_ start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  italic_c / ( italic_k italic_n )  as desired.",
            "for any fixed  m 1  [ k i 1  i 2 ] , ... , m l  1  [ k i l  1  i l ] formulae-sequence superscript m 1 delimited-[] subscript k subscript i 1 subscript i 2 ... superscript m l 1 delimited-[] subscript k subscript i l 1 subscript i l m^{1}\\in[k_{i_{1}i_{2}}],\\dots,m^{l-1}\\in[k_{i_{l-1}i_{l}}] italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] , ... , italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT end_POSTSUBSCRIPT ]  and  m ~ 1  [ k i l  i l  1 ] , ... , m ~ l  1  [ k i 2  i 1 ] formulae-sequence superscript ~ m 1 delimited-[] subscript k subscript i l subscript i l 1 ... superscript ~ m l 1 delimited-[] subscript k subscript i 2 subscript i 1 \\tilde{m}^{1}\\in[k_{i_{l}i_{l-1}}],\\dots,\\tilde{m}^{l-1}\\in[k_{i_{2}i_{1}}] over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] , ... , over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] . Note that here  Z m j , i j  i j + 1 subscript Z superscript m j subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}} italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  denotes the  m j superscript m j m^{j} italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT th observartion ( m j  [ k i j  i j + 1 ] superscript m j delimited-[] subscript k subscript i j subscript i j 1 m^{j}\\in[k_{i_{j}i_{j+1}}] italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] ) of the form  i j subscript i j i_{j} italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT  vs.  i j + 1 subscript i j 1 i_{j+1} italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT \" and hence  Z m j , i j  i j + 1  Bernoulli  ( p i j  i j + 1 ) similar-to subscript Z superscript m j subscript i j subscript i j 1 Bernoulli subscript p subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}}\\sim{\\mathsf{Bernoulli}}(p_{i_{j}i_{j+1}}) italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  sansserif_Bernoulli ( italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ) . Therefore, we have that  Z F  L subscript Z F L Z_{FL} italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT  follows a Bernoulli distribution with parameter   j = 1 l  1 p i j  i j + 1 superscript subscript product j 1 l 1 subscript p subscript i j subscript i j 1 \\prod_{j=1}^{l-1}p_{i_{j}i_{j+1}}  start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , and  Z B  L subscript Z B L Z_{BL} italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT  follows a Bernoulli distribution with parameters   j = 1 l  1 p i l  j + 1  i l  j superscript subscript product j 1 l 1 subscript p subscript i l j 1 subscript i l j \\prod_{j=1}^{l-1}p_{i_{l-j+1}i_{l-j}}  start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j + 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j end_POSTSUBSCRIPT end_POSTSUBSCRIPT . Based on the Kolgomorov loop criteria, under the hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT , we have  P  ( { Z F  L = 1 } ) P subscript Z F L 1 {\\mathbb{P}}(\\{Z_{FL}=1\\}) blackboard_P ( { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 } )  is the same as  P  ( { Z B  L = 1 } ) P subscript Z B L 1 {\\mathbb{P}}(\\{Z_{BL}=1\\}) blackboard_P ( { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 } )  and moreover both the events  { Z F  L = 1 } subscript Z F L 1 \\{Z_{FL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 }  and  { Z B  L = 1 } subscript Z B L 1 \\{Z_{BL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 }  occur only when each of the random variables  Z m j , i j  i j + 1 subscript Z superscript m j subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}} italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  Z m ~ j , i l  j + 1  i l  j subscript Z superscript ~ m j subscript i l j 1 subscript i l j Z_{\\tilde{m}^{j},{i_{l-j+1}i_{l-j}}} italic_Z start_POSTSUBSCRIPT over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l - italic_j + 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j end_POSTSUBSCRIPT end_POSTSUBSCRIPT  in the product (in  Eq.   97 ) are  1 1 1 1 . Therefore, this motivates the following shuffling process where we essentially replace the data in  Z Z {\\mathcal{Z}} caligraphic_Z  corresponding to event  { Z F  L = 1 } subscript Z F L 1 \\{Z_{FL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 }  by the data corresponding to event  { Z B  L = 1 } subscript Z B L 1 \\{Z_{BL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 } . To proceed with the shuffling process, we begin by uniformly selecting an item  i 1 = i subscript i 1 i i_{1}=i italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT = italic_i  and then randomly choose a comparison of the form  i i i italic_i  vs.  j j j italic_j \" from the data  Z Z \\mathcal{Z} caligraphic_Z , for any  j = i j i j\\neq i italic_j = italic_i  such that  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E . If the outcome of the comparison results in item  j j j italic_j  being preferred over item  i i i italic_i , we move to item  j j j italic_j  (i.e., set  i 2 = j subscript i 2 j i_{2}=j italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT = italic_j ) and continue this process from item  j , j j, italic_j ,  otherwise, we again repeat this step from item  i i i italic_i . This iterative procedure continues until we revisit item  i i i italic_i  after at least one departure, effectively completing a cycle (with  i l = i subscript i l i i_{l}=i italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT = italic_i ). Next, we proceed to remove the data corresponding to the forward cycle  { Z m 1 , i 1  i 2 , ... , Z m l  1 , i l  1  i l } subscript Z superscript m 1 subscript i 1 subscript i 2 ... subscript Z superscript m l 1 subscript i l 1 subscript i l \\{Z_{m^{1},{i_{1}i_{2}}},\\dots,Z_{m^{l-1},{i_{l-1}i_{l}}}\\} { italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , ... , italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT end_POSTSUBSCRIPT }  while adding new data points to  Z Z \\mathcal{Z} caligraphic_Z  corresponding to the backward cycle  { Z m 1 , i l  i l  1 , ... , Z m l  1 , i 2  i 1 } subscript Z superscript m 1 subscript i l subscript i l 1 ... subscript Z superscript m l 1 subscript i 2 subscript i 1 \\{Z_{m^{1},{i_{l}i_{l-1}}},\\dots,Z_{m^{l-1},{i_{2}i_{1}}}\\} { italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , ... , italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT } . This step is illustrated with the following example. Suppose that a cycle of length  3 3 3 3  is found in our dataset. Assume that in this cycle, item  j j j italic_j  is preferred over item  i i i italic_i  in a  i i i italic_i  vs.  j j j italic_j  comparison, followed by item  k k k italic_k  being preferred over item  j j j italic_j  in the  j j j italic_j  vs.  k k k italic_k  comparison, and finally, item  i i i italic_i  triumphs over item  k k k italic_k  in the  k k k italic_k  vs.  i i i italic_i  comparison. According to Kolmogorovs loop criterion, the forward loop probability product:  p i  j  p j  k  p k  i  subscript p i j subscript p j k subscript p k i p_{ij}\\cdot p_{jk}\\cdot p_{ki} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_j italic_k end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_k italic_i end_POSTSUBSCRIPT  should be the same as the backward loop probability product  p i  k  p k  j  p j  i  subscript p i k subscript p k j subscript p j i p_{ik}\\cdot p_{kj}\\cdot p_{ji} italic_p start_POSTSUBSCRIPT italic_i italic_k end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_k italic_j end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_j italic_i end_POSTSUBSCRIPT . This corresponds to replacing these three outcomes with the following comparisons: item  k k k italic_k  being preferred over item  i i i italic_i  in a  i i i italic_i  vs.  k k k italic_k  comparison, item  j j j italic_j  preferred over item  k k k italic_k  in a  k k k italic_k  vs.  j j j italic_j  comparison, and item  i i i italic_i  preferred over  j j j italic_j  in a  j j j italic_j  vs.  i i i italic_i  comparison. This entire process of finding a cycle and replacing the data is repeated for a sufficient number of iterations to ensure robust shuffling. Another example illustrating this data transformation process for a cycle of length  4 4 4 4  is shown in  Fig.   2",
            "This yields the bound  a  ( 1   )   ~ a 1  ~  a\\geq(1-\\nu)\\tilde{\\nu} italic_a  ( 1 - italic_ ) over~ start_ARG italic_ end_ARG  on  a a a italic_a  in  Proposition   6 . Now to show  Assumption   2  holds for this expander, we substitute  T = S c T superscript S c \\mathcal{T}=\\mathcal{S}^{\\mathrm{c}} caligraphic_T = caligraphic_S start_POSTSUPERSCRIPT roman_c end_POSTSUPERSCRIPT  in  Eq.   99  and which by a simple argument gives",
            "Finally, combining the bounds on  L 1 subscript L 1 L_{1} italic_L start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  (see  Lemma   10 ),  L 2 subscript L 2 L_{2} italic_L start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  (see  Eq.   104 ),  L 3 subscript L 3 L_{3} italic_L start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  (see  Eq.   109 ) together, we get the following bound simultaneously for all  m  [ n ] m delimited-[] n m\\in[n] italic_m  [ italic_n ] :"
        ]
    },
    "id_table_10": {
        "caption": "",
        "table": "S4.E32",
        "footnotes": [],
        "references": [
            "The proof of  Proposition   4  can be gleaned from the proof of  Theorem   2  in  Section   V . In essence, the behavior in  Proposition   4  stems from the fact that the proof of  Lemma   7  in  Section   V-C 1  relies on a concentration inequality (see  Proposition   10 ) which, under the stronger assumption  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , allows us to avoid the poly-logarithmic factor in  Proposition   4  when establishing  Theorem   2 . However, if a standard matrix Bernstein inequality were employed for concentration, the special constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , defined in  Lemma   7 , would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . Then, the proof of  Proposition   4  would follow by using essentially the same logic as the proof of  Theorem   2  and observing that  Eq.   63  yields an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT . Moreover, in this regime, our decision rule returns the alternative hypothesis if and only if  T    log  n n  k T  n n k T\\geq\\frac{\\gamma\\sqrt{\\log n}}{nk} italic_T  divide start_ARG italic_ square-root start_ARG roman_log italic_n end_ARG end_ARG start_ARG italic_n italic_k end_ARG  for some appropriately chosen constant    \\gamma italic_ .",
            "Finally,    ( R ) =   ( ( R + R T ) / 2 ) italic- R italic- R superscript R T 2 \\phi(R)=\\phi((R+R^{\\mathrm{T}})/2) italic_ ( italic_R ) = italic_ ( ( italic_R + italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) / 2 )  follows by a little algebra. Observe that both  R R R italic_R  and  ( R + R T ) / 2 R superscript R T 2 (R+R^{\\mathrm{T}})/2 ( italic_R + italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) / 2  share the same left and right singular vectors    \\sqrt{\\pi} square-root start_ARG italic_ end_ARG . Moreover, the numerator term in  Eq.   10  can be simplified as",
            "The equivalence of the denominator terms in  Eq.   10  follows from  Eq.   11 , thus proving    ( R ) =   ( ( R + R T ) / 2 ) =   ( R T ) italic- R italic- R superscript R T 2 italic- superscript R T \\phi(R)=\\phi((R+R^{\\mathrm{T}})/2)=\\phi(R^{\\mathrm{T}}) italic_ ( italic_R ) = italic_ ( ( italic_R + italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) / 2 ) = italic_ ( italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) .",
            "The proof of  Lemma   10  is provided in  Section   B-B . Now we focus on the second term  L 2 = (  i   i  )  S i  i subscript L 2 subscript  i subscript superscript  i subscript S i i L_{2}=\\left({\\pi}_{i}-\\pi^{*}_{i}\\right){S}_{ii} italic_L start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT = ( italic_ start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT - italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) italic_S start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT . Observe that,",
            "Therefore, combining the above bound along with  Lemma   11  and  Eq.   106 , we obtain the following bound on  L 3 , 2 subscript L 3 2 L_{3,2} italic_L start_POSTSUBSCRIPT 3 , 2 end_POSTSUBSCRIPT  in the sub-sampled case.",
            "Finally, combining the bounds on  L 1 subscript L 1 L_{1} italic_L start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  (see  Lemma   10 ),  L 2 subscript L 2 L_{2} italic_L start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  (see  Eq.   104 ),  L 3 subscript L 3 L_{3} italic_L start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  (see  Eq.   109 ) together, we get the following bound simultaneously for all  m  [ n ] m delimited-[] n m\\in[n] italic_m  [ italic_n ] :",
            "Next, in order to apply  Proposition   10  on  A ^ ^ A \\hat{A} over^ start_ARG italic_A end_ARG , we need to calculate parameters   ^  ( A ^ ) ,  ^   ( A ^ ) ,   ( A ^ ) , R  ( A ^ ) ^  ^ A subscript ^  ^ A  ^ A R ^ A \\hat{\\sigma}(\\hat{A}),\\hat{\\sigma}_{*}(\\hat{A}),\\nu(\\hat{A}),R(\\hat{A}) over^ start_ARG italic_ end_ARG ( over^ start_ARG italic_A end_ARG ) , over^ start_ARG italic_ end_ARG start_POSTSUBSCRIPT  end_POSTSUBSCRIPT ( over^ start_ARG italic_A end_ARG ) , italic_ ( over^ start_ARG italic_A end_ARG ) , italic_R ( over^ start_ARG italic_A end_ARG ) . Note that each entry of  A i  j subscript A i j A_{ij} italic_A start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  is independent of one another. Therefore, for  i = j i j i\\neq j italic_i = italic_j ,  E [ ( A ^ T A ^ ] ) i  j ] = 0 \\mathbb{E}[(\\hat{A}^{\\mathrm{T}}\\hat{A}])_{ij}]=0 blackboard_E [ ( over^ start_ARG italic_A end_ARG start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT over^ start_ARG italic_A end_ARG ] ) start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ] = 0 . Moreover, we have",
            "Next we will apply  Proposition   10  on the  V ^ i  j superscript ^ V i j \\hat{V}^{ij} over^ start_ARG italic_V end_ARG start_POSTSUPERSCRIPT italic_i italic_j end_POSTSUPERSCRIPT , but first we need to calculate parameters   ^  ( Y ^  E  [ Y ^ ] ) . ^  ^ Y E delimited-[] ^ Y \\hat{\\sigma}(\\hat{Y}-{\\mathbb{E}}[\\hat{Y}]). over^ start_ARG italic_ end_ARG ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) .  Using the same reasoning as in the proof of  Lemma   14 , for  i = j i j i\\neq j italic_i = italic_j  and  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E , we have  E  [ ( ( Y ^  E  [ Y ^ ] ) T  ( Y ^  E  [ Y ^ ] ) ) i  j ] = 0 E delimited-[] subscript superscript ^ Y E delimited-[] ^ Y T ^ Y E delimited-[] ^ Y i j 0 \\mathbb{E}[((\\hat{Y}-{\\mathbb{E}}[\\hat{Y}])^{\\mathrm{T}}(\\hat{Y}-{\\mathbb{E}}[% \\hat{Y}]))_{ij}]=0 blackboard_E [ ( ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) ) start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ] = 0 . Moreover,"
        ]
    },
    "id_table_11": {
        "caption": "",
        "table": "S4.Ex26",
        "footnotes": [],
        "references": [
            "We introduce the following assumption on the edge expansion of the DTM  R R R italic_R  in  Eq.   11 .",
            "The equivalence of the denominator terms in  Eq.   10  follows from  Eq.   11 , thus proving    ( R ) =   ( ( R + R T ) / 2 ) =   ( R T ) italic- R italic- R superscript R T 2 italic- superscript R T \\phi(R)=\\phi((R+R^{\\mathrm{T}})/2)=\\phi(R^{\\mathrm{T}}) italic_ ( italic_R ) = italic_ ( ( italic_R + italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) / 2 ) = italic_ ( italic_R start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ) .",
            "The proof of  Lemma   11  is provided in  Section   B-C .",
            "The bounds for the first term    m    2 subscript norm superscript  m  2 \\|{\\pi}^{m}-{\\pi}\\|_{2}  italic_ start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT - italic_  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  have been derived in  Lemma   11  and the error bounds for second term        2 , subscript norm  superscript  2 \\|{\\pi}-\\pi^{*}\\|_{2},  italic_ - italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ,  are provided below in the ensuing lemma.",
            "Therefore, combining the above bound along with  Lemma   11  and  Eq.   106 , we obtain the following bound on  L 3 , 2 subscript L 3 2 L_{3,2} italic_L start_POSTSUBSCRIPT 3 , 2 end_POSTSUBSCRIPT  in the sub-sampled case.",
            "where in the last step, we have utilized the fact that  n  p  log  n n p n np\\geq\\log n italic_n italic_p  roman_log italic_n . Using the same technique, we can obtain a similar bound for   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT . Now using  Eq.   111  and bounds on   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  to upper bound    m T  ( S m  S )  2 subscript norm superscript  superscript m T superscript S m S 2 \\|\\pi^{m^{\\mathrm{T}}}(S^{m}-S)\\|_{2}  italic_ start_POSTSUPERSCRIPT italic_m start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT - italic_S )  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  gives",
            "Therefore, with probability at least  1  O  ( n  3 ) 1 O superscript n 3 1-O(n^{-3}) 1 - italic_O ( italic_n start_POSTSUPERSCRIPT - 3 end_POSTSUPERSCRIPT ) , we have     T  D  2  n       . subscript norm superscript  superscript T D 2 n subscript norm superscript  \\|\\pi^{*^{\\mathrm{T}}}D\\|_{2}\\leq\\sqrt{n}\\|\\pi^{*}\\|_{\\infty}.  italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT italic_D  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  square-root start_ARG italic_n end_ARG  italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT .  Applying the same technique to  (   T  ( S 0  S 0  ) ) i subscript superscript  superscript T subscript S 0 superscript subscript S 0 i (\\pi^{*^{\\mathrm{T}}}({S_{0}}-S_{0}^{*}))_{i} ( italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT - italic_S start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT ) ) start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  yields a similar high probability bound, and thus  Eq.   112  completes the proof.",
            "and  0 0  otherwise. Therefore,    ( A ^ )  1 4  k  ^ A 1 4 k \\nu(\\hat{A})\\leq\\frac{1}{\\sqrt{4k}} italic_ ( over^ start_ARG italic_A end_ARG )  divide start_ARG 1 end_ARG start_ARG square-root start_ARG 4 italic_k end_ARG end_ARG . Finally,  R  ( A ^ )  1 k R ^ A 1 k R(\\hat{A})\\leq\\frac{1}{k} italic_R ( over^ start_ARG italic_A end_ARG )  divide start_ARG 1 end_ARG start_ARG italic_k end_ARG  as  | V i  j , m |  1 k superscript V i j m 1 k \\left|V^{ij,m}\\right|\\leq\\frac{1}{k} | italic_V start_POSTSUPERSCRIPT italic_i italic_j , italic_m end_POSTSUPERSCRIPT |  divide start_ARG 1 end_ARG start_ARG italic_k end_ARG . Substituting, the above bounds in  Eq.   113  proves the lemma.",
            "Therefore, the proof follows by plugging in the bounds into  Eq.   113 ."
        ]
    },
    "id_table_12": {
        "caption": "",
        "table": "Ax1.EGx5",
        "footnotes": [],
        "references": [
            "Therefore, with probability at least  1  O  ( n  3 ) 1 O superscript n 3 1-O(n^{-3}) 1 - italic_O ( italic_n start_POSTSUPERSCRIPT - 3 end_POSTSUPERSCRIPT ) , we have     T  D  2  n       . subscript norm superscript  superscript T D 2 n subscript norm superscript  \\|\\pi^{*^{\\mathrm{T}}}D\\|_{2}\\leq\\sqrt{n}\\|\\pi^{*}\\|_{\\infty}.  italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT italic_D  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  square-root start_ARG italic_n end_ARG  italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT .  Applying the same technique to  (   T  ( S 0  S 0  ) ) i subscript superscript  superscript T subscript S 0 superscript subscript S 0 i (\\pi^{*^{\\mathrm{T}}}({S_{0}}-S_{0}^{*}))_{i} ( italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT - italic_S start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT ) ) start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  yields a similar high probability bound, and thus  Eq.   112  completes the proof."
        ]
    },
    "id_table_13": {
        "caption": "",
        "table": "S4.Ex33",
        "footnotes": [],
        "references": [
            "Since  S  superscript S S^{*} italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  is the canonical Markov matrix corresponding to a complete graph, we get   S   1 n    T     1  1   6 subscript norm superscript S subscript 1 n superscript  superscript T superscript  superscript 1 1  6 \\|S^{*}-{\\mathbf{1}}_{n}\\pi^{*^{\\mathrm{T}}}\\|_{\\pi^{*^{-1}}}\\leq 1-\\frac{% \\delta}{6}  italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT - bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT end_POSTSUBSCRIPT  1 - divide start_ARG italic_ end_ARG start_ARG 6 end_ARG  by  Lemma   3 . We provide a high probability upper bound on   S  S      1 subscript norm S superscript S superscript  superscript 1 \\|{S}-S^{*}\\|_{\\pi^{*^{-1}}}  italic_S - italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT end_POSTSUBSCRIPT  in the subsampled scenario in  Lemma   13 . Combining these two bounds, we obtain that the denominator term is lower bounded by   / 12  12 \\delta/12 italic_ / 12 . Now, it remains to bound    m T  ( S m  S  )     1 subscript norm superscript  superscript m T superscript S m superscript S superscript  superscript 1 \\|{\\pi}^{m^{\\mathrm{T}}}({S}^{m}-{S^{*}})\\|_{\\pi^{*^{-1}}}  italic_ start_POSTSUPERSCRIPT italic_m start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT - italic_S start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT end_POSTSUBSCRIPT . For  j = m j m j\\neq m italic_j = italic_m , the  j j j italic_j th entry of   m T  ( S m  S ) superscript  superscript m T superscript S m S {\\pi}^{m^{\\mathrm{T}}}({S}^{m}-{S}) italic_ start_POSTSUPERSCRIPT italic_m start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_S start_POSTSUPERSCRIPT italic_m end_POSTSUPERSCRIPT - italic_S )  is given by",
            "Utilizing  Lemma   13  and using the same argument as in  Section   B-C  yields, we obtain",
            "and  0 0  otherwise. Therefore,    ( A ^ )  1 4  k  ^ A 1 4 k \\nu(\\hat{A})\\leq\\frac{1}{\\sqrt{4k}} italic_ ( over^ start_ARG italic_A end_ARG )  divide start_ARG 1 end_ARG start_ARG square-root start_ARG 4 italic_k end_ARG end_ARG . Finally,  R  ( A ^ )  1 k R ^ A 1 k R(\\hat{A})\\leq\\frac{1}{k} italic_R ( over^ start_ARG italic_A end_ARG )  divide start_ARG 1 end_ARG start_ARG italic_k end_ARG  as  | V i  j , m |  1 k superscript V i j m 1 k \\left|V^{ij,m}\\right|\\leq\\frac{1}{k} | italic_V start_POSTSUPERSCRIPT italic_i italic_j , italic_m end_POSTSUPERSCRIPT |  divide start_ARG 1 end_ARG start_ARG italic_k end_ARG . Substituting, the above bounds in  Eq.   113  proves the lemma.",
            "Therefore, the proof follows by plugging in the bounds into  Eq.   113 ."
        ]
    },
    "id_table_14": {
        "caption": "",
        "table": "Ax1.EGx6",
        "footnotes": [],
        "references": [
            "Now again we need to show that   P ^  P  2  O  ( d max / k ) subscript norm ^ P P 2 O subscript d k \\|\\hat{P}-P\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. In case of complete graph, by  [ 80 , Theorem 4.4.5] , we have   P ^  P  2  6  c p  d max / k subscript norm ^ P P 2 6 subscript c p subscript d k \\|\\hat{P}-P\\|_{2}\\leq 6c_{p}\\sqrt{d_{\\max}/k}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  6 italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG  with high probability for some constant  c p subscript c p c_{p} italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT  by the same argument as ( 69 ) (since  var  ( p ^ i  j )  1 / k var subscript ^ p i j 1 k {\\mathrm{var}}(\\hat{p}_{ij})\\leq 1/k roman_var ( over^ start_ARG italic_p end_ARG start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  1 / italic_k ). For a general graph model, and by application of matrix Bernstein inequality, again a  log  n n \\log n roman_log italic_n  factor becomes a bottleneck as we obtain   P ^  P  2  O  ( d max  log  n k ) subscript norm ^ P P 2 O subscript d n k \\|\\hat{P}-P\\|_{2}\\leq O\\big{(}\\sqrt{\\frac{d_{\\max}\\log n}{k}}\\big{)}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG )  (with high probability). Therefore, we again utilize  [ 81 ,  Corollary 2.15]  to obtain tighter concentration bounds on   P ^  P  2 subscript norm ^ P P 2 \\|\\hat{P}-P\\|_{2}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT . Applying,  Lemma   14  we obtain",
            "The proofs of  Lemma   14  and  Lemma   15  are provided in  Section   D-A  and  Section   D-B , respectively. The proofs of both the lemmata are based on the ensuing proposition from  [ 81 ] .",
            "Next we will apply  Proposition   10  on the  V ^ i  j superscript ^ V i j \\hat{V}^{ij} over^ start_ARG italic_V end_ARG start_POSTSUPERSCRIPT italic_i italic_j end_POSTSUPERSCRIPT , but first we need to calculate parameters   ^  ( Y ^  E  [ Y ^ ] ) . ^  ^ Y E delimited-[] ^ Y \\hat{\\sigma}(\\hat{Y}-{\\mathbb{E}}[\\hat{Y}]). over^ start_ARG italic_ end_ARG ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) .  Using the same reasoning as in the proof of  Lemma   14 , for  i = j i j i\\neq j italic_i = italic_j  and  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E , we have  E  [ ( ( Y ^  E  [ Y ^ ] ) T  ( Y ^  E  [ Y ^ ] ) ) i  j ] = 0 E delimited-[] subscript superscript ^ Y E delimited-[] ^ Y T ^ Y E delimited-[] ^ Y i j 0 \\mathbb{E}[((\\hat{Y}-{\\mathbb{E}}[\\hat{Y}])^{\\mathrm{T}}(\\hat{Y}-{\\mathbb{E}}[% \\hat{Y}]))_{ij}]=0 blackboard_E [ ( ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ( over^ start_ARG italic_Y end_ARG - blackboard_E [ over^ start_ARG italic_Y end_ARG ] ) ) start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ] = 0 . Moreover,",
            "Similarly, using the same reasoning as in proof of  Lemma   14  we can show that"
        ]
    },
    "id_table_15": {
        "caption": "",
        "table": "Ax1.EGx7",
        "footnotes": [],
        "references": [
            "For a general graph model (with  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n ), an application of matrix Bernstein inequality yields   Q  2  O  ( d max  log  n k ) subscript norm Q 2 O subscript d n k \\|Q\\|_{2}\\leq O(\\sqrt{\\frac{d_{\\max}\\log n}{k}})  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG )  (with high probability). The extra  log  n n \\log n roman_log italic_n  factor becomes a bottleneck later in the analysis. However, using recent advances in concentration inequalities  [ 81 ,  Corollary 2.15]  we can indeed show that if  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , then   Q  2  O  ( d max / k ) subscript norm Q 2 O subscript d k \\|Q\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. The tail bounds of   Q  2 subscript norm Q 2 \\|Q\\|_{2}  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  are computed in  Lemma   15 , and therefore, we have",
            "The proofs of  Lemma   14  and  Lemma   15  are provided in  Section   D-A  and  Section   D-B , respectively. The proofs of both the lemmata are based on the ensuing proposition from  [ 81 ] ."
        ]
    },
    "id_table_16": {
        "caption": "",
        "table": "S4.Ex44",
        "footnotes": [],
        "references": [
            "The proof is provided in  Section   A-A ; our argument is a modification of that in  [ 61 , Theorem 3.1] .  Proposition   5  illustrates that  Assumption   4  holds with  h = 1 /  2 h 1 superscript  2 h=1/\\delta^{2} italic_h = 1 / italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT . It also implies that the pairwise comparison model satisfies  Assumption   2  with   =  3 4  ( 1 +  )  superscript  3 4 1  \\xi=\\frac{\\delta^{3}}{4(1+\\delta)} italic_ = divide start_ARG italic_ start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG start_ARG 4 ( 1 + italic_ ) end_ARG , because we obtain the following lower bound on the edge expansion    ( R ) italic- R \\phi(R) italic_ ( italic_R )  using  Eq.   16  by substituting  d = 2  n d 2 n d=2n italic_d = 2 italic_n :",
            "Using  Eq.   16 , this gives     6 c ~  ( a )  ( 1 +  )   ~  superscript  6 ~ c a 1  ~  \\xi\\geq\\frac{\\delta^{6}}{\\tilde{c}(a)(1+\\delta)}\\tilde{\\nu} italic_  divide start_ARG italic_ start_POSTSUPERSCRIPT 6 end_POSTSUPERSCRIPT end_ARG start_ARG over~ start_ARG italic_c end_ARG ( italic_a ) ( 1 + italic_ ) end_ARG over~ start_ARG italic_ end_ARG , where  c ~  ( a ) ~ c a \\tilde{c}(a) over~ start_ARG italic_c end_ARG ( italic_a )  is the constant in  Proposition   6 ."
        ]
    },
    "id_table_17": {
        "caption": "",
        "table": "Ax1.EGx8",
        "footnotes": [],
        "references": []
    },
    "id_table_18": {
        "caption": "",
        "table": "S4.Ex48",
        "footnotes": [],
        "references": [
            "where  BTL h subscript BTL h \\mathsf{BTL}_{h} sansserif_BTL start_POSTSUBSCRIPT italic_h end_POSTSUBSCRIPT  is the set of all pairwise comparison matrices  B B B italic_B  corresponding to BTL models whose skill scores    R n  superscript R n \\alpha\\in{\\mathbb{R}}^{n} italic_  blackboard_R start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT  satisfy  Eq.   18  with  h =   1 h superscript  1 h=\\delta^{-1} italic_h = italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT ."
        ]
    },
    "id_table_19": {
        "caption": "",
        "table": "Ax1.EGx9",
        "footnotes": [],
        "references": [
            "Let    \\Phi roman_  denote a  decision rule  or  hypothesis test  that maps the consolidated observations  Z Z {\\mathcal{Z}} caligraphic_Z  to  { 0 , 1 } 0 1 \\{0,1\\} { 0 , 1 } , where  0 0  represents the null hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  1 1 1 1  represents the alternative hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . Let  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  denote the probability distributions of the observations  Z Z {\\mathcal{Z}} caligraphic_Z  under  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , respectively. Throughout this paper, we will use  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  when we need to specify a hypothesis, and  P P {\\mathbb{P}} blackboard_P  when a probability expression holds for both hypotheses. Similarly,  E H 0 subscript E subscript H 0 {\\mathbb{E}}_{H_{0}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ,  E H 1 subscript E subscript H 1 {\\mathbb{E}}_{H_{1}} blackboard_E start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , and  E E {\\mathbb{E}} blackboard_E  will represent the corresponding expectation operators. Furthermore, for a fixed induced graph  G G {\\mathcal{G}} caligraphic_G  satisfying  Assumption   3 , let  M 0 subscript M 0 {\\mathcal{M}}_{0} caligraphic_M start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  M  (  ) M italic- {\\mathcal{M}}(\\epsilon) caligraphic_M ( italic_ )  denote the sets of pairwise comparison models that satisfy the null and alternative hypotheses, respectively, in ( 19 ) along with  Assumptions   1 ,  2  and  4 :",
            "where the infimum is taken over all (possibly randomized)  { 0 , 1 } 0 1 \\{0,1\\} { 0 , 1 } -valued decision rules    \\Phi roman_  based on  Z Z \\mathcal{Z} caligraphic_Z . We would like to emphasize here that the suprema in the minimax risk are over all pairwise comparison matrices with a fixed graph  G G {\\mathcal{G}} caligraphic_G , and the probability measures  P H 0 subscript P subscript H 0 {\\mathbb{P}}_{H_{0}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  P H 1 subscript P subscript H 1 {\\mathbb{P}}_{H_{1}} blackboard_P start_POSTSUBSCRIPT italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  are defined by the randomness in the data generation process given a fixed graph  G G {\\mathcal{G}} caligraphic_G . Finally, we define the  critical threshold  of the hypothesis testing problem in ( 19 ) as the smallest value of   italic- \\epsilon italic_  for which the minimax risk is bounded by  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG :",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , the critical threshold defined in  Eq.   23  is upper bounded by",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n , the critical threshold defined in  Eq.   23  is upper bounded by",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold, and suppose that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT  and there exists a constant  c 4 > 0 subscript c 4 0 c_{4}>0 italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT > 0  such that the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } . Then, we have the following bounds:",
            "In this section, we present an information-theoretic lower bound on the critical threshold for the hypothesis testing problem in  Eq.   19  for the special case of a complete induced graph  G G {\\mathcal{G}} caligraphic_G . Our lower bound demonstrates the minimax optimality of the scaling of the critical threshold provided in the upper bound in  Theorem   2  for complete induced graphs. (We will show in  Section   III-E  that pairwise comparison models on complete graphs can satisfy  Assumptions   1 ,  2 ,  3  and  4 .) As noted earlier, we assume that  k i  j = k subscript k i j k k_{ij}=k italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_k  for all  i , j  [ n ] i j delimited-[] n i,j\\in[n] italic_i , italic_j  [ italic_n ]  with  i = j i j i\\neq j italic_i = italic_j .",
            "Consider the hypothesis testing problem in  Eq.   19  and assume that the corresponding induced graph  G G {\\mathcal{G}} caligraphic_G  is a complete graph. Then, there exists a constant  c 8 > 0 subscript c 8 0 c_{8}>0 italic_c start_POSTSUBSCRIPT 8 end_POSTSUBSCRIPT > 0  such that the critical threshold defined in  Eq.   23  is lower bounded by",
            "Let   =    P  + P     1 n   T  F / ( n      ) italic- subscript norm  subscript P  subscript P   subscript 1 n superscript  T F n subscript norm  \\epsilon=\\|\\Pi P_{\\theta}+P_{\\theta}\\Pi-\\mathbf{1}_{n}\\pi^{\\mathrm{T}}\\|_{% \\mathrm{F}}/(n\\|\\pi\\|_{\\infty}) italic_ =  roman_ italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT + italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT roman_ - bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT / ( italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT )  to ensure that the  P  subscript P  P_{\\theta} italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT s satisfy the condition of the alternative hypothesis in ( 19 ). Substituting the values of      = y subscript norm  y \\|\\pi\\|_{\\infty}=y  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT = italic_y  and     P  + P  T    1 n   T  F subscript norm  subscript P  superscript subscript P  T  subscript 1 n superscript  T F \\|\\Pi P_{\\theta}+P_{\\theta}^{\\mathrm{T}}\\Pi-\\mathbf{1}_{n}\\pi^{\\mathrm{T}}\\|_{% \\mathrm{F}}  roman_ italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT + italic_P start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT roman_ - bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT  implies that"
        ]
    },
    "id_table_20": {
        "caption": "",
        "table": "Ax1.EGx10",
        "footnotes": [],
        "references": []
    },
    "id_table_21": {
        "caption": "",
        "table": "S5.E45",
        "footnotes": [],
        "references": []
    },
    "id_table_22": {
        "caption": "",
        "table": "Ax1.EGx11",
        "footnotes": [],
        "references": [
            "The proof of  Theorem   4  is provided in  Section   VI-A . The proof uses the  Ingster-Suslina method  for constructing a lower bound on the critical threshold  [ 71 ] . This method is similar to the well-known  Le Cams method , but it establishes a minimax lower bound by considering a point and a mixture on the parameter space instead of just two points. (Although Le Cams method could also be used for this proof in principle, the Ingster-Suslina method greatly simplifies the calculations to bound TV distance in our setting.) Our proof constructs a perturbed family of pairwise comparison models from a fixed BTL model and utilizes the complete graph structure to compute both the stationary distribution and the separation metric     P + P    P E  ( 1 n   T )  F /     subscript norm  P P  subscript P E subscript 1 n superscript  T F subscript norm  \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|_{% \\mathrm{F}}/\\|\\pi\\|_{\\infty}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT /  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  in closed form under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . We remark that due to our problem setting, our proof here is much simpler than and quite different to the technique developed in  [ 50 ] , where the separation distance is quantified for Eulerian graphs in terms of sums of TV distances. We leave the problem of determining minimax lower bounds for more general graph topologies satisfying  Assumptions   1 ,  2 ,  3  and  4  for future work. Finally, we also note that the bounds in  Theorems   2  and  4  portray that the    ( 1 / n  k )  1 n k \\Theta(1/\\sqrt{nk}) roman_ ( 1 / square-root start_ARG italic_n italic_k end_ARG )  scaling of the critical threshold is minimax optimal even if we took suprema over all induced graphs satisfying  Assumptions   1 ,  2 ,  3  and  4  inside the infimum in the definition of minimax risk in  Eq.   22 .",
            "We emphasize that the probability law utilized here differs from that in the minimax risk framework. The definition of minimax risk in  Eq.   22  assumes a fixed graph  G G {\\mathcal{G}} caligraphic_G  and considers probabilities associated with the randomness in the data generating mechanism. In contrast, the probability laws in  Proposition   7  and other results in this section are governed by the graph generation process."
        ]
    },
    "id_table_23": {
        "caption": "",
        "table": "Ax1.EGx12",
        "footnotes": [],
        "references": [
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , the critical threshold defined in  Eq.   23  is upper bounded by",
            "Consider the hypothesis testing problem in ( 19 ) such that  Assumptions   1 ,  2 ,  3  and  4  hold. Then, there exist constants  c 3 , c 4 , c 5 > 0 subscript c 3 subscript c 4 subscript c 5 0 c_{3},c_{4},c_{5}>0 italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT , italic_c start_POSTSUBSCRIPT 5 end_POSTSUBSCRIPT > 0  such that if  n  c 3 n subscript c 3 n\\geq c_{3} italic_n  italic_c start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , the number of comparisons per pair satisfies  k  max  { 2 , c 4  h  log  n d max   4 } k 2 subscript c 4 h n subscript d superscript  4 k\\geq\\max\\!\\big{\\{}2,\\frac{c_{4}h\\log n}{d_{\\max}\\xi^{4}}\\big{\\}} italic_k  roman_max { 2 , divide start_ARG italic_c start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT italic_h roman_log italic_n end_ARG start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT end_ARG } , and  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n , the critical threshold defined in  Eq.   23  is upper bounded by",
            "Consider the hypothesis testing problem in  Eq.   19  and assume that the corresponding induced graph  G G {\\mathcal{G}} caligraphic_G  is a complete graph. Then, there exists a constant  c 8 > 0 subscript c 8 0 c_{8}>0 italic_c start_POSTSUBSCRIPT 8 end_POSTSUBSCRIPT > 0  such that the critical threshold defined in  Eq.   23  is lower bounded by",
            "Thus, for sufficiently large constant  a 0 subscript a 0 a_{0} italic_a start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  we have demonstrated that the sum of type  \\Romannum 1 and type  \\Romannum 2 errors is bounded by  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Combining this result with the definition of the critical threshold in  Eq.   23 , we obtain the following bound on   c subscript  c \\varepsilon_{\\mathsf{c}} italic_ start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT :"
        ]
    },
    "id_table_24": {
        "caption": "",
        "table": "Ax1.EGx13",
        "footnotes": [],
        "references": [
            "We devise a notion of separation distance that allows us to easily quantify the deviation of a general pairwise comparison model from the class of all BTL models. Under some regularity conditions, we show in  Theorem   1  that this measure is always within constant factors of the Frobenius norm distance between a general pairwise comparison model and the class of BTL models. We then formulate our hypothesis testing problem for BTL models in a minimax sense using this separation distance and also introduce a test statistic in  Eq.   24  based on it.",
            "To understand the test statistic  T T T italic_T , notice that if were to set   ^ =  ^   \\hat{\\pi}=\\pi over^ start_ARG italic_ end_ARG = italic_  and assume that  k i  j  2 subscript k i j 2 k_{ij}\\geq 2 italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  2  for all  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E  with  i = j i j i\\neq j italic_i = italic_j  in  Eq.   24  and consider the hypothetical statistic",
            "Lastly, we remark that testing for a single BTL model can be conducted using a   2 superscript  2 \\chi^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -type goodness-of-fit test  [ 69 ] , and testing for a class of BTL models could be attempted using a composite   2 superscript  2 \\chi^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -test  [ 70 ] . However, performing sharp minimax analysis on the corresponding   2 superscript  2 \\chi^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -statistics poses challenges. Therefore, our focus lies on the proposed test statistic  T T T italic_T  in  Eq.   24 . Notably, we demonstrate minimax optimality of the critical threshold for complete graphs, thereby underscoring the effectiveness of considering our proposed test.",
            "The proof is provided in  Section   V . The proof has several essential steps. Among these, the most important step involves computing  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -error bounds (see  Lemma   6 ) for the estimated BTL parameters   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  when the data is generated by a general pairwise comparison model, which is not necessarily BTL (i.e., under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ). The derivation of these error bounds requires us to analyze the second largest singular values of DTMs corresponding to non-reversible Markov chains, particularly in the context of induced graphs that are not complete. Once we have established these  l 2 superscript l 2 \\ell^{2} roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT -error bounds, we can compute bounds on  E  [ T ] E delimited-[] T {\\mathbb{E}}[T] blackboard_E [ italic_T ]  and  var  ( T ) var T {\\mathrm{var}}(T) roman_var ( italic_T ) . This step involves mitigating the correlation between the terms   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  and  { Z i  j } ( i , j )  E subscript subscript Z i j i j E \\{Z_{ij}\\}_{(i,j)\\in{\\mathcal{E}}} { italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT ( italic_i , italic_j )  caligraphic_E end_POSTSUBSCRIPT  in  Eq.   24  as both of them share the same source of randomness. Broadly speaking, this is done by splitting the product of dependent terms into three parts (by utilizing the identity  a ^  b ^ = ( a ^  a )  ( b ^  b ) + ( a ^  a )  b + a  b ^ ^ a ^ b ^ a a ^ b b ^ a a b a ^ b \\hat{a}\\hat{b}=(\\hat{a}-a)(\\hat{b}-b)+(\\hat{a}-a)b+a\\hat{b} over^ start_ARG italic_a end_ARG over^ start_ARG italic_b end_ARG = ( over^ start_ARG italic_a end_ARG - italic_a ) ( over^ start_ARG italic_b end_ARG - italic_b ) + ( over^ start_ARG italic_a end_ARG - italic_a ) italic_b + italic_a over^ start_ARG italic_b end_ARG , where  a ^ ^ a \\hat{a} over^ start_ARG italic_a end_ARG  and  b ^ ^ b \\hat{b} over^ start_ARG italic_b end_ARG  are correlated estimators of  a a a italic_a  and  b b b italic_b ) and bounding each part using appropriate concentration inequalities. Moreover, in the case where the induced graph is complete, the analysis becomes considerably simpler. An instance of such simplification in the proofs arises through the utilization of bounds between contraction coefficients of  S S S italic_S  (see  Section   V-A  and  Lemma   3 )."
        ]
    },
    "id_table_25": {
        "caption": "",
        "table": "S5.Ex70",
        "footnotes": [],
        "references": [
            "For  S ^ ^ S {\\hat{S}} over^ start_ARG italic_S end_ARG  constructed as in  Eq.   25 , we have"
        ]
    },
    "id_table_26": {
        "caption": "",
        "table": "S5.Ex72",
        "footnotes": [],
        "references": []
    },
    "id_table_27": {
        "caption": "",
        "table": "S5.Ex73",
        "footnotes": [],
        "references": [
            "then  E  [ T   ] =    P + P    P E  ( 1 n   T )  F 2 E delimited-[]   T subscript superscript norm  P P  subscript P E subscript 1 n superscript  T 2 F {\\mathbb{E}}[\\bar{T}]=\\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n% }\\pi^{\\mathrm{T}})\\|^{2}_{\\mathrm{F}} blackboard_E [ over  start_ARG italic_T end_ARG ] =  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT . So, the statistic  T T T italic_T  is designed by plugging in   ^ ^  \\hat{\\pi} over^ start_ARG italic_ end_ARG  in place of    \\pi italic_  in an unbiased estimator  T     T \\bar{T} over  start_ARG italic_T end_ARG  of     P + P    P E  ( 1 n   T )  F 2 subscript superscript norm  P P  subscript P E subscript 1 n superscript  T 2 F \\|\\Pi P+P\\Pi-{\\mathcal{P}_{\\mathcal{E}}}({\\mathbf{1}}_{n}\\pi^{\\mathrm{T}})\\|^{% 2}_{\\mathrm{F}}  roman_ italic_P + italic_P roman_ - caligraphic_P start_POSTSUBSCRIPT caligraphic_E end_POSTSUBSCRIPT ( bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT italic_ start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT )  start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_F end_POSTSUBSCRIPT . The precise decision rule using  T T T italic_T  is given in the next section in  Eq.   27 ."
        ]
    },
    "id_table_28": {
        "caption": "",
        "table": "S5.E52",
        "footnotes": [],
        "references": []
    },
    "id_table_29": {
        "caption": "",
        "table": "Ax1.EGx14",
        "footnotes": [],
        "references": []
    },
    "id_table_30": {
        "caption": "",
        "table": "S5.Ex78",
        "footnotes": [],
        "references": [
            "If both  Eqs.   30  and  31  are true, then we can use the following argument to complete the proof. Let  c 0 = min  { c , c  } subscript c 0 c superscript c  c_{0}=\\min\\{c,c^{\\prime}\\} italic_c start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = roman_min { italic_c , italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT } , then we have:",
            "Next, we will prove  Eq.   30 . Note that"
        ]
    },
    "id_table_31": {
        "caption": "",
        "table": "Ax1.EGx15",
        "footnotes": [],
        "references": [
            "If both  Eqs.   30  and  31  are true, then we can use the following argument to complete the proof. Let  c 0 = min  { c , c  } subscript c 0 c superscript c  c_{0}=\\min\\{c,c^{\\prime}\\} italic_c start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = roman_min { italic_c , italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT } , then we have:",
            "Now we will prove  Eq.   31 . Observe that"
        ]
    },
    "id_table_32": {
        "caption": "",
        "table": "S5.Ex82",
        "footnotes": [],
        "references": []
    },
    "id_table_33": {
        "caption": "",
        "table": "Ax1.EGx16",
        "footnotes": [],
        "references": [
            "This is because if  Eq.   33  is true, then",
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows since   B  BTL h subscript  B subscript BTL h \\pi_{B}\\in\\mathsf{BTL}_{h} italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT  sansserif_BTL start_POSTSUBSCRIPT italic_h end_POSTSUBSCRIPT , hence   B , i    B   / h subscript  B i subscript norm subscript  B h \\pi_{B,i}\\geq\\|\\pi_{B}\\|_{\\infty}/h italic_ start_POSTSUBSCRIPT italic_B , italic_i end_POSTSUBSCRIPT   italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT / italic_h  which implies    B    h n subscript norm subscript  B h n \\|\\pi_{B}\\|_{\\infty}\\leq\\frac{h}{n}  italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  divide start_ARG italic_h end_ARG start_ARG italic_n end_ARG ,   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  follows from our assumption in  Eq.   33  (which we will prove next) and   3 subscript  3 \\zeta_{3} italic_ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  follows since   min      / h subscript  subscript norm  h \\pi_{\\min}\\geq\\|\\pi\\|_{\\infty}/h italic_ start_POSTSUBSCRIPT roman_min end_POSTSUBSCRIPT   italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT / italic_h  and  n       1 n subscript norm  1 n\\|\\pi\\|_{\\infty}\\geq 1 italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  1 .",
            "Now it remains to prove  Eq.   33 . To do so, observe that",
            "and let   B   diag  (  B  )  superscript subscript  B diag superscript subscript  B {\\Pi_{B}^{*}}\\triangleq\\operatorname{{diag}}({\\pi_{B}^{*}}) roman_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  roman_diag ( italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT ) . To prove  Eq.   33 , we will show that the following ratio is upper bounded by a constant.",
            "Note that  R R R italic_R  is symmetric and is in fact a positive semidefinite matrix (as  u T  R  u =  ( i , j )  E ( u i  p i  j  u j  p j  i ) 2 superscript u T R u subscript i j E superscript subscript u i subscript p i j subscript u j subscript p j i 2 u^{\\mathrm{T}}Ru=\\sum_{(i,j)\\in{\\mathcal{E}}}(u_{i}p_{ij}-u_{j}p_{ji})^{2} italic_u start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT italic_R italic_u =  start_POSTSUBSCRIPT ( italic_i , italic_j )  caligraphic_E end_POSTSUBSCRIPT ( italic_u start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT - italic_u start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_p start_POSTSUBSCRIPT italic_j italic_i end_POSTSUBSCRIPT ) start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ). Therefore, all its eigenvalues are non-negative. Moreover, when the canonical Markov matrix corresponding to  P P P italic_P  is not reversible,  R R R italic_R  is, in fact, positive-definite. Additionally, when the canonical Markov matrix corresponding to  P P P italic_P  is reversible, then  Eq.   33  trivially holds as both sides of the inequality are zero. Therefore, our main focus will be on the case when the matrix  P P P italic_P  is not reversible. First, to begin, let us focus on the denominator term   B  T  R   B  superscript subscript  B superscript T R superscript subscript  B \\pi_{B}^{*^{\\mathrm{T}}}R\\pi_{B}^{*} italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT italic_R italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT . Recall that   B  superscript subscript  B {\\pi_{B}^{*}} italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  is the solution of the following optimization problem:"
        ]
    },
    "id_table_34": {
        "caption": "",
        "table": "S5.Ex86",
        "footnotes": [],
        "references": [
            "This is because the optimality condition implies that   B  T =  B  T  ( I n +    1 n  1 n T  R n ) superscript subscript  B superscript T superscript subscript  B superscript T subscript I n superscript  subscript 1 n superscript subscript 1 n T R n \\pi_{B}^{*^{\\mathrm{T}}}=\\pi_{B}^{*^{\\mathrm{T}}}(I_{n}+\\frac{\\lambda^{*}{% \\mathbf{1}}_{n}{\\mathbf{1}}_{n}^{\\mathrm{T}}-R}{n}) italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT = italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT ( italic_I start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT + divide start_ARG italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT - italic_R end_ARG start_ARG italic_n end_ARG ) . Moreover, note that each entry of  S B ,   0 subscript S B  0 S_{B,\\lambda}\\geq 0 italic_S start_POSTSUBSCRIPT italic_B , italic_ end_POSTSUBSCRIPT  0  for    0  0 \\lambda\\geq 0 italic_  0 . Now, consider the numerator term in  Eq.   34 , which can be expressed as",
            "Therefore, using  Eqs.   36  and  42 , the ratio in  Eq.   34  is upper bounded as"
        ]
    },
    "id_table_35": {
        "caption": "",
        "table": "S5.E62",
        "footnotes": [],
        "references": []
    },
    "id_table_36": {
        "caption": "",
        "table": "S5.E63",
        "footnotes": [],
        "references": [
            "Therefore, using  Eqs.   36  and  42 , the ratio in  Eq.   34  is upper bounded as"
        ]
    },
    "id_table_37": {
        "caption": "",
        "table": "S5.Ex87",
        "footnotes": [],
        "references": [
            "where  S B , 0 subscript S B 0 S_{B,0} italic_S start_POSTSUBSCRIPT italic_B , 0 end_POSTSUBSCRIPT  is the matrix in  Eq.   37  with   = 0  0 \\lambda=0 italic_ = 0 . Now consider the  i i i italic_i th term of the   B  T  ( S  S B , 0 ) superscript superscript subscript  B T S subscript S B 0 {\\pi_{B}^{*}}^{\\mathrm{T}}(S-S_{B,0}) italic_ start_POSTSUBSCRIPT italic_B end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ( italic_S - italic_S start_POSTSUBSCRIPT italic_B , 0 end_POSTSUBSCRIPT )  as"
        ]
    },
    "id_table_38": {
        "caption": "",
        "table": "S5.Ex89",
        "footnotes": [],
        "references": [
            "Thus, from  Eq.   38  and the fact that   max  ( R )  2  d max subscript  R 2 subscript d \\lambda_{\\max}(R)\\leq 2d_{\\max} italic_ start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT ( italic_R )  2 italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT , there exists a constant  c c c italic_c  such that we have"
        ]
    },
    "id_table_39": {
        "caption": "",
        "table": "Ax1.EGx17",
        "footnotes": [],
        "references": []
    },
    "id_table_40": {
        "caption": "",
        "table": "Ax1.EGx18",
        "footnotes": [],
        "references": [
            "Combining  Eqs.   40  and  41 , we get"
        ]
    },
    "id_table_41": {
        "caption": "",
        "table": "S5.Ex103",
        "footnotes": [],
        "references": [
            "Combining  Eqs.   40  and  41 , we get"
        ]
    },
    "id_table_42": {
        "caption": "",
        "table": "Ax1.EGx19",
        "footnotes": [],
        "references": [
            "Therefore, using  Eqs.   36  and  42 , the ratio in  Eq.   34  is upper bounded as"
        ]
    },
    "id_table_43": {
        "caption": "",
        "table": "Ax1.EGx20",
        "footnotes": [],
        "references": []
    },
    "id_table_44": {
        "caption": "",
        "table": "S5.Ex121",
        "footnotes": [],
        "references": [
            "We would like to emphasize the distinction between our proof above and the approach adopted in  [ 11 , Theorem 8]  for proving a similar result, and elucidate the proof in  [ 11 ] . In transitioning from  Eq.   44  to  Eq.   45 , the authors in  [ 11 ]  utilize the  l 2  (  ) superscript l 2  \\ell^{2}(\\pi) roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( italic_ )  norm, as opposed to the  l 2  (   1 ) superscript l 2 superscript  1 \\ell^{2}(\\pi^{-1}) roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT )  norm. Specifically, they bound the final term on the right-hand side as follows"
        ]
    },
    "id_table_45": {
        "caption": "",
        "table": "Ax1.EGx21",
        "footnotes": [],
        "references": [
            "We would like to emphasize the distinction between our proof above and the approach adopted in  [ 11 , Theorem 8]  for proving a similar result, and elucidate the proof in  [ 11 ] . In transitioning from  Eq.   44  to  Eq.   45 , the authors in  [ 11 ]  utilize the  l 2  (  ) superscript l 2  \\ell^{2}(\\pi) roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( italic_ )  norm, as opposed to the  l 2  (   1 ) superscript l 2 superscript  1 \\ell^{2}(\\pi^{-1}) roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT )  norm. Specifically, they bound the final term on the right-hand side as follows"
        ]
    },
    "id_table_46": {
        "caption": "",
        "table": "S5.Ex134",
        "footnotes": [],
        "references": [
            "where   l  ( S ) subscript  l S \\lambda_{l}(S) italic_ start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT ( italic_S )  is the  l l l italic_l th largest eigenvalue (in magnitude) of  S S S italic_S  for  l  [ n ] l delimited-[] n l\\in[n] italic_l  [ italic_n ] . This bound is rather subtle and a detailed reasoning for  Eq.   46  is missing. Therefore, we provide it below. Define the function:",
            "Finally,    ( S ) =  2  (   1 / 2  S   1 / 2 )  S subscript  2 superscript  1 2 S superscript  1 2 \\rho(S)=\\lambda_{2}(\\Pi^{-1/2}S\\Pi^{1/2}) italic_ ( italic_S ) = italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ( roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT )  follows by observing that    1 / 2 superscript  1 2 \\pi^{-1/2} italic_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT  and   3 / 2 superscript  3 2 \\pi^{3/2} italic_ start_POSTSUPERSCRIPT 3 / 2 end_POSTSUPERSCRIPT  are the corresponding right and left eigenvectors of    1 / 2  S   1 / 2 superscript  1 2 S superscript  1 2 \\Pi^{-1/2}S\\Pi^{1/2} roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . And since for the BTL model (under hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT )   1 / 2  S    1 / 2 superscript  1 2 S superscript  1 2 \\Pi^{1/2}S\\Pi^{-1/2} roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT  is a symmetric matrix, it has real eigenvalues. This implies that, by a similarity transform,  S ,  1 / 2  S    1 / 2 ,   1 / 2  S   1 / 2 S superscript  1 2 S superscript  1 2 superscript  1 2 S superscript  1 2 S,\\Pi^{1/2}S\\Pi^{-1/2},\\Pi^{-1/2}S\\Pi^{1/2} italic_S , roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT , roman_ start_POSTSUPERSCRIPT - 1 / 2 end_POSTSUPERSCRIPT italic_S roman_ start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  all have the same eigenvalues. This proves the bound in  Eq.   46 . However, this technique does not work for general pairwise comparison models, and therefore we have to resort to  l 2  (   1 ) superscript l 2 superscript  1 \\ell^{2}(\\pi^{-1}) roman_l start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( italic_ start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT )  norm."
        ]
    },
    "id_table_47": {
        "caption": "",
        "table": "Ax1.EGx22",
        "footnotes": [],
        "references": []
    },
    "id_table_48": {
        "caption": "",
        "table": "Ax1.EGx23",
        "footnotes": [],
        "references": []
    },
    "id_table_49": {
        "caption": "",
        "table": "Ax1.EGx24",
        "footnotes": [],
        "references": []
    },
    "id_table_50": {
        "caption": "",
        "table": "Ax1.EGx25",
        "footnotes": [],
        "references": []
    },
    "id_table_51": {
        "caption": "",
        "table": "Ax1.EGx26",
        "footnotes": [],
        "references": [
            "Hence, by  Eq.   51  and variational characterization of eigenvalues, we have"
        ]
    },
    "id_table_52": {
        "caption": "",
        "table": "Ax1.EGx27",
        "footnotes": [],
        "references": [
            "From  Equation   52 , we have  E  [ Q i  j ] = 0 E delimited-[] subscript Q i j 0 {\\mathbb{E}}[Q_{ij}]=0 blackboard_E [ italic_Q start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ] = 0 . Now we re-write  T 1  a subscript T 1 a T_{1a} italic_T start_POSTSUBSCRIPT 1 italic_a end_POSTSUBSCRIPT  in terms of the matrix  Q Q Q italic_Q  as",
            "Bounding   Q  2 subscript norm Q 2 \\|Q\\|_{2}  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT :  Now it remains to show that   Q  2  O  ( d max / k ) subscript norm Q 2 O subscript d k \\|Q\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. In the case of a complete graph, it is much easier to show because each entry  Q i  j subscript Q i j Q_{ij} italic_Q start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  is bounded, and therefore  Q Q {Q} italic_Q  is a random sub-Gaussian matrix, and the variance of each entry is upper bounded by  4 / k 4 k 4/k 4 / italic_k  (by  Eq.   52 ). Hence, by  [ 80 , Theorem 4.4.5] , the spectral norm   Q  2  2  c q  ( 2  d max + t ) / k subscript norm Q 2 2 subscript c q 2 subscript d t k \\|{Q}\\|_{2}\\leq 2c_{q}(2\\sqrt{d_{\\max}}+t)/\\sqrt{k}  italic_Q  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  2 italic_c start_POSTSUBSCRIPT italic_q end_POSTSUBSCRIPT ( 2 square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT end_ARG + italic_t ) / square-root start_ARG italic_k end_ARG  for some constant  c q subscript c q c_{q} italic_c start_POSTSUBSCRIPT italic_q end_POSTSUBSCRIPT  with probability at least  1  2  e  t 2 1 2 superscript e superscript t 2 1-2e^{-t^{2}} 1 - 2 italic_e start_POSTSUPERSCRIPT - italic_t start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_POSTSUPERSCRIPT . Substituting  t = log  n t n t=\\sqrt{\\log n} italic_t = square-root start_ARG roman_log italic_n end_ARG , we get the following bound with a probability at least  1  O  ( 1 / n 3 ) 1 O 1 superscript n 3 1-O(1/n^{3}) 1 - italic_O ( 1 / italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT )",
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows from the moments of the Binomial random variable as described in  Eq.   52  along with additional calculations provided below,   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  follows by upper bounding  p i  j  ( 1  p i  j ) subscript p i j 1 subscript p i j p_{ij}(1-p_{ij}) italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ( 1 - italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  by  1 / 4 1 4 1/4 1 / 4  and   3 subscript  3 \\zeta_{3} italic_ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  follows by upper bounding   i subscript  i \\pi_{i} italic_ start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT  by      subscript norm  \\|\\pi\\|_{\\infty}  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT  and  p i  j 2  ( 1  p i  j ) 2 superscript subscript p i j 2 superscript 1 subscript p i j 2 p_{ij}^{2}(1-p_{ij})^{2} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( 1 - italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ) start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  by  1 / 16 1 16 1/16 1 / 16 . To show   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , note that"
        ]
    },
    "id_table_53": {
        "caption": "",
        "table": "Ax1.EGx28",
        "footnotes": [],
        "references": [
            "First, we begin by deriving bounds on the probability of type  \\Romannum 1 error. Similar to the proof of  Theorem   2 , we split the test statistic  T T T italic_T  as  T = T 1 + T 2 + T 3 T subscript T 1 subscript T 2 subscript T 3 T=T_{1}+T_{2}+T_{3} italic_T = italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , where  T 1 , T 2 subscript T 1 subscript T 2 T_{1},T_{2} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  are defined in  Eqs.   53 ,  54  and  55 . To calculate the  P  ( T  t ) P T t {\\mathbb{P}}(T\\geq t) blackboard_P ( italic_T  italic_t )  for  t  0 t 0 t\\geq 0 italic_t  0 , we use the following inequality"
        ]
    },
    "id_table_54": {
        "caption": "",
        "table": "Ax1.EGx29",
        "footnotes": [],
        "references": [
            "First, we begin by deriving bounds on the probability of type  \\Romannum 1 error. Similar to the proof of  Theorem   2 , we split the test statistic  T T T italic_T  as  T = T 1 + T 2 + T 3 T subscript T 1 subscript T 2 subscript T 3 T=T_{1}+T_{2}+T_{3} italic_T = italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , where  T 1 , T 2 subscript T 1 subscript T 2 T_{1},T_{2} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  are defined in  Eqs.   53 ,  54  and  55 . To calculate the  P  ( T  t ) P T t {\\mathbb{P}}(T\\geq t) blackboard_P ( italic_T  italic_t )  for  t  0 t 0 t\\geq 0 italic_t  0 , we use the following inequality"
        ]
    },
    "id_table_55": {
        "caption": "",
        "table": "Ax1.EGx30",
        "footnotes": [],
        "references": [
            "The following bounds hold for the mean and variance of  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  as defined in  Eq.   55 .",
            "First, we begin by deriving bounds on the probability of type  \\Romannum 1 error. Similar to the proof of  Theorem   2 , we split the test statistic  T T T italic_T  as  T = T 1 + T 2 + T 3 T subscript T 1 subscript T 2 subscript T 3 T=T_{1}+T_{2}+T_{3} italic_T = italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT + italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , where  T 1 , T 2 subscript T 1 subscript T 2 T_{1},T_{2} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , italic_T start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  T 3 subscript T 3 T_{3} italic_T start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT  are defined in  Eqs.   53 ,  54  and  55 . To calculate the  P  ( T  t ) P T t {\\mathbb{P}}(T\\geq t) blackboard_P ( italic_T  italic_t )  for  t  0 t 0 t\\geq 0 italic_t  0 , we use the following inequality"
        ]
    },
    "id_table_56": {
        "caption": "",
        "table": "Ax1.EGx31",
        "footnotes": [],
        "references": [
            "where the term  O  ( 1 n 3 ) O 1 superscript n 3 O(\\frac{1}{n^{3}}) italic_O ( divide start_ARG 1 end_ARG start_ARG italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG )  is added to account for the probability with which the event  A 2 subscript A 2 \\mathcal{A}_{2} caligraphic_A start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  Eqs.   68  and  74  holds. Substituting  t = c    log  n t   c n t=\\bar{c}\\log n italic_t = over  start_ARG italic_c end_ARG roman_log italic_n  for some constant  c     c \\bar{c} over  start_ARG italic_c end_ARG , and utilizing the fact that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , we obtain that there exists a constant  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  such that with probability at least  1  O  ( 1 / n 3 ) 1 O 1 superscript n 3 1-O(1/n^{3}) 1 - italic_O ( 1 / italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT ) , we have  T 1  c   n      2 k subscript T 1 subscript c  n superscript subscript norm  2 k T_{1}\\leq c_{\\alpha}\\frac{n\\|\\pi\\|_{\\infty}^{2}}{k} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT divide start_ARG italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_ARG start_ARG italic_k end_ARG . The corresponding lower bounds on  T 1 subscript T 1 T_{1} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  can be obtained in a similar manner, and therefore, for the tail bound on  | T 1 | subscript T 1 |T_{1}| | italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT | , we get a factor of  2 2 2 2 , thus proving  Eq.   56 ."
        ]
    },
    "id_table_57": {
        "caption": "",
        "table": "Ax1.EGx32",
        "footnotes": [],
        "references": []
    },
    "id_table_58": {
        "caption": "",
        "table": "Ax1.EGx33",
        "footnotes": [],
        "references": []
    },
    "id_table_59": {
        "caption": "",
        "table": "Ax1.EGx34",
        "footnotes": [],
        "references": []
    },
    "id_table_60": {
        "caption": "",
        "table": "Ax1.EGx35",
        "footnotes": [],
        "references": [
            "where the precise threshold  t =   ( ( n  k )  1 ) t  superscript n k 1 t=\\Theta((nk)^{-1}) italic_t = roman_ ( ( italic_n italic_k ) start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT )  is given in  Eq.   60 . (In other words, this decision rule returns the alternative hypothesis if and only if  T  t T t T\\geq t italic_T  italic_t  for an appropriate threshold  t =   ( ( n  k )  1 ) t  superscript n k 1 t=\\Theta((nk)^{-1}) italic_t = roman_ ( ( italic_n italic_k ) start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT ) .) In  Section   VII-A , we also present a permutation-test-based approach to obtain a non-explicit threshold for our test based on data. This approach can be more readily employed in simulations and works even when the  k i  j subscript k i j k_{ij} italic_k start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT s are not all equal."
        ]
    },
    "id_table_61": {
        "caption": "",
        "table": "Ax1.EGx36",
        "footnotes": [],
        "references": []
    },
    "id_table_62": {
        "caption": "",
        "table": "S5.Ex167",
        "footnotes": [],
        "references": []
    },
    "id_table_63": {
        "caption": "",
        "table": "S6.E88",
        "footnotes": [],
        "references": [
            "The proof of  Proposition   4  can be gleaned from the proof of  Theorem   2  in  Section   V . In essence, the behavior in  Proposition   4  stems from the fact that the proof of  Lemma   7  in  Section   V-C 1  relies on a concentration inequality (see  Proposition   10 ) which, under the stronger assumption  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , allows us to avoid the poly-logarithmic factor in  Proposition   4  when establishing  Theorem   2 . However, if a standard matrix Bernstein inequality were employed for concentration, the special constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT , defined in  Lemma   7 , would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . Then, the proof of  Proposition   4  would follow by using essentially the same logic as the proof of  Theorem   2  and observing that  Eq.   63  yields an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT . Moreover, in this regime, our decision rule returns the alternative hypothesis if and only if  T    log  n n  k T  n n k T\\geq\\frac{\\gamma\\sqrt{\\log n}}{nk} italic_T  divide start_ARG italic_ square-root start_ARG roman_log italic_n end_ARG end_ARG start_ARG italic_n italic_k end_ARG  for some appropriately chosen constant    \\gamma italic_ .",
            "Clearly, the condition in ( 63 ) is satisfied for sufficiently a large constant  a 0 subscript a 0 a_{0} italic_a start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  which gives",
            "We remark that if a standard matrix Bernstein inequality  [ 80 ]  were used in the proof of  Lemma   7 , the constants  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  and  c  subscript c  c_{\\gamma} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  would scale as  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT . From  Eq.   63 , we would get an additional factor of  ( log  n ) 1 / 2 superscript n 1 2 (\\log n)^{1/2} ( roman_log italic_n ) start_POSTSUPERSCRIPT 1 / 2 end_POSTSUPERSCRIPT  in the scaling of   c 2 subscript superscript  2 c \\varepsilon^{2}_{\\mathsf{c}} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT , thus proving  Proposition   4 ."
        ]
    },
    "id_table_64": {
        "caption": "",
        "table": "S6.E89",
        "footnotes": [],
        "references": []
    },
    "id_table_65": {
        "caption": "",
        "table": "Ax1.EGx37",
        "footnotes": [],
        "references": [
            "Now combining  Eqs.   65 ,  70 ,  71  and  75 , we obtain"
        ]
    },
    "id_table_66": {
        "caption": "",
        "table": "Ax1.EGx38",
        "footnotes": [],
        "references": [
            "In a similar manner, we can bound the term  1 n T  Q  (  ^ 2   2 ) superscript subscript 1 n T Q superscript ^  2 superscript  2 {\\mathbf{1}}_{n}^{\\mathrm{T}}Q({\\hat{\\pi}}^{2}-\\pi^{2}) bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT italic_Q ( over^ start_ARG italic_ end_ARG start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT - italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ) , and thus, we obtain the bound in  Eq.   66 .",
            "Bounding   0 subscript  0 \\zeta_{0} italic_ start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT :  To bound  1 n T  ( P ^  P )  (  ^ 2   2 ) superscript subscript 1 n T ^ P P superscript ^  2 superscript  2 {\\mathbf{1}}_{n}^{\\mathrm{T}}(\\hat{P}-P)\\left(\\hat{\\pi}^{2}-\\pi^{2}\\right) bold_1 start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT start_POSTSUPERSCRIPT roman_T end_POSTSUPERSCRIPT ( over^ start_ARG italic_P end_ARG - italic_P ) ( over^ start_ARG italic_ end_ARG start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT - italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ) , we utilize the same trick as used in  Eq.   66 . Observe that"
        ]
    },
    "id_table_67": {
        "caption": "",
        "table": "S6.Ex173",
        "footnotes": [],
        "references": [
            "Combining  Eq.   67  and  Eq.   68 , and utilizing the fact that  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n"
        ]
    },
    "id_table_68": {
        "caption": "",
        "table": "S6.E95",
        "footnotes": [],
        "references": [
            "Combining  Eq.   67  and  Eq.   68 , and utilizing the fact that  d max  log  n subscript d n d_{\\max}\\geq\\log n italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  roman_log italic_n",
            "Substituting,  t = c  d max  log  n k t c subscript d n k t=c\\sqrt{\\frac{d_{\\max}\\log n}{k}} italic_t = italic_c square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG  for some constant  c c c italic_c  and utilizing the union bound as in  Eq.   68 , we obtain the bound the following bound with probability at least  1  O  ( n  4 ) 1 O superscript n 4 1-O(n^{-4}) 1 - italic_O ( italic_n start_POSTSUPERSCRIPT - 4 end_POSTSUPERSCRIPT ) .",
            "where the term  O  ( 1 n 3 ) O 1 superscript n 3 O(\\frac{1}{n^{3}}) italic_O ( divide start_ARG 1 end_ARG start_ARG italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG )  is added to account for the probability with which the event  A 2 subscript A 2 \\mathcal{A}_{2} caligraphic_A start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  Eqs.   68  and  74  holds. Substituting  t = c    log  n t   c n t=\\bar{c}\\log n italic_t = over  start_ARG italic_c end_ARG roman_log italic_n  for some constant  c     c \\bar{c} over  start_ARG italic_c end_ARG , and utilizing the fact that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , we obtain that there exists a constant  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  such that with probability at least  1  O  ( 1 / n 3 ) 1 O 1 superscript n 3 1-O(1/n^{3}) 1 - italic_O ( 1 / italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT ) , we have  T 1  c   n      2 k subscript T 1 subscript c  n superscript subscript norm  2 k T_{1}\\leq c_{\\alpha}\\frac{n\\|\\pi\\|_{\\infty}^{2}}{k} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT divide start_ARG italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_ARG start_ARG italic_k end_ARG . The corresponding lower bounds on  T 1 subscript T 1 T_{1} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  can be obtained in a similar manner, and therefore, for the tail bound on  | T 1 | subscript T 1 |T_{1}| | italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT | , we get a factor of  2 2 2 2 , thus proving  Eq.   56 ."
        ]
    },
    "id_table_69": {
        "caption": "",
        "table": "Ax1.EGx39",
        "footnotes": [],
        "references": [
            "Now again we need to show that   P ^  P  2  O  ( d max / k ) subscript norm ^ P P 2 O subscript d k \\|\\hat{P}-P\\|_{2}\\leq O(\\sqrt{d_{\\max}/k})  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG )  with high probability. In case of complete graph, by  [ 80 , Theorem 4.4.5] , we have   P ^  P  2  6  c p  d max / k subscript norm ^ P P 2 6 subscript c p subscript d k \\|\\hat{P}-P\\|_{2}\\leq 6c_{p}\\sqrt{d_{\\max}/k}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  6 italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT square-root start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT / italic_k end_ARG  with high probability for some constant  c p subscript c p c_{p} italic_c start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT  by the same argument as ( 69 ) (since  var  ( p ^ i  j )  1 / k var subscript ^ p i j 1 k {\\mathrm{var}}(\\hat{p}_{ij})\\leq 1/k roman_var ( over^ start_ARG italic_p end_ARG start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  1 / italic_k ). For a general graph model, and by application of matrix Bernstein inequality, again a  log  n n \\log n roman_log italic_n  factor becomes a bottleneck as we obtain   P ^  P  2  O  ( d max  log  n k ) subscript norm ^ P P 2 O subscript d n k \\|\\hat{P}-P\\|_{2}\\leq O\\big{(}\\sqrt{\\frac{d_{\\max}\\log n}{k}}\\big{)}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  italic_O ( square-root start_ARG divide start_ARG italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT roman_log italic_n end_ARG start_ARG italic_k end_ARG end_ARG )  (with high probability). Therefore, we again utilize  [ 81 ,  Corollary 2.15]  to obtain tighter concentration bounds on   P ^  P  2 subscript norm ^ P P 2 \\|\\hat{P}-P\\|_{2}  over^ start_ARG italic_P end_ARG - italic_P  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT . Applying,  Lemma   14  we obtain"
        ]
    },
    "id_table_70": {
        "caption": "",
        "table": "Ax1.EGx40",
        "footnotes": [],
        "references": [
            "Now combining  Eqs.   65 ,  70 ,  71  and  75 , we obtain"
        ]
    },
    "id_table_71": {
        "caption": "",
        "table": "S6.Ex183",
        "footnotes": [],
        "references": [
            "Now combining  Eqs.   65 ,  70 ,  71  and  75 , we obtain"
        ]
    },
    "id_table_72": {
        "caption": "",
        "table": "S6.Ex185",
        "footnotes": [],
        "references": [
            "Substituting the above bound in  Eq.   73  we obtain the bound in  Eq.   72  for some constant  c ~ 2 subscript ~ c 2 \\tilde{c}_{2} over~ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ."
        ]
    },
    "id_table_73": {
        "caption": "",
        "table": "S6.Ex186",
        "footnotes": [],
        "references": [
            "Substituting the above bound in  Eq.   73  we obtain the bound in  Eq.   72  for some constant  c ~ 2 subscript ~ c 2 \\tilde{c}_{2} over~ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT ."
        ]
    },
    "id_table_74": {
        "caption": "",
        "table": "S6.Ex188",
        "footnotes": [],
        "references": [
            "where the term  O  ( 1 n 3 ) O 1 superscript n 3 O(\\frac{1}{n^{3}}) italic_O ( divide start_ARG 1 end_ARG start_ARG italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT end_ARG )  is added to account for the probability with which the event  A 2 subscript A 2 \\mathcal{A}_{2} caligraphic_A start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  and  Eqs.   68  and  74  holds. Substituting  t = c    log  n t   c n t=\\bar{c}\\log n italic_t = over  start_ARG italic_c end_ARG roman_log italic_n  for some constant  c     c \\bar{c} over  start_ARG italic_c end_ARG , and utilizing the fact that  d max  ( log  n ) 4 subscript d superscript n 4 d_{\\max}\\geq(\\log n)^{4} italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  ( roman_log italic_n ) start_POSTSUPERSCRIPT 4 end_POSTSUPERSCRIPT , we obtain that there exists a constant  c  subscript c  c_{\\alpha} italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT  such that with probability at least  1  O  ( 1 / n 3 ) 1 O 1 superscript n 3 1-O(1/n^{3}) 1 - italic_O ( 1 / italic_n start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT ) , we have  T 1  c   n      2 k subscript T 1 subscript c  n superscript subscript norm  2 k T_{1}\\leq c_{\\alpha}\\frac{n\\|\\pi\\|_{\\infty}^{2}}{k} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  italic_c start_POSTSUBSCRIPT italic_ end_POSTSUBSCRIPT divide start_ARG italic_n  italic_  start_POSTSUBSCRIPT  end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT end_ARG start_ARG italic_k end_ARG . The corresponding lower bounds on  T 1 subscript T 1 T_{1} italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  can be obtained in a similar manner, and therefore, for the tail bound on  | T 1 | subscript T 1 |T_{1}| | italic_T start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT | , we get a factor of  2 2 2 2 , thus proving  Eq.   56 ."
        ]
    },
    "id_table_75": {
        "caption": "",
        "table": "Ax1.EGx41",
        "footnotes": [],
        "references": [
            "Now combining  Eqs.   65 ,  70 ,  71  and  75 , we obtain"
        ]
    },
    "id_table_76": {
        "caption": "",
        "table": "A1.Ex195",
        "footnotes": [],
        "references": []
    },
    "id_table_77": {
        "caption": "",
        "table": "A1.Ex198",
        "footnotes": [],
        "references": []
    },
    "id_table_78": {
        "caption": "",
        "table": "A1.Ex201",
        "footnotes": [],
        "references": []
    },
    "id_table_79": {
        "caption": "",
        "table": "A1.Ex203",
        "footnotes": [],
        "references": [
            "Also, since  D D D italic_D  is a diagonal matrix, we have   D  2 = max i  | D i  i | subscript norm D 2 subscript i subscript D i i \\|D\\|_{2}=\\max_{i}|D_{ii}|  italic_D  start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT = roman_max start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT | italic_D start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT | . And by  Eq.   79 , for any fixed  i i i italic_i ,  k  d  D i  i k d subscript D i i kdD_{ii} italic_k italic_d italic_D start_POSTSUBSCRIPT italic_i italic_i end_POSTSUBSCRIPT  is a sum of at most  k  d max k subscript d kd_{\\max} italic_k italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  independent, zero-mean random variables and each random variable takes values in  (  1 , 1 ) 1 1 (-1,1) ( - 1 , 1 ) . Therefore, by applying Hoeffdings inequality, we have"
        ]
    },
    "id_table_80": {
        "caption": "",
        "table": "A2.Ex206",
        "footnotes": [],
        "references": [
            "Combining  Eq.   80  and  Eq.   82  and using the fact that  d  2  d max d 2 subscript d d\\geq 2d_{\\max} italic_d  2 italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  completes the proof."
        ]
    },
    "id_table_81": {
        "caption": "",
        "table": "A2.Ex208",
        "footnotes": [],
        "references": []
    },
    "id_table_82": {
        "caption": "",
        "table": "A2.Ex211",
        "footnotes": [],
        "references": [
            "Combining  Eq.   80  and  Eq.   82  and using the fact that  d  2  d max d 2 subscript d d\\geq 2d_{\\max} italic_d  2 italic_d start_POSTSUBSCRIPT roman_max end_POSTSUBSCRIPT  completes the proof."
        ]
    },
    "id_table_83": {
        "caption": "",
        "table": "A2.E106",
        "footnotes": [],
        "references": []
    },
    "id_table_84": {
        "caption": "",
        "table": "A2.E108",
        "footnotes": [],
        "references": [
            "To obtain tail bounds under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , we again utilize  Eq.   84  as"
        ]
    },
    "id_table_85": {
        "caption": "",
        "table": "Ax1.EGx42",
        "footnotes": [],
        "references": [
            "where   1 subscript  1 \\zeta_{1} italic_ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  follows from  Eq.   85  and   2 subscript  2 \\zeta_{2} italic_ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT  follows by applying Hoeffdings inequality. Therefore, we obtain"
        ]
    },
    "id_table_86": {
        "caption": "",
        "table": "Ax1.EGx43",
        "footnotes": [],
        "references": [
            "In this section, we will perform several experiments on the synthetically generated datasets to verify our theoretical results and the effect of the shuffling techniques discussed above under hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . For the first experiment, we will use the same construction for the pairwise comparison matrix  P P P italic_P  that we utilized in the proof of  Theorem   4  under the null and alternate hypothesis, which are presented in  Eq.   86  and  Eq.   87 . We set the number of pairwise comparisons per pair of agents  k = 12 k 12 k=12 italic_k = 12 , the number of agents  n n n italic_n  is linearly increased from  32 32 32 32  to  128 128 128 128  in  12 12 12 12  equally spaced steps, and the perturbation    \\eta italic_  in ( 88 ) is increased from  0.16 0.16 0.16 0.16  to  0.32 0.32 0.32 0.32  in  12 12 12 12  equally spaced steps. For each value of    \\eta italic_  and  n n n italic_n , simulations are performed by generating  Z i  j  Bin  ( k , p i  j ) similar-to subscript Z i j Bin k subscript p i j Z_{ij}\\sim\\text{Bin}(k,p_{ij}) italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  Bin ( italic_k , italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  for  i = j i j i\\neq j italic_i = italic_j  for both hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , and the corresponding value of values of test statistic  T T T italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and  empirical minimax risk  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  is estimated. The threshold used for the decision rule is set to   2 / n superscript  2 n \\eta^{2}/n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT / italic_n .  Fig.   3  plots the empirical average of  n  T  n T n\\cdot T italic_n  italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  averaged over  250 250 250 250  iterations. Note that for a fixed value of    \\eta italic_ , the values of  n  T  n T n\\cdot T italic_n  italic_T  (under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ) are roughly constant as  n n n italic_n  increases, and the values of  n  T  n T n\\cdot T italic_n  italic_T  increase as    \\eta italic_  increases.  Fig.   3  plots the behavior of  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  for each value of    \\eta italic_  and  n n n italic_n . Observe that  1 R ^ m > 1 / 2 subscript 1 subscript ^ R m 1 2 {\\mathbbm{1}}_{\\hat{\\mathcal{R}}_{\\mathsf{m}}>1/2} blackboard_1 start_POSTSUBSCRIPT over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT > 1 / 2 end_POSTSUBSCRIPT  is largely independent of  n n n italic_n , which is consistent with our derivation in  Section   VI-A , where we have shown that if  8   2  k  c ~ 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c} 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG  then  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Thus, once    \\eta italic_  exceeds a particular threshold  R m subscript R m \\mathcal{R}_{\\mathsf{m}} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  exceeds  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG  for all values of  n n n italic_n ."
        ]
    },
    "id_table_87": {
        "caption": "",
        "table": "A2.Ex218",
        "footnotes": [],
        "references": [
            "In this section, we will perform several experiments on the synthetically generated datasets to verify our theoretical results and the effect of the shuffling techniques discussed above under hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . For the first experiment, we will use the same construction for the pairwise comparison matrix  P P P italic_P  that we utilized in the proof of  Theorem   4  under the null and alternate hypothesis, which are presented in  Eq.   86  and  Eq.   87 . We set the number of pairwise comparisons per pair of agents  k = 12 k 12 k=12 italic_k = 12 , the number of agents  n n n italic_n  is linearly increased from  32 32 32 32  to  128 128 128 128  in  12 12 12 12  equally spaced steps, and the perturbation    \\eta italic_  in ( 88 ) is increased from  0.16 0.16 0.16 0.16  to  0.32 0.32 0.32 0.32  in  12 12 12 12  equally spaced steps. For each value of    \\eta italic_  and  n n n italic_n , simulations are performed by generating  Z i  j  Bin  ( k , p i  j ) similar-to subscript Z i j Bin k subscript p i j Z_{ij}\\sim\\text{Bin}(k,p_{ij}) italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  Bin ( italic_k , italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  for  i = j i j i\\neq j italic_i = italic_j  for both hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , and the corresponding value of values of test statistic  T T T italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and  empirical minimax risk  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  is estimated. The threshold used for the decision rule is set to   2 / n superscript  2 n \\eta^{2}/n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT / italic_n .  Fig.   3  plots the empirical average of  n  T  n T n\\cdot T italic_n  italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  averaged over  250 250 250 250  iterations. Note that for a fixed value of    \\eta italic_ , the values of  n  T  n T n\\cdot T italic_n  italic_T  (under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ) are roughly constant as  n n n italic_n  increases, and the values of  n  T  n T n\\cdot T italic_n  italic_T  increase as    \\eta italic_  increases.  Fig.   3  plots the behavior of  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  for each value of    \\eta italic_  and  n n n italic_n . Observe that  1 R ^ m > 1 / 2 subscript 1 subscript ^ R m 1 2 {\\mathbbm{1}}_{\\hat{\\mathcal{R}}_{\\mathsf{m}}>1/2} blackboard_1 start_POSTSUBSCRIPT over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT > 1 / 2 end_POSTSUBSCRIPT  is largely independent of  n n n italic_n , which is consistent with our derivation in  Section   VI-A , where we have shown that if  8   2  k  c ~ 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c} 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG  then  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Thus, once    \\eta italic_  exceeds a particular threshold  R m subscript R m \\mathcal{R}_{\\mathsf{m}} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  exceeds  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG  for all values of  n n n italic_n ."
        ]
    },
    "id_table_88": {
        "caption": "",
        "table": "A2.Ex221",
        "footnotes": [],
        "references": [
            "In this section, we will perform several experiments on the synthetically generated datasets to verify our theoretical results and the effect of the shuffling techniques discussed above under hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT . For the first experiment, we will use the same construction for the pairwise comparison matrix  P P P italic_P  that we utilized in the proof of  Theorem   4  under the null and alternate hypothesis, which are presented in  Eq.   86  and  Eq.   87 . We set the number of pairwise comparisons per pair of agents  k = 12 k 12 k=12 italic_k = 12 , the number of agents  n n n italic_n  is linearly increased from  32 32 32 32  to  128 128 128 128  in  12 12 12 12  equally spaced steps, and the perturbation    \\eta italic_  in ( 88 ) is increased from  0.16 0.16 0.16 0.16  to  0.32 0.32 0.32 0.32  in  12 12 12 12  equally spaced steps. For each value of    \\eta italic_  and  n n n italic_n , simulations are performed by generating  Z i  j  Bin  ( k , p i  j ) similar-to subscript Z i j Bin k subscript p i j Z_{ij}\\sim\\text{Bin}(k,p_{ij}) italic_Z start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  Bin ( italic_k , italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT )  for  i = j i j i\\neq j italic_i = italic_j  for both hypotheses  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT  and  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , and the corresponding value of values of test statistic  T T T italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  and  empirical minimax risk  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  is estimated. The threshold used for the decision rule is set to   2 / n superscript  2 n \\eta^{2}/n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT / italic_n .  Fig.   3  plots the empirical average of  n  T  n T n\\cdot T italic_n  italic_T  under hypothesis  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT  averaged over  250 250 250 250  iterations. Note that for a fixed value of    \\eta italic_ , the values of  n  T  n T n\\cdot T italic_n  italic_T  (under  H 1 subscript H 1 H_{1} italic_H start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ) are roughly constant as  n n n italic_n  increases, and the values of  n  T  n T n\\cdot T italic_n  italic_T  increase as    \\eta italic_  increases.  Fig.   3  plots the behavior of  R ^ m subscript ^ R m \\hat{\\mathcal{R}}_{\\mathsf{m}} over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  for each value of    \\eta italic_  and  n n n italic_n . Observe that  1 R ^ m > 1 / 2 subscript 1 subscript ^ R m 1 2 {\\mathbbm{1}}_{\\hat{\\mathcal{R}}_{\\mathsf{m}}>1/2} blackboard_1 start_POSTSUBSCRIPT over^ start_ARG caligraphic_R end_ARG start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT > 1 / 2 end_POSTSUBSCRIPT  is largely independent of  n n n italic_n , which is consistent with our derivation in  Section   VI-A , where we have shown that if  8   2  k  c ~ 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c} 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG  then  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Thus, once    \\eta italic_  exceeds a particular threshold  R m subscript R m \\mathcal{R}_{\\mathsf{m}} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  exceeds  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG  for all values of  n n n italic_n ."
        ]
    },
    "id_table_89": {
        "caption": "",
        "table": "A2.Ex223",
        "footnotes": [],
        "references": []
    },
    "id_table_90": {
        "caption": "",
        "table": "A2.Ex224",
        "footnotes": [],
        "references": [
            "where    \\zeta italic_  holds for some constant  c  superscript c  c^{\\prime} italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  if  8   2  k  c ~ . 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c}. 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG .  Moreover, the quantity in  Eq.   96  is bounded above by  1 4 1 4 \\frac{1}{4} divide start_ARG 1 end_ARG start_ARG 4 end_ARG  if  c ~ ~ c \\tilde{c} over~ start_ARG italic_c end_ARG  is small enough. However, by  Eq.   90 , we have   2  C ~  n   2 superscript  2 ~ C n superscript italic- 2 \\eta^{2}\\geq\\tilde{C}n\\epsilon^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_C end_ARG italic_n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  for some constant  C ~ ~ C \\tilde{C} over~ start_ARG italic_C end_ARG . Therefore, we have shown that if  8  C ~  n  k   2  c ~ 8 ~ C n k superscript italic- 2 ~ c 8\\tilde{C}nk\\epsilon^{2}\\leq\\tilde{c} 8 over~ start_ARG italic_C end_ARG italic_n italic_k italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_c end_ARG , then   2 ( P  | | P 0 )  1 4 \\chi^{2}({\\mathbb{P}}_{\\Theta}||{\\mathbb{P}}_{0})\\leq\\frac{1}{4} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( blackboard_P start_POSTSUBSCRIPT roman_ end_POSTSUBSCRIPT | | blackboard_P start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG , which by  Eq.   91  implies that the minimax risk  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Hence,   c 2  c / ( k  n ) superscript subscript  c 2 c k n \\varepsilon_{\\mathsf{c}}^{2}\\geq c/(kn) italic_ start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  italic_c / ( italic_k italic_n )  as desired."
        ]
    },
    "id_table_91": {
        "caption": "",
        "table": "A2.Ex225",
        "footnotes": [],
        "references": [
            "where    \\zeta italic_  holds for some constant  c  superscript c  c^{\\prime} italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  if  8   2  k  c ~ . 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c}. 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG .  Moreover, the quantity in  Eq.   96  is bounded above by  1 4 1 4 \\frac{1}{4} divide start_ARG 1 end_ARG start_ARG 4 end_ARG  if  c ~ ~ c \\tilde{c} over~ start_ARG italic_c end_ARG  is small enough. However, by  Eq.   90 , we have   2  C ~  n   2 superscript  2 ~ C n superscript italic- 2 \\eta^{2}\\geq\\tilde{C}n\\epsilon^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_C end_ARG italic_n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  for some constant  C ~ ~ C \\tilde{C} over~ start_ARG italic_C end_ARG . Therefore, we have shown that if  8  C ~  n  k   2  c ~ 8 ~ C n k superscript italic- 2 ~ c 8\\tilde{C}nk\\epsilon^{2}\\leq\\tilde{c} 8 over~ start_ARG italic_C end_ARG italic_n italic_k italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_c end_ARG , then   2 ( P  | | P 0 )  1 4 \\chi^{2}({\\mathbb{P}}_{\\Theta}||{\\mathbb{P}}_{0})\\leq\\frac{1}{4} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( blackboard_P start_POSTSUBSCRIPT roman_ end_POSTSUBSCRIPT | | blackboard_P start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG , which by  Eq.   91  implies that the minimax risk  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Hence,   c 2  c / ( k  n ) superscript subscript  c 2 c k n \\varepsilon_{\\mathsf{c}}^{2}\\geq c/(kn) italic_ start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  italic_c / ( italic_k italic_n )  as desired."
        ]
    },
    "id_table_92": {
        "caption": "",
        "table": "A2.Ex231",
        "footnotes": [],
        "references": [
            "We will focus on the  ( i , j ) i j (i,j) ( italic_i , italic_j ) th term of the product in  Equation   92  for  i = j i j i\\neq j italic_i = italic_j  and denote it as  f  ( p i  j , p i  j  ) f subscript p i j subscript superscript p  i j f(p_{ij},p^{\\prime}_{ij}) italic_f ( italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT , italic_p start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ) :"
        ]
    },
    "id_table_93": {
        "caption": "",
        "table": "A2.Ex239",
        "footnotes": [],
        "references": [
            "By our construction of pairwise comparison matrices both  p i  j , p i  j  subscript p i j subscript superscript p  i j p_{ij},p^{\\prime}_{ij} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT , italic_p start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  take values in set  { 1 2 , 1 2 +  } 1 2 1 2  \\{\\frac{1}{2},\\frac{1}{2}+\\eta\\} { divide start_ARG 1 end_ARG start_ARG 2 end_ARG , divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_ }  if  j  i j i j\\geq i italic_j  italic_i  (and  { 1 2 , 1 2   } 1 2 1 2  \\{\\frac{1}{2},\\frac{1}{2}-\\eta\\} { divide start_ARG 1 end_ARG start_ARG 2 end_ARG , divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ }  otherwise). Furthermore, whenever either  p i  j subscript p i j p_{ij} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  or  p i  j  superscript subscript p i j  p_{ij}^{\\prime} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  equals  1 2 1 2 \\frac{1}{2} divide start_ARG 1 end_ARG start_ARG 2 end_ARG , we have  f  ( p i  j , p i  j  ) = 1 f subscript p i j subscript superscript p  i j 1 f(p_{ij},p^{\\prime}_{ij})=1 italic_f ( italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT , italic_p start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT ) = 1 . Additionally, by  Eq.   93  we have  f  ( 1 2   , 1 2   ) = f  ( 1 2 +  , 1 2 +  ) f 1 2  1 2  f 1 2  1 2  f(\\frac{1}{2}-\\eta,\\frac{1}{2}-\\eta)=f(\\frac{1}{2}+\\eta,\\frac{1}{2}+\\eta) italic_f ( divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ , divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ ) = italic_f ( divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_ , divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_ ) . Let a random variable  B B B italic_B  denote the number of occurrences where  p i  j = p i  j  = 1 2 +  subscript p i j superscript subscript p i j  1 2  p_{ij}=p_{ij}^{\\prime}=\\frac{1}{2}+\\eta italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT = divide start_ARG 1 end_ARG start_ARG 2 end_ARG + italic_  in randomly drawn permutation    \\theta italic_  and    superscript   \\theta^{\\prime} italic_ start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  (or equivalently,  p i  j = p i  j  = 1 2   subscript p i j superscript subscript p i j  1 2  p_{ij}=p_{ij}^{\\prime}=\\frac{1}{2}-\\eta italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT = italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT = divide start_ARG 1 end_ARG start_ARG 2 end_ARG - italic_ ). Consequently, we obtain"
        ]
    },
    "id_table_94": {
        "caption": "",
        "table": "A2.Ex240",
        "footnotes": [],
        "references": [
            "The above equation combined with  Eq.   94  gives"
        ]
    },
    "id_table_95": {
        "caption": "",
        "table": "A3.Ex243",
        "footnotes": [],
        "references": [
            "Substituting the above bound in  Eq.   95 , we obtain"
        ]
    },
    "id_table_96": {
        "caption": "",
        "table": "A3.Ex245",
        "footnotes": [],
        "references": [
            "where    \\zeta italic_  holds for some constant  c  superscript c  c^{\\prime} italic_c start_POSTSUPERSCRIPT  end_POSTSUPERSCRIPT  if  8   2  k  c ~ . 8 superscript  2 k ~ c 8\\eta^{2}k\\leq\\tilde{c}. 8 italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_k  over~ start_ARG italic_c end_ARG .  Moreover, the quantity in  Eq.   96  is bounded above by  1 4 1 4 \\frac{1}{4} divide start_ARG 1 end_ARG start_ARG 4 end_ARG  if  c ~ ~ c \\tilde{c} over~ start_ARG italic_c end_ARG  is small enough. However, by  Eq.   90 , we have   2  C ~  n   2 superscript  2 ~ C n superscript italic- 2 \\eta^{2}\\geq\\tilde{C}n\\epsilon^{2} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_C end_ARG italic_n italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  for some constant  C ~ ~ C \\tilde{C} over~ start_ARG italic_C end_ARG . Therefore, we have shown that if  8  C ~  n  k   2  c ~ 8 ~ C n k superscript italic- 2 ~ c 8\\tilde{C}nk\\epsilon^{2}\\leq\\tilde{c} 8 over~ start_ARG italic_C end_ARG italic_n italic_k italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  over~ start_ARG italic_c end_ARG , then   2 ( P  | | P 0 )  1 4 \\chi^{2}({\\mathbb{P}}_{\\Theta}||{\\mathbb{P}}_{0})\\leq\\frac{1}{4} italic_ start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT ( blackboard_P start_POSTSUBSCRIPT roman_ end_POSTSUBSCRIPT | | blackboard_P start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT )  divide start_ARG 1 end_ARG start_ARG 4 end_ARG , which by  Eq.   91  implies that the minimax risk  R m  1 2 subscript R m 1 2 \\mathcal{R}_{\\mathsf{m}}\\geq\\frac{1}{2} caligraphic_R start_POSTSUBSCRIPT sansserif_m end_POSTSUBSCRIPT  divide start_ARG 1 end_ARG start_ARG 2 end_ARG . Hence,   c 2  c / ( k  n ) superscript subscript  c 2 c k n \\varepsilon_{\\mathsf{c}}^{2}\\geq c/(kn) italic_ start_POSTSUBSCRIPT sansserif_c end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT  italic_c / ( italic_k italic_n )  as desired."
        ]
    },
    "id_table_97": {
        "caption": "",
        "table": "A3.Ex248",
        "footnotes": [],
        "references": [
            "for any fixed  m 1  [ k i 1  i 2 ] , ... , m l  1  [ k i l  1  i l ] formulae-sequence superscript m 1 delimited-[] subscript k subscript i 1 subscript i 2 ... superscript m l 1 delimited-[] subscript k subscript i l 1 subscript i l m^{1}\\in[k_{i_{1}i_{2}}],\\dots,m^{l-1}\\in[k_{i_{l-1}i_{l}}] italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] , ... , italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT end_POSTSUBSCRIPT ]  and  m ~ 1  [ k i l  i l  1 ] , ... , m ~ l  1  [ k i 2  i 1 ] formulae-sequence superscript ~ m 1 delimited-[] subscript k subscript i l subscript i l 1 ... superscript ~ m l 1 delimited-[] subscript k subscript i 2 subscript i 1 \\tilde{m}^{1}\\in[k_{i_{l}i_{l-1}}],\\dots,\\tilde{m}^{l-1}\\in[k_{i_{2}i_{1}}] over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] , ... , over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] . Note that here  Z m j , i j  i j + 1 subscript Z superscript m j subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}} italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  denotes the  m j superscript m j m^{j} italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT th observartion ( m j  [ k i j  i j + 1 ] superscript m j delimited-[] subscript k subscript i j subscript i j 1 m^{j}\\in[k_{i_{j}i_{j+1}}] italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT  [ italic_k start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ] ) of the form  i j subscript i j i_{j} italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT  vs.  i j + 1 subscript i j 1 i_{j+1} italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT \" and hence  Z m j , i j  i j + 1  Bernoulli  ( p i j  i j + 1 ) similar-to subscript Z superscript m j subscript i j subscript i j 1 Bernoulli subscript p subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}}\\sim{\\mathsf{Bernoulli}}(p_{i_{j}i_{j+1}}) italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  sansserif_Bernoulli ( italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT ) . Therefore, we have that  Z F  L subscript Z F L Z_{FL} italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT  follows a Bernoulli distribution with parameter   j = 1 l  1 p i j  i j + 1 superscript subscript product j 1 l 1 subscript p subscript i j subscript i j 1 \\prod_{j=1}^{l-1}p_{i_{j}i_{j+1}}  start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , and  Z B  L subscript Z B L Z_{BL} italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT  follows a Bernoulli distribution with parameters   j = 1 l  1 p i l  j + 1  i l  j superscript subscript product j 1 l 1 subscript p subscript i l j 1 subscript i l j \\prod_{j=1}^{l-1}p_{i_{l-j+1}i_{l-j}}  start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT italic_p start_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j + 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j end_POSTSUBSCRIPT end_POSTSUBSCRIPT . Based on the Kolgomorov loop criteria, under the hypothesis  H 0 subscript H 0 H_{0} italic_H start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT , we have  P  ( { Z F  L = 1 } ) P subscript Z F L 1 {\\mathbb{P}}(\\{Z_{FL}=1\\}) blackboard_P ( { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 } )  is the same as  P  ( { Z B  L = 1 } ) P subscript Z B L 1 {\\mathbb{P}}(\\{Z_{BL}=1\\}) blackboard_P ( { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 } )  and moreover both the events  { Z F  L = 1 } subscript Z F L 1 \\{Z_{FL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 }  and  { Z B  L = 1 } subscript Z B L 1 \\{Z_{BL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 }  occur only when each of the random variables  Z m j , i j  i j + 1 subscript Z superscript m j subscript i j subscript i j 1 Z_{m^{j},{i_{j}i_{j+1}}} italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_j + 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT  and  Z m ~ j , i l  j + 1  i l  j subscript Z superscript ~ m j subscript i l j 1 subscript i l j Z_{\\tilde{m}^{j},{i_{l-j+1}i_{l-j}}} italic_Z start_POSTSUBSCRIPT over~ start_ARG italic_m end_ARG start_POSTSUPERSCRIPT italic_j end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l - italic_j + 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - italic_j end_POSTSUBSCRIPT end_POSTSUBSCRIPT  in the product (in  Eq.   97 ) are  1 1 1 1 . Therefore, this motivates the following shuffling process where we essentially replace the data in  Z Z {\\mathcal{Z}} caligraphic_Z  corresponding to event  { Z F  L = 1 } subscript Z F L 1 \\{Z_{FL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_F italic_L end_POSTSUBSCRIPT = 1 }  by the data corresponding to event  { Z B  L = 1 } subscript Z B L 1 \\{Z_{BL}=1\\} { italic_Z start_POSTSUBSCRIPT italic_B italic_L end_POSTSUBSCRIPT = 1 } . To proceed with the shuffling process, we begin by uniformly selecting an item  i 1 = i subscript i 1 i i_{1}=i italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT = italic_i  and then randomly choose a comparison of the form  i i i italic_i  vs.  j j j italic_j \" from the data  Z Z \\mathcal{Z} caligraphic_Z , for any  j = i j i j\\neq i italic_j = italic_i  such that  ( i , j )  E i j E (i,j)\\in{\\mathcal{E}} ( italic_i , italic_j )  caligraphic_E . If the outcome of the comparison results in item  j j j italic_j  being preferred over item  i i i italic_i , we move to item  j j j italic_j  (i.e., set  i 2 = j subscript i 2 j i_{2}=j italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT = italic_j ) and continue this process from item  j , j j, italic_j ,  otherwise, we again repeat this step from item  i i i italic_i . This iterative procedure continues until we revisit item  i i i italic_i  after at least one departure, effectively completing a cycle (with  i l = i subscript i l i i_{l}=i italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT = italic_i ). Next, we proceed to remove the data corresponding to the forward cycle  { Z m 1 , i 1  i 2 , ... , Z m l  1 , i l  1  i l } subscript Z superscript m 1 subscript i 1 subscript i 2 ... subscript Z superscript m l 1 subscript i l 1 subscript i l \\{Z_{m^{1},{i_{1}i_{2}}},\\dots,Z_{m^{l-1},{i_{l-1}i_{l}}}\\} { italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , ... , italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT end_POSTSUBSCRIPT }  while adding new data points to  Z Z \\mathcal{Z} caligraphic_Z  corresponding to the backward cycle  { Z m 1 , i l  i l  1 , ... , Z m l  1 , i 2  i 1 } subscript Z superscript m 1 subscript i l subscript i l 1 ... subscript Z superscript m l 1 subscript i 2 subscript i 1 \\{Z_{m^{1},{i_{l}i_{l-1}}},\\dots,Z_{m^{l-1},{i_{2}i_{1}}}\\} { italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT italic_l - 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT , ... , italic_Z start_POSTSUBSCRIPT italic_m start_POSTSUPERSCRIPT italic_l - 1 end_POSTSUPERSCRIPT , italic_i start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT italic_i start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT end_POSTSUBSCRIPT } . This step is illustrated with the following example. Suppose that a cycle of length  3 3 3 3  is found in our dataset. Assume that in this cycle, item  j j j italic_j  is preferred over item  i i i italic_i  in a  i i i italic_i  vs.  j j j italic_j  comparison, followed by item  k k k italic_k  being preferred over item  j j j italic_j  in the  j j j italic_j  vs.  k k k italic_k  comparison, and finally, item  i i i italic_i  triumphs over item  k k k italic_k  in the  k k k italic_k  vs.  i i i italic_i  comparison. According to Kolmogorovs loop criterion, the forward loop probability product:  p i  j  p j  k  p k  i  subscript p i j subscript p j k subscript p k i p_{ij}\\cdot p_{jk}\\cdot p_{ki} italic_p start_POSTSUBSCRIPT italic_i italic_j end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_j italic_k end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_k italic_i end_POSTSUBSCRIPT  should be the same as the backward loop probability product  p i  k  p k  j  p j  i  subscript p i k subscript p k j subscript p j i p_{ik}\\cdot p_{kj}\\cdot p_{ji} italic_p start_POSTSUBSCRIPT italic_i italic_k end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_k italic_j end_POSTSUBSCRIPT  italic_p start_POSTSUBSCRIPT italic_j italic_i end_POSTSUBSCRIPT . This corresponds to replacing these three outcomes with the following comparisons: item  k k k italic_k  being preferred over item  i i i italic_i  in a  i i i italic_i  vs.  k k k italic_k  comparison, item  j j j italic_j  preferred over item  k k k italic_k  in a  k k k italic_k  vs.  j j j italic_j  comparison, and item  i i i italic_i  preferred over  j j j italic_j  in a  j j j italic_j  vs.  i i i italic_i  comparison. This entire process of finding a cycle and replacing the data is repeated for a sufficient number of iterations to ensure robust shuffling. Another example illustrating this data transformation process for a cycle of length  4 4 4 4  is shown in  Fig.   2"
        ]
    },
    "id_table_98": {
        "caption": "",
        "table": "A4.E113",
        "footnotes": [],
        "references": []
    },
    "id_table_99": {
        "caption": "",
        "table": "A4.E114",
        "footnotes": [],
        "references": [
            "This yields the bound  a  ( 1   )   ~ a 1  ~  a\\geq(1-\\nu)\\tilde{\\nu} italic_a  ( 1 - italic_ ) over~ start_ARG italic_ end_ARG  on  a a a italic_a  in  Proposition   6 . Now to show  Assumption   2  holds for this expander, we substitute  T = S c T superscript S c \\mathcal{T}=\\mathcal{S}^{\\mathrm{c}} caligraphic_T = caligraphic_S start_POSTSUPERSCRIPT roman_c end_POSTSUPERSCRIPT  in  Eq.   99  and which by a simple argument gives"
        ]
    },
    "id_table_100": {
        "caption": "",
        "table": "A4.Ex254",
        "footnotes": [],
        "references": []
    },
    "id_table_101": {
        "caption": "",
        "table": "A4.Ex255",
        "footnotes": [],
        "references": []
    },
    "id_table_102": {
        "caption": "",
        "table": "A4.Ex256",
        "footnotes": [],
        "references": []
    },
    "id_table_103": {
        "caption": "",
        "table": "A4.Ex259",
        "footnotes": [],
        "references": []
    }
}